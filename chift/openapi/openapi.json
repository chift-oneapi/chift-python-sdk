{
  "openapi": "3.1.0",
  "info": {
    "title": "Chift API",
    "description": "The Chift API is a universal API giving you access to financial data from the software of your clients. It helps software companies to offer native integrations to their clients without the effort needed to maintain those native integrations. By using the APIs (Accounting, POS, eCommerce) of Chift, you connect once and allow your clients to use their software packages.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.chift.eu",
      "description": "Chift"
    },
    {
      "url": "http://127.0.0.1:8000",
      "description": "Chift-Local"
    }
  ],
  "paths": {
    "/token": {
      "post": {
        "tags": [
          "General"
        ],
        "summary": "Get access token",
        "description": "This endpoint allows you to get an access token that can be used as a BEARER token to access the protected endpoints of this APIs. The token is valid for 30 minutes. You can refresh the token by requesting a new token.",
        "operationId": "generate_access_token_token_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/consumers": {
      "get": {
        "tags": [
          "Consumers"
        ],
        "summary": "Get consumers",
        "description": "Returns the list of consumers linked to your account.",
        "operationId": "consumers_get_consumers",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConsumerItem"
                  },
                  "title": "Response Consumers Get Consumers"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Consumers"
        ],
        "summary": "Create new consumer",
        "description": "Create a new consumer that will have the possibility to use the enabled integrations",
        "operationId": "consumers_create_consumer",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostConsumerItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerItem"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The specified name is not valid",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The specified redirect url is not valid",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/consumers/{consumerid}": {
      "get": {
        "tags": [
          "Consumers"
        ],
        "summary": "Get one consumer",
        "description": "Returns the specified consumer",
        "operationId": "consumers_get_consumer",
        "parameters": [
          {
            "name": "consumerid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumerid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerItem"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The consumer does not exist",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Consumers"
        ],
        "summary": "Update one consumer",
        "description": "Update one consumer in Chift",
        "operationId": "consumers_update_consumer",
        "parameters": [
          {
            "name": "consumerid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumerid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateConsumerItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerItem"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The consumer does not exist",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The specified redirect url is not valid",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      },
      "delete": {
        "tags": [
          "Consumers"
        ],
        "summary": "Delete one consumer",
        "description": "Endpoint that deletes one consumer in Chift",
        "operationId": "consumers_delete_consumer",
        "parameters": [
          {
            "name": "consumerid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumerid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The consumer does not exist",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumerid}/connections": {
      "get": {
        "tags": [
          "Connections"
        ],
        "summary": "Get connections",
        "description": "Returns a list of the connections (active or inactive) linked to your consumer",
        "operationId": "connections_get_connections",
        "parameters": [
          {
            "name": "consumerid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumerid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/backbone_api__app__routers__connections__ConnectionItem"
                  },
                  "title": "Response Connections Get Connections"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The consumer does not exist",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Connections"
        ],
        "summary": "Add new connection",
        "description": "Returns the url that can be used by your client to enable his integrations.",
        "operationId": "connections_create_connection",
        "parameters": [
          {
            "name": "consumerid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumerid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/PostConnectionItem-Input"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Item"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkItem"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "There is already an active connection for the integrationid {integrationid}. Only one can be created for each consumer for each integrationid.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The consumer does not exist",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumerid}/connections/{connectionid}": {
      "patch": {
        "tags": [
          "Connections"
        ],
        "summary": "Update an existing connection",
        "description": "Returns the url that can be used by your client to update the connection",
        "operationId": "connections_update_connection",
        "parameters": [
          {
            "name": "consumerid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumerid"
            }
          },
          {
            "name": "connectionid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Connectionid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/PatchConnectionItem"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Item"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkItem"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The specified connectionid is not valid",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The connection does not exist",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Connections"
        ],
        "summary": "Delete one connection",
        "description": "Endpoint that deletes one connection of a consumer in Chift",
        "operationId": "connections_delete_connection",
        "parameters": [
          {
            "name": "consumerid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumerid"
            }
          },
          {
            "name": "connectionid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Connectionid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The specified connectionid is not valid",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The connection does not exist",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/integrations": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "summary": "Get list of integrations",
        "description": "Returns a list of integrations (active and inactive) available for your account",
        "operationId": "integrations_get_integrations",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Status"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntegrationItem"
                  },
                  "title": "Response Integrations Get Integrations"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/integrations/{integrationid}/{image_type}.json": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "summary": "Returns a logo/icon of an integration (as base64)",
        "operationId": "integrations_get_integration_logo_json",
        "parameters": [
          {
            "name": "integrationid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Integrationid"
            }
          },
          {
            "name": "image_type",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ImageType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoImage"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The {image_type} doesn't exist.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/list": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Get list of possible webhooks",
        "description": "Returns a list of webhook that are available for your account",
        "operationId": "webhooks_get_webhook_types",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookItem"
                  },
                  "title": "Response Webhooks Get Webhook Types"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Add new webhook instance",
        "description": "Returns the created webhook instance",
        "operationId": "webhooks_create_webhook",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookInstancePostItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookInstanceGetItem"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "There is already an existing webhook with the same url and type",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Get list of webhook instances",
        "description": "Returns a list of webhook instances (active/inactive) for your account",
        "operationId": "webhooks_get_webhooks",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Status"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookInstanceGetItem"
                  },
                  "title": "Response Webhooks Get Webhooks"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/{webhookid}": {
      "delete": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Delete one webhook",
        "description": "Endpoint that deletes one existing webhook",
        "operationId": "webhooks_delete_webhook",
        "parameters": [
          {
            "name": "webhookid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Webhookid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The specified webhook could not be found for this account",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Get one webhook instance",
        "description": "Returns one webhook instance",
        "operationId": "webhooks_get_webhook",
        "parameters": [
          {
            "name": "webhookid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Webhookid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookInstanceGetItem"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The specified webhook could not be found for this account",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Update one webhook",
        "description": "Update one webhook in Chift",
        "operationId": "webhooks_update_webhook",
        "parameters": [
          {
            "name": "webhookid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Webhookid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookInstancePatchItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookInstanceGetItem"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The specified url is not valid",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The specified webhook could not be found for this account",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/{webhookid}/logs": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Get list of webhook logs for one webhook",
        "description": "Returns a list of webhook logs for one webhook for your account",
        "operationId": "webhooks_get_webhook_logs",
        "parameters": [
          {
            "name": "webhookid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Webhookid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookLogItem"
                  },
                  "title": "Response Webhooks Get Webhook Logs"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The specified webhook could not be found for this account",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/syncs": {
      "get": {
        "tags": [
          "Syncs"
        ],
        "summary": "Get syncs",
        "description": "Returns the syncs",
        "operationId": "syncs_get_syncs",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadSyncItem"
                  },
                  "title": "Response Syncs Get Syncs"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Syncs"
        ],
        "summary": "Create sync",
        "description": "Returns the created sync",
        "operationId": "syncs_post_sync",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSyncItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadSyncItem"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Syncs"
        ],
        "summary": "Update existing sync",
        "description": "Update existing sync & related flows and mappings",
        "operationId": "syncs_update_sync",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSyncItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadSyncItem"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/syncs/{syncid}": {
      "get": {
        "tags": [
          "Syncs"
        ],
        "summary": "Get sync",
        "description": "Returns a sync by id",
        "operationId": "syncs_get_sync",
        "parameters": [
          {
            "name": "syncid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Syncid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadSyncItem"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The sync does not exist",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/syncs/{syncid}/flows/{flowid}/event": {
      "post": {
        "tags": [
          "Syncs"
        ],
        "summary": "Send a custom event for a specific flow",
        "description": "Route that can be used to send a specific event for a flow",
        "operationId": "syncs_send_custom_event",
        "parameters": [
          {
            "name": "syncid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Syncid"
            }
          },
          {
            "name": "flowid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flowid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostSyncFlowEvent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriggerResponse"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "You cannot force the execution for all consumers",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The chain does not exist",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while validating context data; the field {field.get('name')} does not seem to be of type {fieldtype}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/consumers/{consumerid}/syncs/{syncid}/flows/{flowid}/executions": {
      "get": {
        "tags": [
          "Consumers"
        ],
        "summary": "Get executions information for one consumer/flow/sync",
        "description": "Returns executions information for one consumer/flow/sync",
        "operationId": "syncs_get_consumer_executions",
        "parameters": [
          {
            "name": "consumerid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumerid"
            }
          },
          {
            "name": "syncid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Syncid"
            }
          },
          {
            "name": "flowid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Flowid"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChainExecutionItem"
                  },
                  "title": "Response Syncs Get Consumer Executions"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The flow does not exist",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/syncs/{syncid}/flows/{flowid}/executions/{executionid}": {
      "get": {
        "tags": [
          "Syncs"
        ],
        "summary": "Get execution start/end timestamp",
        "description": "Get execution start/end timestamp",
        "operationId": "syncs_get_execution",
        "parameters": [
          {
            "name": "syncid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Syncid"
            }
          },
          {
            "name": "flowid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flowid"
            }
          },
          {
            "name": "executionid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Executionid"
            }
          },
          {
            "name": "consumerid",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Consumerid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChainExecutionItem"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The execution does not exist",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumerid}/syncs": {
      "post": {
        "tags": [
          "Consumers"
        ],
        "summary": "Retrieve the url of a sync for a specific consumer",
        "description": "This route can be used to retrieve the url that can be shared with your clients to allow them to connect as specified in a sync",
        "operationId": "syncs_create_synctoconsumer",
        "parameters": [
          {
            "name": "consumerid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumerid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConsumerSyncItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkSyncItem"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The flow does not exist",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "{integrationid} is not part of the selected integrations of the sync",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumerid}/syncs/{syncid}": {
      "get": {
        "tags": [
          "Consumers"
        ],
        "summary": "Get sync information for one consumer",
        "description": "Returns sync information (creation date, mapping) related to a specific consumer",
        "operationId": "syncs_get_syncconsumer",
        "parameters": [
          {
            "name": "consumerid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumerid"
            }
          },
          {
            "name": "syncid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Syncid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyncConsumerItem"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The consumer is not configured for this sync",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Syncs"
        ],
        "summary": "Update flow mappings for a specific consumer",
        "description": "Route that can be used to update the flow mappings for a specific consumer. It will replace the existing configuration with the provided one.",
        "operationId": "syncs_update_synctoconsumer",
        "parameters": [
          {
            "name": "syncid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Syncid"
            }
          },
          {
            "name": "consumerid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumerid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ReadSyncMappingItem"
                },
                "title": "Body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The flow is not yet activated for this consumer",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The body should be a list",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/consumers/{consumerid}/syncs/{syncid}/flows/{flowid}/enable": {
      "post": {
        "tags": [
          "Syncs"
        ],
        "summary": "Enable a flow for a specific consumer",
        "description": "Route that can be used to enable a flow for a specific consumer",
        "operationId": "syncs_enable_syncconsumer",
        "parameters": [
          {
            "name": "syncid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Syncid"
            }
          },
          {
            "name": "flowid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Flowid"
            }
          },
          {
            "name": "consumerid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumerid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnableFlowConsumer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The consumer does not exist",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Impossible to enable the flow as the flow requires configuration fields",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while validating context data; the field {field_name} does not seem to be of type {field_type}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/consumers/{consumerid}/syncs/{syncid}/flows/{flowid}": {
      "patch": {
        "tags": [
          "Syncs"
        ],
        "summary": "Update flow settings for a specific consumer",
        "description": "Route that can be used to update the flow configuration for a specific consumer. It will merge the new configuration with the existing one.",
        "operationId": "syncs_update_flowtoconsumer",
        "parameters": [
          {
            "name": "syncid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Syncid"
            }
          },
          {
            "name": "flowid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Flowid"
            }
          },
          {
            "name": "consumerid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumerid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFlowConsumer"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The flow is not yet activated for this consumer",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while validating context data; the field {field_name} does not seem to be of type {field_type}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/datastores": {
      "get": {
        "tags": [
          "Datastores"
        ],
        "summary": "Get list of datastores",
        "description": "Returns a list of datastores (active and inactive) available for your account",
        "operationId": "datastores_get_datastores",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Status"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataStoreItem"
                  },
                  "title": "Response Datastores Get Datastores"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumerid}/datastore/{datastoreid}/data": {
      "get": {
        "tags": [
          "Consumers"
        ],
        "summary": "Get execution data for a specific consumer and a specific datastore",
        "description": "Returns execution data related to a consumer and a datastore. Queryparams can be used to filter the restuls by datastore column or by executionid",
        "operationId": "datastores_get_consumer_and_datastoredata",
        "parameters": [
          {
            "name": "consumerid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumerid"
            }
          },
          {
            "name": "datastoreid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Datastoreid"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "executionid",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Executionid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataItemOut"
                  },
                  "title": "Response Datastores Get Consumer And Datastoredata"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The datastore does not exist",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Consumers"
        ],
        "summary": "Add data into a datastore for a consumer",
        "description": "Endpoint that can be used to add data into a datastore for a specific consumer",
        "operationId": "datastores_create_consumer_datastoredata",
        "parameters": [
          {
            "name": "consumerid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumerid"
            }
          },
          {
            "name": "datastoreid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Datastoreid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DataItem"
                },
                "title": "Datas"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataItemOut"
                  },
                  "title": "Response Datastores Create Consumer Datastoredata"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The datastore does not exist",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The input does not match the definition of the datastore",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/consumers/{consumerid}/datastore/{datastoreid}/data/{datastoredataid}": {
      "patch": {
        "tags": [
          "Consumers"
        ],
        "summary": "Update execution data for a specific consumer and a specific datastore",
        "description": "Update and returns execution data related to a consumer and a datastore",
        "operationId": "datastores_update_consumer_datastoredata",
        "parameters": [
          {
            "name": "consumerid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumerid"
            }
          },
          {
            "name": "datastoreid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Datastoreid"
            }
          },
          {
            "name": "datastoredataid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Datastoredataid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataItemOut"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The datastoredata does not exist",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The input does not match the definition of the datastore",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      },
      "delete": {
        "tags": [
          "Consumers"
        ],
        "summary": "Delete execution data for a specific consumer and a specific datastore",
        "description": "Delete execution data related to a consumer and a datastore",
        "operationId": "datastores_delete_consumer_datastoredata",
        "parameters": [
          {
            "name": "consumerid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumerid"
            }
          },
          {
            "name": "datastoreid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Datastoreid"
            }
          },
          {
            "name": "datastoredataid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Datastoredataid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The datastoredata does not exist",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/issues": {
      "get": {
        "tags": [
          "Issues"
        ],
        "summary": "Get issues",
        "description": "Returns a list of the issues of your account. Filters can be used to query specific results. Filters can be combined and are inclusive.",
        "operationId": "issues_get_issues",
        "parameters": [
          {
            "name": "created_on",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "The search query to filter issues by creation date.",
              "title": "Created On"
            },
            "description": "The search query to filter issues by creation date."
          },
          {
            "name": "last_seen_on",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "The search query to filter issues by last seen date.",
              "title": "Last Seen On"
            },
            "description": "The search query to filter issues by last seen date."
          },
          {
            "name": "error_code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The search query to filter issues by error code.",
              "title": "Error Code"
            },
            "description": "The search query to filter issues by error code."
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/IssueStatus",
              "description": "The search query to filter issues by issue status.",
              "default": "all"
            },
            "description": "The search query to filter issues by issue status."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IssueItem"
                  },
                  "title": "Response Issues Get Issues"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/issues": {
      "get": {
        "tags": [
          "Issues"
        ],
        "summary": "Get issues by consumer id",
        "description": "Returns a list of the issues linked to specific consumer. Filters can be used to query specific results. Filters can be combined and are inclusive.",
        "operationId": "issues_get_issues_by_consumer_id",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Consumer Id"
            }
          },
          {
            "name": "created_on",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "The search query to filter issues by creation date.",
              "title": "Created On"
            },
            "description": "The search query to filter issues by creation date."
          },
          {
            "name": "last_seen_on",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "The search query to filter issues by last seen date.",
              "title": "Last Seen On"
            },
            "description": "The search query to filter issues by last seen date."
          },
          {
            "name": "error_code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The search query to filter issues by error code.",
              "title": "Error Code"
            },
            "description": "The search query to filter issues by error code."
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/IssueStatus",
              "description": "The search query to filter issues by issue status.",
              "default": "all"
            },
            "description": "The search query to filter issues by issue status."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IssueItem"
                  },
                  "title": "Response Issues Get Issues By Consumer Id"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The consumer does not exist.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/folders": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get Folders",
        "operationId": "accounting_get_folders",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FolderItem"
                  },
                  "title": "Response Accounting Get Folders"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/bookyears": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get Bookyears",
        "operationId": "accounting_get_bookyears",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_BookYear_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/analytic-plans": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get Analytic Plans",
        "operationId": "accounting_get_analytic_plans",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_AnalyticPlanItem_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/clients": {
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Create client",
        "description": "Create a new client",
        "operationId": "accounting_create_client",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          },
          {
            "name": "force_merge",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Force Merge"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientItemIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientItemOut"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "A client/supplier already exist with the same code/id in the accounting system.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get clients",
        "description": "Returns a list of accounting clients",
        "operationId": "accounting_get_clients",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "updated_after",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Updated After"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_ClientItemOut_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/clients/{client_id}": {
      "patch": {
        "tags": [
          "Accounting"
        ],
        "summary": "Update client",
        "description": "Endpoint that gives the possibility to update an accounting client",
        "operationId": "accounting_update_client",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Client Id"
            }
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientItemUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientItemOut"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The VAT number doesn't seem to be correct. Please remove dots and whitespaces. The expected format is the following: BE0784930037",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The client/supplier doesn't exist in the accounting system.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get one client",
        "description": "Returns a specific accounting client",
        "operationId": "accounting_get_client",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Client Id"
            }
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientItemOut"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The client/supplier doesn't exist in the accounting system.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/suppliers": {
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Create supplier",
        "description": "Create a new supplier",
        "operationId": "accounting_create_supplier",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          },
          {
            "name": "force_merge",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Force Merge"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierItemIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierItemOut"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "A client/supplier already exist with the same code/id in the accounting system.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get suppliers",
        "description": "Returns a list of accounting suppliers",
        "operationId": "accounting_get_suppliers",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "updated_after",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Updated After"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_SupplierItemOut_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/suppliers/{supplier_id}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get one supplier",
        "description": "Returns one accounting supplier",
        "operationId": "accounting_get_supplier",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "supplier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Supplier Id"
            }
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierItemOut"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The client/supplier doesn't exist in the accounting system.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Accounting"
        ],
        "summary": "Update one supplier",
        "description": "Update an accounting supplier",
        "operationId": "accounting_update_supplier",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "supplier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Supplier Id"
            }
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierItemUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierItemOut"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The VAT number doesn't seem to be correct. Please remove dots and whitespaces. The expected format is the following: BE0784930037",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The client/supplier doesn't exist in the accounting system.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/invoices": {
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Create sale/purchase entry",
        "description": "Create a new sale/purchase accounting entry",
        "operationId": "accounting_create_invoice",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          },
          {
            "name": "force_financial_period",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Force Financial Period"
            }
          },
          {
            "name": "regroup_lines",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/BoolParam"
                },
                {
                  "type": "null"
                }
              ],
              "default": "true",
              "title": "Regroup Lines"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceItemInMonoAnalyticPlan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceItemOutMonoAnalyticPlan"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The document is not a valid base64 string representing a PDF.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The currency 'x' doesn't exist in the accounting system.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/invoices/multi-analytic-plans": {
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Create sale/purchase entry (Multiple plans)",
        "description": "Create a new sale/purchase entry with multiple analytic plans in the accounting",
        "operationId": "accounting_create_invoice_multiple_plans",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          },
          {
            "name": "force_financial_period",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Force Financial Period"
            }
          },
          {
            "name": "regroup_lines",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/BoolParam"
                },
                {
                  "type": "null"
                }
              ],
              "default": "true",
              "title": "Regroup Lines"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceItemInMultiAnalyticPlans"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceItemOutMultiAnalyticPlans"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The document is not a valid base64 string representing a PDF.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The currency 'x' doesn't exist in the accounting system.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/invoices/type/{invoice_type}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get invoices by type (sale/purchase entries)",
        "description": "Returns a list of invoices by a specific type (=sale/purchase entries). Each line of the invoice will include the analytic account linked to default analytic plan. Optionally dates can be defined to retrieve invoice from a certain date to another date",
        "operationId": "accounting_get_invoices_by_type",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "invoice_type",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/backbone_common__models__accounting__common__InvoiceType"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          },
          {
            "name": "journal_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Journal Ids"
            }
          },
          {
            "name": "include_payments",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/BoolParam"
                },
                {
                  "type": "null"
                }
              ],
              "default": "false",
              "title": "Include Payments"
            }
          },
          {
            "name": "payment_status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PaymentStatus-Input"
                },
                {
                  "type": "null"
                }
              ],
              "default": "all",
              "title": "Payment Status"
            }
          },
          {
            "name": "updated_after",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Updated After"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_InvoiceItemOutMonoAnalyticPlan_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "You must provide an invoice type.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/invoices/multi-analytic-plans/type/{invoice_type}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get invoices by type (sale/purchase entries - Multiple Analytic Plans)",
        "description": "Returns a list of invoices by a specific type (=sale/purchase entries) with invoice lines including multiple analytic plans. Optionally dates can be defined to retrieve invoice from a certain date to another date",
        "operationId": "accounting_get_invoices_by_type_multi_analytic_plans",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "invoice_type",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/backbone_common__models__accounting__common__InvoiceType"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          },
          {
            "name": "journal_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Journal Ids"
            }
          },
          {
            "name": "include_payments",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/BoolParam"
                },
                {
                  "type": "null"
                }
              ],
              "default": "false",
              "title": "Include Payments"
            }
          },
          {
            "name": "payment_status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PaymentStatus-Input"
                },
                {
                  "type": "null"
                }
              ],
              "default": "all",
              "title": "Payment Status"
            }
          },
          {
            "name": "updated_after",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Updated After"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_InvoiceItemOutMultiAnalyticPlans_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "You must provide an invoice type.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/invoices/{invoice_id}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get one invoice (sale/purchase entry)",
        "description": "Returns a specific invoice (sale/purchase entry). Each line will include the analytic account linked to default analytic plan",
        "operationId": "accounting_get_invoice",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Invoice Id"
            }
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          },
          {
            "name": "include_payments",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/BoolParam"
                },
                {
                  "type": "null"
                }
              ],
              "default": "false",
              "title": "Include Payments"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceItemOutMonoAnalyticPlan"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The ID of the invoice doesn't have the correct format.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The invoice doesn't exist in the accounting system.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/invoices/multi-analytic-plans/{invoice_id}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get one invoice (sale/purchase entry - Multiple Analytic Plans)",
        "description": "Returns a specific invoice (=sale/purchase entry) with invoice lines /oincluding multiple analytic plans",
        "operationId": "accounting_get_invoice_multi_analytic_plans",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Invoice Id"
            }
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          },
          {
            "name": "include_payments",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/BoolParam"
                },
                {
                  "type": "null"
                }
              ],
              "default": "false",
              "title": "Include Payments"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceItemOutMultiAnalyticPlans"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The ID of the invoice doesn't have the correct format.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The invoice doesn't exist in the accounting system.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/accounts": {
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Create ledger account",
        "description": "Create a new ledger account in the chart of accounts",
        "operationId": "accounting_create_ledger_account",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LedgerAccountItemIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountItem"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "A ledger account already exists with the same number in the accounting system.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/analytic-accounts": {
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Create analytic account",
        "description": "Create a new analytic account in the default analytic plan",
        "operationId": "accounting_create_analytic_account",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalyticAccountItemIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticAccountItemOut"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "An analytic account already exists with the same code in the accounting system.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get analytic accounts",
        "description": "Returns all analytic accounts of the default analytic plan",
        "operationId": "accounting_get_analytic_accounts",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_AnalyticAccountItemOut_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/analytic-accounts/multi-analytic-plans/{analytic_plan}": {
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Create analytic account (Multiple Analytic Plans)",
        "description": "Create a new analytic account in a specific analytic plan",
        "operationId": "accounting_create_analytic_account_multi_plans",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "analytic_plan",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Analytic Plan"
            }
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalyticAccountItemIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticAccountItemOutMultiAnalyticPlans"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "An analytic account already exists with the same code in the accounting system.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/analytic-accounts/{analytic_account_id}": {
      "patch": {
        "tags": [
          "Accounting"
        ],
        "summary": "Update analytic account",
        "description": "Update one specific analytic account in the default analytic plan",
        "operationId": "accounting_update_analytic_account",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "analytic_account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Analytic Account Id"
            }
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalyticAccountItemUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticAccountItemOut"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The analytic account doesn't exist in the accounting system.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get analytic account",
        "description": "Returns one specific analytic account of the default analytic plan",
        "operationId": "accounting_get_analytic_account",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "analytic_account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Analytic Account Id"
            }
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticAccountItemOut"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The analytic account doesn't exist in the accounting system.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/analytic-accounts/{analytic_account_id}/multi-analytic-plans/{analytic_plan}": {
      "patch": {
        "tags": [
          "Accounting"
        ],
        "summary": "Update analytic account (Multiple Analytic Plans)",
        "description": "Update one specific analytic account in a specific analytic plan",
        "operationId": "accounting_update_analytic_account_multi_plans",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "analytic_account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Analytic Account Id"
            }
          },
          {
            "name": "analytic_plan",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Analytic Plan"
            }
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalyticAccountItemUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticAccountItemOutMultiAnalyticPlans"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The analytic account doesn't exist in the accounting system.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get analytic account (Multiple Analytic Plans)",
        "description": "Returns one specific analytic account of a specific analytic plan",
        "operationId": "accounting_get_analytic_account_multi_plans",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "analytic_account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Analytic Account Id"
            }
          },
          {
            "name": "analytic_plan",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Analytic Plan"
            }
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticAccountItemOutMultiAnalyticPlans"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The analytic account doesn't exist in the accounting system.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/analytic-accounts/multi-analytic-plans": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get analytic accounts (Multiple Analytic Plans)",
        "description": "Returns all analytic accounts of all analytic plans",
        "operationId": "accounting_get_analytic_accounts_multi_plans",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_AnalyticAccountItemOutMultiAnalyticPlans_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/journal/entries": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get journal entries",
        "description": "Returns a list of journal entries. Each item will include the analytic account linked to default analytic plan. Optionally, you can retrieve journal entries linked to a specific client/supplier using the partner_id parameter. When retrieving entries linked to a specific client/supplier, some journal items of an entry (e.g. a miscellaneous operation) could be excluding resulting in an unbalanced journal entry.",
        "operationId": "accounting_get_journal_entries",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          },
          {
            "name": "unposted_allowed",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/BoolParam"
            }
          },
          {
            "name": "journal_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Journal Id"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          },
          {
            "name": "updated_after",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Updated After"
            }
          },
          {
            "name": "partner_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Partner Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_JournalEntryMonoAnalyticPlan_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "You can retrieve maximum 3 months of data at once. The difference between 'date_from' and 'date_to' is at maximum 3 months when 'updated_after' parameter is not provided.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Create Journal Entry [Deprecated]",
        "description": "Create a new Journal Entry in the accounting system",
        "operationId": "accounting_create_journal_entry",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JournalEntryIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalEntryMultiAnalyticPlan"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "A sale/purchase entry cannot be linked to multiple partner accounts.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Debit and credit cannot be both positive.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Unprocessable Entity"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The currency doesn't exist or is not active in the accounting system.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/journal/entries/multi-analytic-plans": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get journal entries (Multiple Analytic Plans)",
        "description": "Returns a list of journal entries with invoice items including multiple analytic plan.Optionally, you can retrieve journal entries linked to a specific client/supplier using the partner_id parameter. When retrieving entries linked to a specific client/supplier, some journal items of an entry (e.g. a miscellaneous operation) could be excluding resulting in an unbalanced journal entry.",
        "operationId": "accounting_get_journal_entries_multi_plan",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          },
          {
            "name": "unposted_allowed",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/BoolParam"
            }
          },
          {
            "name": "journal_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Journal Id"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          },
          {
            "name": "updated_after",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Updated After"
            }
          },
          {
            "name": "partner_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Partner Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_JournalEntryMultiAnalyticPlan_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "You can retrieve maximum 3 months of data at once. The difference between 'date_from' and 'date_to' is at maximum 3 months when 'updated_after' parameter is not provided.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/journal/entries/{journal_entry_id}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get one journal entry",
        "description": "Returns a single journal entry by ID.",
        "operationId": "accounting_get_journal_entry",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "journal_entry_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Journal Entry Id"
            }
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalEntryMultiAnalyticPlan"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The entry doesn't exist in the accounting system.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/journal-entries": {
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Create Journal Entry",
        "description": "Create a new Journal Entry in the accounting system",
        "operationId": "accounting_create_generic_journal_entry",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          },
          {
            "name": "force_currency_exchange",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/BoolParam"
                },
                {
                  "type": "null"
                }
              ],
              "default": "false",
              "title": "Force Currency Exchange"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenericJournalEntry"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalEntryMultiAnalyticPlan"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The entry is not balanced.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The currency doesn't exist or is not active in the accounting system.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Debit and credit cannot be both positive.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/invoices/id/{invoice_id}/payments": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get payments by invoice ID",
        "description": "Get payments of a specific invoice based on its ID",
        "operationId": "accounting_get_payments_by_invoice",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Invoice Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_Payment_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The ID of the invoice doesn't have the correct format.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The given invoice doesn't exist in the accounting system.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/journals": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get journals",
        "description": "Get journals existing in the accounting system",
        "operationId": "accounting_get_journals",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_Journal_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/journal": {
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Create journal",
        "description": "Create a journal in the accounting system",
        "operationId": "accounting_create_journal",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JournalIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Journal"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "A journal already exists with the same code in the accounting system.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The counterpart account doesn't exist in the accounting system.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/vat-codes": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get vat codes",
        "description": "Get vat codes existing in the accounting system",
        "operationId": "accounting_get_vat_codes",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_AccountingVatCode_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/miscellaneous-operation": {
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Create miscellaneous operation",
        "description": "Create a new miscellaneous operation",
        "operationId": "accounting_create_miscellaneous_operation",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MiscellaneousOperationIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MiscellaneousOperationOut"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The account 'x' cannot be used for this type of line.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The currency 'x' doesn't exist in the accounting system.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get miscellaneous operations",
        "description": "Get miscellaneous operations from the the accounting system",
        "operationId": "accounting_get_miscellaneous_operations",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          },
          {
            "name": "journal_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Journal Ids"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_MiscellaneousOperationOut_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/miscellaneous-operation/{operation_id}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get one miscellaneous operation",
        "description": "Get a specific miscellaneous operation from the the accounting system",
        "operationId": "accounting_get_miscellaneous_operation",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "operation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Operation Id"
            }
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MiscellaneousOperationOut"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/matching": {
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Match entries",
        "description": "Match existing entries in the accounting system",
        "operationId": "accounting_match_entries",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MatchingIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatchingOut"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Entry 'x' doesn't have the correct status.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Entry 'x' doesn't exist in the accounting system.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/matching-multiple": {
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Match multiple entries",
        "description": "Match existing entries in the accounting system",
        "operationId": "accounting_match_entries_multiple",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleMatchingIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MultipleMatchingOut"
                  },
                  "title": "Response Accounting Match Entries Multiple"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Entry 'x' doesn't have the correct status.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Entry 'x' doesn't exist in the accounting system.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/invoices/pdf/{invoice_id}": {
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Attach a document (PDF)",
        "description": "Attach a document (PDF) to the invoice entry",
        "operationId": "accounting_add_attachment",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Invoice Id"
            }
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          },
          {
            "name": "overwrite_existing",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/BoolParam"
                },
                {
                  "type": "null"
                }
              ],
              "default": "false",
              "title": "Overwrite Existing"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentItem"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "An attachment already exists for this invoice.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The invoice doesn't exist in the accounting system.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/attachments": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get attachments",
        "description": "Returns a list of all attachments linked to an accounting entry",
        "operationId": "accounting_get_attachments",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DocumentType"
            }
          },
          {
            "name": "document_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Document Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_AttachmentItemOut_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/chart-of-accounts": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get chart of accounts",
        "description": "Get all accounts in the chart of accounts",
        "operationId": "accounting_get_chart_of_accounts",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          },
          {
            "name": "classes",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Classes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_AccountItem_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/chart-of-accounts/balance": {
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get the balance of accounts",
        "description": "Get the balance of accounts in the accounting plan (chart of accounts) between specific months",
        "operationId": "accounting_get_accounts_balances",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountBalanceFilter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_AccountBalance_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/employees": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get employees",
        "description": "Returns a list of the employees linked to the company",
        "operationId": "accounting_get_employees",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_EmployeeItem_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/financial-entry": {
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Create a financial entry [Deprecated]",
        "description": "Create a new financial entry (Bank or Cash operation)",
        "operationId": "accounting_create_financial_entry",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          },
          {
            "name": "financial_counterpart_account",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Financial Counterpart Account"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialEntryItemInOld"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialEntryItemOutOld"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The account 'x' cannot be used for this type of line.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The currency 'x' doesn't exist in the accounting system.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/financial-entries": {
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Create a financial entry",
        "description": "Create a new financial entry (Bank or Cash operation)",
        "operationId": "accounting_create_financial_entries",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          },
          {
            "name": "financial_counterpart_account",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Financial Counterpart Account"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialEntryItemIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialEntryItemOut"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The account 'x' cannot be used for this type of line.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The currency 'x' doesn't exist in the accounting system.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/accounting/outstandings": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get clients/suppliers outstanding items",
        "description": "Returns a list of all clients/suppliers outstanding items",
        "operationId": "accounting_get_outstandings",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "folder_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Folder Id"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/OutstandingType"
            }
          },
          {
            "name": "unposted_allowed",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/BoolParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_OutstandingItem_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/pos/orders": {
      "get": {
        "tags": [
          "Point of Sale"
        ],
        "summary": "Get orders",
        "description": "Returns a list of the orders",
        "operationId": "pos_get_orders",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "date_from",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "Date To"
            }
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location Id"
            }
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/States",
              "default": "all"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_POSOrderItem_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "502": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to authenticate to {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Gateway"
          },
          "405": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The resource {Method} - {Resource} is not supported by {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/pos/orders/{order_id}": {
      "get": {
        "tags": [
          "Point of Sale"
        ],
        "summary": "Get one order",
        "description": "Returns a single order",
        "operationId": "pos_get_order",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Order Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/POSOrderItem"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "502": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to authenticate to {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Gateway"
          },
          "405": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The resource {Method} - {Resource} is not supported by {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The order with id {OrderId} could not be found",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Point of Sale"
        ],
        "summary": "Update order",
        "description": "Update one order",
        "operationId": "pos_update_pos_customer",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Order Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/POSOrderItem"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "502": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to authenticate to {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Gateway"
          },
          "405": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The resource {Method} - {Resource} is not supported by {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/pos/locations": {
      "get": {
        "tags": [
          "Point of Sale"
        ],
        "summary": "Get locations",
        "description": "Returns a list of the locations",
        "operationId": "pos_get_locations",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_POSLocationItem_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "502": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to authenticate to {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Gateway"
          },
          "405": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The resource {Method} - {Resource} is not supported by {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/pos/payments": {
      "get": {
        "tags": [
          "Point of Sale"
        ],
        "summary": "Get payments",
        "description": "Returns a list of payments",
        "operationId": "pos_get_payments",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "date_from",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "Date To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_POSPaymentItem_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "502": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to authenticate to {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Gateway"
          },
          "405": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The resource {Method} - {Resource} is not supported by {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/pos/sales": {
      "get": {
        "tags": [
          "Point of Sale"
        ],
        "summary": "Get sales",
        "description": "Returns the summary of the sales",
        "operationId": "pos_get_sales",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "Date To"
            }
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesItem"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "502": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to authenticate to {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Gateway"
          },
          "405": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The resource {Method} - {Resource} is not supported by {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/pos/payment-methods": {
      "get": {
        "tags": [
          "Point of Sale"
        ],
        "summary": "Get payment methods",
        "description": "Returns the list of payment methods",
        "operationId": "pos_get_payments_methods",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_PaymentMethods_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "502": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to authenticate to {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Gateway"
          },
          "405": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The resource {Method} - {Resource} is not supported by {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/pos/customers": {
      "get": {
        "tags": [
          "Point of Sale",
          "customers"
        ],
        "summary": "Get customers",
        "description": "Returns the list of customers",
        "operationId": "pos_get_customers",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Email"
            }
          },
          {
            "name": "phone",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Phone"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_POSCustomerItem_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "502": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to authenticate to {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Gateway"
          },
          "405": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The resource {Method} - {Resource} is not supported by {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Point of Sale"
        ],
        "summary": "Create one customer",
        "description": "Create a customer",
        "operationId": "pos_create_pos_customer",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSCreateCustomerItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/POSCustomerItem"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "502": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to authenticate to {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Gateway"
          },
          "405": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The resource {Method} - {Resource} is not supported by {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/pos/customers/{customer_id}": {
      "get": {
        "tags": [
          "Point of Sale",
          "customers"
        ],
        "summary": "Get one customer",
        "description": "Returns a specific customer",
        "operationId": "pos_get_customer",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Customer Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/POSCustomerItem"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "502": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to authenticate to {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Gateway"
          },
          "405": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The resource {Method} - {Resource} is not supported by {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The customer with id {CustomerId} could not be found",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/pos/product-categories": {
      "get": {
        "tags": [
          "Point of Sale"
        ],
        "summary": "Get product categories",
        "description": "Returns a list of product categories",
        "operationId": "pos_get_product_categories",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location Id"
            }
          },
          {
            "name": "only_parents",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BoolParam",
              "default": "false"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_ProductCategoryItem_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "502": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to authenticate to {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Gateway"
          },
          "405": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The resource {Method} - {Resource} is not supported by {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/pos/products": {
      "get": {
        "tags": [
          "Point of Sale"
        ],
        "summary": "Get products",
        "description": "Returns a list of products",
        "operationId": "pos_get_products",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_POSProductItem_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "502": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to authenticate to {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Gateway"
          },
          "405": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The resource {Method} - {Resource} is not supported by {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/pos/accounting-categories": {
      "get": {
        "tags": [
          "Point of Sale"
        ],
        "summary": "Get accounting categories",
        "description": "Returns a list of accounting categories. When not available for a specific POS, it will return the same values as the product categories.",
        "operationId": "pos_get_accounting_categories",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_AccountingCategoryItem_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "502": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to authenticate to {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Gateway"
          },
          "405": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The resource {Method} - {Resource} is not supported by {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/pos/closures/{date}": {
      "get": {
        "tags": [
          "Point of Sale"
        ],
        "summary": "Get closure info for a specific day",
        "description": "Returns whether the closure was already done for a specific day or not",
        "operationId": "pos_get_closure",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "Date"
            }
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClosureItem"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "502": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to authenticate to {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Gateway"
          },
          "405": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The resource {Method} - {Resource} is not supported by {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/pos/objectives": {
      "get": {
        "tags": [
          "Point of Sale"
        ],
        "summary": "Get objectives",
        "description": "Return the total amount and the tax amount for a specific period",
        "operationId": "pos_get_objectives",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Size"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "Date To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectivesItem"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "502": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to authenticate to {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Gateway"
          },
          "405": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The resource {Method} - {Resource} is not supported by {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/commerce/customers": {
      "get": {
        "tags": [
          "eCommerce"
        ],
        "summary": "Get all customers",
        "description": "Returns a list of all the customers",
        "operationId": "ecommerce_get_customers",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_CommerceCustomerItem_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/commerce/customers/{customer_id}": {
      "get": {
        "tags": [
          "eCommerce"
        ],
        "summary": "Get one specific customer",
        "description": "Returns a specific customer",
        "operationId": "ecommerce_get_customer",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Customer Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommerceCustomerItem"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The customer doesn't exist.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/commerce/products": {
      "get": {
        "tags": [
          "eCommerce"
        ],
        "summary": "Get all products",
        "description": "Returns a list of all the products",
        "operationId": "ecommerce_get_products",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_ProductItem_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/commerce/products/{product_id}": {
      "get": {
        "tags": [
          "eCommerce"
        ],
        "summary": "Get one specific product",
        "description": "Returns a specific product",
        "operationId": "ecommerce_get_product",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Product Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductItem-Output"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The product doesn't exist.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/commerce/variants/{variant_id}": {
      "get": {
        "tags": [
          "eCommerce"
        ],
        "summary": "Get one specific product variant",
        "description": "Returns a specific product variant",
        "operationId": "ecommerce_get_variant",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "variant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Variant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VariantItem"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The variant doesn't exist.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/commerce/variants/set_quantity/{variant_id}": {
      "post": {
        "tags": [
          "eCommerce"
        ],
        "summary": "Update available quantity",
        "description": "Update available quantity of a product variant in a specific location",
        "operationId": "ecommerce_update_variant_quantity",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "variant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Variant Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryDetailsUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryDetailsItem"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The location doesn't exist.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/commerce/locations": {
      "get": {
        "tags": [
          "eCommerce"
        ],
        "summary": "Get all locations",
        "description": "Returns a list of all locations",
        "operationId": "ecommerce_get_locations",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_CommerceLocationItemOut_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/commerce/orders": {
      "get": {
        "tags": [
          "eCommerce"
        ],
        "summary": "Get all orders",
        "description": "Returns a list of all the orders",
        "operationId": "ecommerce_get_orders",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          },
          {
            "name": "updated_after",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Updated After"
            }
          },
          {
            "name": "include_detailed_refunds",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/BoolParam"
                },
                {
                  "type": "null"
                }
              ],
              "default": "false",
              "title": "Include Detailed Refunds"
            }
          },
          {
            "name": "include_product_categories",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/BoolParam"
                },
                {
                  "type": "null"
                }
              ],
              "default": "false",
              "title": "Include Product Categories"
            }
          },
          {
            "name": "include_customer_details",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/BoolParam"
                },
                {
                  "type": "null"
                }
              ],
              "default": "true",
              "title": "Include Customer Details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_OrderItemOut_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The date format of the field 'Date To' is not valid. The expected format is the following: YYYY-MM-DD.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "eCommerce"
        ],
        "summary": "Create an order",
        "description": "Create a new order",
        "operationId": "ecommerce_create_order",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderItemIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderItemOut"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The country format is not correct. Please use the ISO 3166-1 codes.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The phone number is already used by another client.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/consumers/{consumer_id}/commerce/orders/{order_id}": {
      "get": {
        "tags": [
          "eCommerce"
        ],
        "summary": "Get one specific order",
        "description": "Returns a specific order",
        "operationId": "ecommerce_get_order",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Order Id"
            }
          },
          {
            "name": "include_product_categories",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/BoolParam"
                },
                {
                  "type": "null"
                }
              ],
              "default": "false",
              "title": "Include Product Categories"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderItemOut"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The order doesn't exist.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/commerce/payment-methods": {
      "get": {
        "tags": [
          "eCommerce"
        ],
        "summary": "Get all payment methods",
        "description": "Returns the list of the payment methods",
        "operationId": "ecommerce_get_payments_methods",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_PaymentMethodItem_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/commerce/product-categories": {
      "get": {
        "tags": [
          "eCommerce"
        ],
        "summary": "Get all product categories",
        "description": "Returns the list of the product categories",
        "operationId": "ecommerce_get_product_categories",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "only_parents",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BoolParam",
              "default": "false"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_CategoryItem_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/commerce/taxes": {
      "get": {
        "tags": [
          "eCommerce"
        ],
        "summary": "Get all tax rates",
        "description": "Returns the list of all tax rates",
        "operationId": "ecommerce_get_taxes",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_TaxRateItem_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/commerce/countries": {
      "get": {
        "tags": [
          "eCommerce"
        ],
        "summary": "Get all countries",
        "description": "Returns the list of all activated countries",
        "operationId": "ecommerce_get_countries",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_CountryItem_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/invoicing/invoices": {
      "get": {
        "tags": [
          "Invoicing"
        ],
        "summary": "Retrieve all invoices",
        "description": "Returns a list of invoices. Optionally invoice type and dates can be defined to retrieve invoices of a certain type from a certain date to another date",
        "operationId": "invoicing_get_invoices",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          },
          {
            "name": "invoice_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/backbone_common__models__invoicing__common__InvoiceType"
                },
                {
                  "type": "null"
                }
              ],
              "default": "all",
              "title": "Invoice Type"
            }
          },
          {
            "name": "payment_status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PaymentStatus-Input"
                },
                {
                  "type": "null"
                }
              ],
              "default": "all",
              "title": "Payment Status"
            }
          },
          {
            "name": "updated_after",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Updated After"
            }
          },
          {
            "name": "include_invoice_lines",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/BoolParam"
                },
                {
                  "type": "null"
                }
              ],
              "default": "false",
              "title": "Include Invoice Lines"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_InvoiceItemOut_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "You must provide an invoice type.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Invoicing"
        ],
        "summary": "Create an invoice",
        "description": "Create a new invoice.",
        "operationId": "invoicing_post_invoices",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceItem-Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceItemOut"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/invoicing/invoices/{invoice_id}": {
      "get": {
        "tags": [
          "Invoicing"
        ],
        "summary": "Retrieve one invoice",
        "description": "Returns a invoice",
        "operationId": "invoicing_get_invoice",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Invoice Id"
            }
          },
          {
            "name": "include_pdf",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/BoolParam"
                },
                {
                  "type": "null"
                }
              ],
              "default": "false",
              "title": "Include Pdf"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceItemOutSingle"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The ID of the invoice doesn't have the correct format.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The invoice doesn't exist in the invoicing system.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/invoicing/taxes": {
      "get": {
        "tags": [
          "Invoicing"
        ],
        "summary": "Retrieve all taxes",
        "description": "Returns a list of all the taxes",
        "operationId": "invoicing_get_taxes",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_InvoicingVatCode_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/invoicing/taxes/{tax_id}": {
      "get": {
        "tags": [
          "Invoicing"
        ],
        "summary": "Retrieve one tax",
        "description": "Returns a tax",
        "operationId": "invoicing_get_tax",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "tax_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tax Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoicingVatCode"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The tax doesn't exist.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/invoicing/products": {
      "get": {
        "tags": [
          "Invoicing"
        ],
        "summary": "Retrieve all products",
        "description": "Returns a list of all the products",
        "operationId": "invoicing_get_products",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_ProductItemOut_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Invoicing"
        ],
        "summary": "Create a product",
        "description": "Create a new product.",
        "operationId": "invoicing_post_products",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductItem-Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductItemOut"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/invoicing/products/{product_id}": {
      "get": {
        "tags": [
          "Invoicing"
        ],
        "summary": "Retrieve one product",
        "description": "Returns a product",
        "operationId": "invoicing_get_product",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Product Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductItemOut"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The product doesn't exist.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/invoicing/opportunities": {
      "get": {
        "tags": [
          "Invoicing"
        ],
        "summary": "Retrieve all opportunities",
        "description": "Returns a list of all the opportunities",
        "operationId": "invoicing_get_opportunities",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_OpportunityItem_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/invoicing/opportunities/{opportunity_id}": {
      "get": {
        "tags": [
          "Invoicing"
        ],
        "summary": "Retrieve one opportunity",
        "description": "Returns an opportunity",
        "operationId": "invoicing_get_opportunity",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "opportunity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Opportunity Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpportunityItem"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The opportunity doesn't exist.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/invoicing/contacts": {
      "get": {
        "tags": [
          "Invoicing"
        ],
        "summary": "Retrieve all contacts",
        "description": "Returns a list of all the contacts. Optionally contact type can be defined to retrieve contact from a certain type.",
        "operationId": "invoicing_get_contacts",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "contact_type",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ContactType",
              "default": "all"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_ContactItemOut_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Invoicing"
        ],
        "summary": "Create a contact",
        "description": "Create a new contact.",
        "operationId": "invoicing_post_contacts",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactItemIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactItemOut"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/invoicing/contacts/{contact_id}": {
      "get": {
        "tags": [
          "Invoicing"
        ],
        "summary": "Retrieve one contact",
        "description": "Returns a contact",
        "operationId": "invoicing_get_contact",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "contact_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Contact Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactItemOut"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The contact doesn't exist.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/invoicing/payments": {
      "get": {
        "tags": [
          "Invoicing"
        ],
        "summary": "Retrieve all payments",
        "description": "Returns a list of payments",
        "operationId": "invoicing_get_payments",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_InvoicingPaymentItem_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/invoicing/payment-methods": {
      "get": {
        "tags": [
          "Invoicing"
        ],
        "summary": "Retrieve all payment methods",
        "description": "Returns the list of payment methods",
        "operationId": "invoicing_get_payments_methods",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_InvoicingPaymentMethodItem_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/banking/financial-institutions": {
      "get": {
        "tags": [
          "Banking"
        ],
        "summary": "Get list of financial institutions",
        "description": "Returns the list of financial institutions the user consent access to",
        "operationId": "banking_get_financial_institutions",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_BankingFinancialInstitutionItem_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/banking/accounts": {
      "get": {
        "tags": [
          "Banking"
        ],
        "summary": "Get list of banking accounts",
        "description": "Returns the list of banking accounts",
        "operationId": "banking_get_accounts",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_BankingAccountItem_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/banking/{account_id}/transactions": {
      "get": {
        "tags": [
          "Banking"
        ],
        "summary": "Get list of financial transactions",
        "description": "Returns the list of transactions of an account",
        "operationId": "banking_get_account_transactions",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Account Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          },
          {
            "name": "date_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TransactionFilterDateType"
                },
                {
                  "type": "null"
                }
              ],
              "default": "value_date",
              "title": "Date Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_BankingTransactionItem_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/banking/counterparts": {
      "get": {
        "tags": [
          "Banking"
        ],
        "summary": "Get aggregated list of account counterparts found in transactions",
        "description": "Returns the aggregated list of account counterpats found in transactions. Useful for categorisation.",
        "operationId": "banking_get_account_counterparts",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Account Id"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_BankingCounterPartItem_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/payment/balances": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Retrieve all Balances",
        "description": "Returns a list of balances.",
        "operationId": "payment_get_balances",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_BalanceItemOut_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/payment/transactions": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Retrieve all Transactions",
        "description": "Returns a list of transactions. Optionally transaction type and dates can be defined to retrieve transactions of a certain type from a certain date to another date",
        "operationId": "payment_get_transaction",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "accounting_category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TransactionAccountingCategory"
                },
                {
                  "type": "null"
                }
              ],
              "default": "all",
              "title": "Accounting Category"
            }
          },
          {
            "name": "starting_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Starting From"
            }
          },
          {
            "name": "balance_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Balance Id"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_TransactionItemOut_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "You must provide an transaction type.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/payment/payments": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Retrieve all Payments",
        "description": "Returns a list of payments.",
        "operationId": "payment_get_payments",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_PaymentItemOut_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/payment/payments/{payment_id}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Get a Payment",
        "description": "Returns a specific payment.",
        "operationId": "payment_get_payment",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "payment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Payment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentItemOut"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The payment doesn't exist in the system.",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/payment/refunds": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Retrieve all Refunds",
        "description": "Returns a list of refunds.",
        "operationId": "payment_get_refunds",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "payment_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Payment Id"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_RefundItemOut_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/pms/orders": {
      "get": {
        "tags": [
          "Property Management System"
        ],
        "summary": "Get orders (PMS)",
        "description": "Returns a list of the orders",
        "operationId": "pms_get_orders",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "date_from",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "Date To"
            }
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location Id"
            }
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PMSStates",
              "default": "consumed"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_PMSOrderItem_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "502": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to authenticate to {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Gateway"
          },
          "405": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The resource {Method} - {Resource} is not supported by {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/pms/invoices": {
      "get": {
        "tags": [
          "Property Management System"
        ],
        "summary": "Get invoices (PMS)",
        "description": "Returns a list of the invoices",
        "operationId": "pms_get_invoices",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "date_from",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "Date To"
            }
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_PMSInvoiceFullItem_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "502": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to authenticate to {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Gateway"
          },
          "405": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The resource {Method} - {Resource} is not supported by {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/pms/customers": {
      "get": {
        "tags": [
          "Property Management System"
        ],
        "summary": "Get customers (PMS)",
        "description": "Returns a list of all the customers",
        "operationId": "pms_get_customers",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_PMSCustomerItem_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "502": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to authenticate to {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Gateway"
          },
          "405": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The resource {Method} - {Resource} is not supported by {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/pms/customers/{customer_id}": {
      "get": {
        "tags": [
          "Property Management System",
          "customers"
        ],
        "summary": "Get one customer (PMS)",
        "description": "Returns a specific customer",
        "operationId": "pms_get_customer",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Customer Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PMSCustomerItem"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "502": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to authenticate to {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Gateway"
          },
          "405": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The resource {Method} - {Resource} is not supported by {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The customer with id {CustomerId} could not be found",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/pms/locations": {
      "get": {
        "tags": [
          "Property Management System"
        ],
        "summary": "Get locations (PMS)",
        "description": "Returns a list of the locations",
        "operationId": "pms_get_locations",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_PMSLocationItem_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "502": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to authenticate to {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Gateway"
          },
          "405": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The resource {Method} - {Resource} is not supported by {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/pms/payments": {
      "get": {
        "tags": [
          "Property Management System"
        ],
        "summary": "Get payments (PMS)",
        "description": "Returns a list of payments",
        "operationId": "pms_get_payments",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "date_from",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "Date To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_PMSPaymentItem_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "502": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to authenticate to {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Gateway"
          },
          "405": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The resource {Method} - {Resource} is not supported by {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/pms/payment-methods": {
      "get": {
        "tags": [
          "Property Management System"
        ],
        "summary": "Get payment methods (PMS)",
        "description": "Returns the list of payment methods",
        "operationId": "pms_get_payments_methods",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_PMSPaymentMethods_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "502": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to authenticate to {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Gateway"
          },
          "405": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The resource {Method} - {Resource} is not supported by {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/pms/accounting-categories": {
      "get": {
        "tags": [
          "Property Management System"
        ],
        "summary": "Get accounting categories (PMS)",
        "description": "Returns a list of accounting categories. When not available for a specific PMS,it will return the same values as the product categories.",
        "operationId": "pms_get_accounting_categories",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_PMSAccountingCategoryItem_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "502": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to authenticate to {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Gateway"
          },
          "405": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The resource {Method} - {Resource} is not supported by {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/pms/closures/{date}": {
      "get": {
        "tags": [
          "Property Management System"
        ],
        "summary": "Get closure info for a specific day (PMS)",
        "description": "Returns whether the closure was already done for a specific day or not",
        "operationId": "pms_get_closure",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "Date"
            }
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PMSClosureItem"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "502": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to authenticate to {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Gateway"
          },
          "405": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The resource {Method} - {Resource} is not supported by {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/{consumer_id}/pms/taxes": {
      "get": {
        "tags": [
          "Property Management System"
        ],
        "summary": "Get tax rates (PMS)",
        "description": "Returns a list of the tax rates",
        "operationId": "pms_taxes",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChiftPage_PMSTaxRateItem_"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to perform your request",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Request"
          },
          "502": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Error while trying to authenticate to {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Bad Gateway"
          },
          "405": {
            "content": {
              "application/json": {
                "example": {
                  "message": "The resource {Method} - {Resource} is not supported by {ConnectorName}",
                  "status": "error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ChiftError"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccountBalance": {
        "properties": {
          "account_number": {
            "type": "string",
            "title": "Account Number",
            "description": "Number of the account"
          },
          "account_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Account Name",
            "description": "Display name of the account"
          },
          "debit": {
            "type": "number",
            "title": "Debit",
            "description": "Debit at end date. When debit and credit are equal to 0 and balance is different from 0 then the debit and credit cannot be determined, only the balance can be calculated in those cases."
          },
          "credit": {
            "type": "number",
            "title": "Credit",
            "description": "Credit at end date. When debit and credit are equal to 0 and balance is different from 0 then the debit and credit cannot be determined, only the balance can be calculated in those cases."
          },
          "balance": {
            "type": "number",
            "title": "Balance"
          },
          "period_debit": {
            "type": "number",
            "title": "Period Debit",
            "description": "Debit at end date beginning from the given start date. When debit and credit are equal to 0 and balance is different from 0 then the debit and credit cannot be determined, only the balance can be calculated in those cases."
          },
          "period_credit": {
            "type": "number",
            "title": "Period Credit",
            "description": "Credit at end date beginning from the given start date. When debit and credit are equal to 0 and balance is different from 0 then the debit and credit cannot be determined, only the balance can be calculated in those cases."
          },
          "period_balance": {
            "type": "number",
            "title": "Period Balance"
          }
        },
        "type": "object",
        "required": [
          "account_number",
          "debit",
          "credit",
          "balance",
          "period_debit",
          "period_credit",
          "period_balance"
        ],
        "title": "AccountBalance"
      },
      "AccountBalanceFilter": {
        "properties": {
          "accounts": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Accounts",
            "description": "Array/list containing the account numbers/classes to include in the response. E.g. [\"601\", \"7\"] to retrieve all account in the class 7 and accounts with an account number beginning with 601"
          },
          "start": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start",
            "description": "Start month (included, e.g. 202302 for february 2023)"
          },
          "end": {
            "type": "string",
            "maxLength": 6,
            "minLength": 6,
            "title": "End",
            "description": "End month (included, e.g. 202312 for december 2023)"
          }
        },
        "type": "object",
        "required": [
          "accounts",
          "end"
        ],
        "title": "AccountBalanceFilter"
      },
      "AccountItem": {
        "properties": {
          "number": {
            "type": "string",
            "title": "Number"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active",
            "default": true
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AccountItemType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "number",
          "name"
        ],
        "title": "AccountItem"
      },
      "AccountItemType": {
        "type": "string",
        "enum": [
          "bank",
          "cash",
          "other_financial",
          "receivable",
          "payable",
          "income",
          "expense",
          "vat",
          "other"
        ],
        "title": "AccountItemType"
      },
      "AccountToCreate": {
        "properties": {
          "account_number": {
            "type": "string",
            "minLength": 1,
            "title": "Account Number"
          },
          "account_name": {
            "type": "string",
            "minLength": 1,
            "title": "Account Name"
          }
        },
        "type": "object",
        "required": [
          "account_number",
          "account_name"
        ],
        "title": "AccountToCreate"
      },
      "AccountingCategoryItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Unique identifier of the accounting category",
            "examples": [
              "371ca583-d218-4900-b236-397532cf0e2"
            ]
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Name given to the accounting category",
            "examples": [
              "Beverages"
            ]
          },
          "code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code",
            "description": "Code assigned to the category",
            "examples": [
              "123456"
            ]
          },
          "ledger_account_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ledger Account Code",
            "description": "Ledger account code assigned to the category",
            "examples": [
              "123456"
            ]
          },
          "posting_account_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Posting Account Code",
            "description": "Posting account code assigned to the category",
            "examples": [
              "123456"
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "AccountingCategoryItem"
      },
      "AccountingVatCode": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code"
          },
          "label": {
            "type": "string",
            "title": "Label"
          },
          "scope": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VatCodeScope"
              },
              {
                "type": "null"
              }
            ],
            "default": "unknown"
          },
          "rate": {
            "type": "number",
            "title": "Rate"
          },
          "type": {
            "$ref": "#/components/schemas/VatCodeType"
          },
          "deductible_account": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deductible Account"
          },
          "payable_account": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payable Account"
          }
        },
        "type": "object",
        "required": [
          "id",
          "label",
          "rate",
          "type"
        ],
        "title": "AccountingVatCode"
      },
      "AddressItem": {
        "properties": {
          "address_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address Type",
            "description": "Type of the address",
            "examples": [
              "home"
            ]
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Name given to the address (e.g. 'home')",
            "examples": [
              "Home"
            ]
          },
          "street": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Street",
            "description": "Street name",
            "examples": [
              "Main Street"
            ]
          },
          "number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number",
            "description": "Number of the address",
            "examples": [
              "123"
            ]
          },
          "box": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Box",
            "description": "Box of the address",
            "examples": [
              "A"
            ]
          },
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City",
            "description": "City name",
            "examples": [
              "Paris"
            ]
          },
          "postal_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postal Code",
            "description": "Postal code of the address",
            "examples": [
              "75000"
            ]
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country",
            "description": "Country, format: ISO 3166-1 codes.",
            "examples": [
              "FR"
            ]
          }
        },
        "type": "object",
        "title": "AddressItem"
      },
      "AddressItemInInvoicing": {
        "properties": {
          "address_type": {
            "$ref": "#/components/schemas/AddressTypeInvoicing"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number"
          },
          "box": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Box"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "mobile": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mobile"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "street": {
            "type": "string",
            "title": "Street"
          },
          "city": {
            "type": "string",
            "title": "City"
          },
          "postal_code": {
            "type": "string",
            "title": "Postal Code"
          },
          "country": {
            "type": "string",
            "title": "Country",
            "description": "Format: ISO 3166-1 codes."
          }
        },
        "type": "object",
        "required": [
          "address_type",
          "street",
          "city",
          "postal_code",
          "country"
        ],
        "title": "AddressItemInInvoicing"
      },
      "AddressItemOut-Input": {
        "properties": {
          "address_type": {
            "$ref": "#/components/schemas/AddressType"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number"
          },
          "box": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Box"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "mobile": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mobile"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "street": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Street"
          },
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City"
          },
          "postal_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postal Code"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country",
            "description": "Format: ISO 3166-1 codes."
          }
        },
        "type": "object",
        "required": [
          "address_type"
        ],
        "title": "AddressItemOut"
      },
      "AddressItemOutInvoicing": {
        "properties": {
          "address_type": {
            "$ref": "#/components/schemas/AddressTypeInvoicing"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number"
          },
          "box": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Box"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "mobile": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mobile"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "street": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Street"
          },
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City"
          },
          "postal_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postal Code"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country",
            "description": "Format: ISO 3166-1 codes."
          }
        },
        "type": "object",
        "required": [
          "address_type"
        ],
        "title": "AddressItemOutInvoicing"
      },
      "AddressType": {
        "type": "string",
        "enum": [
          "main",
          "delivery",
          "invoice"
        ],
        "title": "AddressType"
      },
      "AddressTypeInvoicing": {
        "type": "string",
        "enum": [
          "main",
          "delivery",
          "invoice",
          "other"
        ],
        "title": "AddressTypeInvoicing"
      },
      "AnalyticAccountItemIn": {
        "properties": {
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active",
            "default": true
          },
          "code": {
            "type": "string",
            "title": "Code"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Indicates the currency of the analytic account (e.g. EUR)."
          }
        },
        "type": "object",
        "required": [
          "code",
          "name",
          "currency"
        ],
        "title": "AnalyticAccountItemIn"
      },
      "AnalyticAccountItemOut": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "active": {
            "type": "boolean",
            "title": "Active"
          },
          "code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "Indicates the currency of the analytic account (e.g. EUR)."
          },
          "balance": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Balance",
            "default": 0
          },
          "credit": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credit",
            "default": 0
          },
          "debit": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Debit",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "id",
          "active",
          "name"
        ],
        "title": "AnalyticAccountItemOut"
      },
      "AnalyticAccountItemOutMultiAnalyticPlans": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "active": {
            "type": "boolean",
            "title": "Active"
          },
          "code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "Indicates the currency of the analytic account (e.g. EUR)."
          },
          "balance": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Balance",
            "default": 0
          },
          "credit": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credit",
            "default": 0
          },
          "debit": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Debit",
            "default": 0
          },
          "analytic_plan": {
            "type": "string",
            "title": "Analytic Plan"
          }
        },
        "type": "object",
        "required": [
          "id",
          "active",
          "name",
          "analytic_plan"
        ],
        "title": "AnalyticAccountItemOutMultiAnalyticPlans"
      },
      "AnalyticAccountItemUpdate": {
        "properties": {
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active",
            "default": true
          },
          "code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "Indicates the currency of the analytic account (e.g. EUR)."
          }
        },
        "type": "object",
        "title": "AnalyticAccountItemUpdate"
      },
      "AnalyticDistribution": {
        "properties": {
          "analytic_plan": {
            "type": "string",
            "title": "Analytic Plan"
          },
          "analytic_accounts": {
            "items": {
              "$ref": "#/components/schemas/AnalyticDistributionDetail"
            },
            "type": "array",
            "title": "Analytic Accounts"
          }
        },
        "type": "object",
        "required": [
          "analytic_plan",
          "analytic_accounts"
        ],
        "title": "AnalyticDistribution"
      },
      "AnalyticDistributionDetail": {
        "properties": {
          "analytic_account": {
            "type": "string",
            "title": "Analytic Account"
          },
          "percentage": {
            "type": "number",
            "title": "Percentage",
            "description": "Indicates the percentage of the untaxed amount to attribute to the given analytic account (Only percentages without decimals are allowed)."
          }
        },
        "type": "object",
        "required": [
          "analytic_account",
          "percentage"
        ],
        "title": "AnalyticDistributionDetail"
      },
      "AnalyticPlanItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "AnalyticPlanItem"
      },
      "Api": {
        "type": "string",
        "enum": [
          "Point of Sale",
          "eCommerce",
          "Accounting",
          "Invoicing",
          "Communication",
          "Banking",
          "Custom",
          "Payment",
          "Property Management System"
        ],
        "title": "Api"
      },
      "AttachmentItem": {
        "properties": {
          "base64_string": {
            "type": "string",
            "title": "Base64 String"
          }
        },
        "type": "object",
        "required": [
          "base64_string"
        ],
        "title": "AttachmentItem"
      },
      "AttachmentItemOut": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "base64_string": {
            "type": "string",
            "title": "Base64 String"
          }
        },
        "type": "object",
        "required": [
          "id",
          "base64_string"
        ],
        "title": "AttachmentItemOut"
      },
      "AuthItem": {
        "properties": {
          "clientId": {
            "type": "string",
            "title": "Clientid"
          },
          "clientSecret": {
            "type": "string",
            "title": "Clientsecret"
          },
          "accountId": {
            "type": "string",
            "format": "uuid",
            "title": "Accountid"
          },
          "marketplaceId": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Marketplaceid"
          }
        },
        "type": "object",
        "required": [
          "clientId",
          "clientSecret",
          "accountId"
        ],
        "title": "AuthItem"
      },
      "BalanceItemOut": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id in Chift"
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "available_amount": {
            "type": "number",
            "title": "Available Amount",
            "description": "Total amount available"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Currency"
          },
          "create_date": {
            "type": "string",
            "format": "date-time",
            "title": "Create Date",
            "description": "Create Date"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref",
          "available_amount",
          "currency",
          "create_date"
        ],
        "title": "BalanceItemOut"
      },
      "BankingAccountItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Unique identifier of the account",
            "examples": [
              "account-123"
            ]
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Currency of the account",
            "examples": [
              "EUR"
            ]
          },
          "current_balance": {
            "type": "number",
            "title": "Current Balance",
            "description": "Current balance of the account",
            "examples": [
              1000
            ]
          },
          "current_balance_last_update_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Balance Last Update Date",
            "description": "Last update date of the current balance",
            "examples": [
              "2025-01-01T00:00:00Z"
            ]
          },
          "available_balance": {
            "type": "number",
            "title": "Available Balance",
            "description": "Available balance of the account",
            "examples": [
              1000
            ]
          },
          "available_balance_last_update_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Available Balance Last Update Date",
            "description": "Last update date of the available balance",
            "examples": [
              "2025-01-01T00:00:00Z"
            ]
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Description of the account",
            "examples": [
              "Chift account"
            ]
          },
          "reference": {
            "type": "string",
            "title": "Reference",
            "description": "Reference of the account",
            "examples": [
              "FR76300040123456789012345678"
            ]
          },
          "reference_type": {
            "type": "string",
            "title": "Reference Type",
            "description": "Type of the reference",
            "examples": [
              "IBAN"
            ]
          },
          "holder_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Holder Name",
            "description": "Name of the account holder",
            "examples": [
              "John Doe"
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "currency",
          "current_balance",
          "available_balance",
          "description",
          "reference",
          "reference_type"
        ],
        "title": "BankingAccountItem"
      },
      "BankingCounterPartItem": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Name of the counterpart",
            "examples": [
              "John Doe"
            ]
          },
          "reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference",
            "description": "Reference of the counterpart",
            "examples": [
              "FR76300040123456789012345678"
            ]
          },
          "details": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Details",
            "description": "Details of the counterpart",
            "examples": [
              "Chift counterpart"
            ]
          }
        },
        "type": "object",
        "title": "BankingCounterPartItem"
      },
      "BankingFinancialInstitutionItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Unique identifier of the financial institution",
            "examples": [
              "financial-institution-123"
            ]
          },
          "bic": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bic",
            "description": "BIC of the financial institution",
            "examples": [
              "GEBABEBBXXX"
            ]
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country",
            "description": "Country of the financial institution, format: ISO 3166-1 codes.",
            "examples": [
              "FR"
            ]
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Name of the financial institution",
            "examples": [
              "BNP"
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "BankingFinancialInstitutionItem"
      },
      "BankingTransactionItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Unique identifier of the transaction",
            "examples": [
              "transaction-123"
            ]
          },
          "amount": {
            "type": "number",
            "title": "Amount",
            "description": "Amount of the transaction",
            "examples": [
              1000
            ]
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Currency of the transaction",
            "examples": [
              "EUR"
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description of the transaction",
            "examples": [
              "Chift transaction"
            ]
          },
          "additional_information": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional Information",
            "description": "Additional information of the transaction",
            "examples": [
              "Chift transaction"
            ]
          },
          "counterpart_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Counterpart Name",
            "description": "Name of the counterpart",
            "examples": [
              "John Doe"
            ]
          },
          "counterpart_reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Counterpart Reference",
            "description": "Reference of the counterpart",
            "examples": [
              "FR76300040123456789012345678"
            ]
          },
          "remittance_information": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remittance Information",
            "description": "Remittance information of the transaction",
            "examples": [
              "Chift transaction"
            ]
          },
          "creation_date": {
            "type": "string",
            "format": "date-time",
            "title": "Creation Date",
            "description": "Creation date of the transaction",
            "examples": [
              "2025-01-01T00:00:00Z"
            ]
          },
          "value_date": {
            "type": "string",
            "format": "date-time",
            "title": "Value Date",
            "description": "Value date of the transaction",
            "examples": [
              "2025-01-01T00:00:00Z"
            ]
          },
          "execution_date": {
            "type": "string",
            "format": "date-time",
            "title": "Execution Date",
            "description": "Execution date of the transaction",
            "examples": [
              "2025-01-01T00:00:00Z"
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "amount",
          "currency",
          "creation_date",
          "value_date",
          "execution_date"
        ],
        "title": "BankingTransactionItem"
      },
      "BookYear": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "start": {
            "type": "string",
            "format": "date",
            "title": "Start"
          },
          "end": {
            "type": "string",
            "format": "date",
            "title": "End"
          },
          "closed": {
            "type": "boolean",
            "title": "Closed"
          }
        },
        "type": "object",
        "required": [
          "name",
          "start",
          "end",
          "closed"
        ],
        "title": "BookYear"
      },
      "BoolParam": {
        "type": "string",
        "enum": [
          "true",
          "false"
        ],
        "title": "BoolParam"
      },
      "CategoryItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id in Chift"
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id",
            "description": "Technical id of the parent category in the target software"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref",
          "name"
        ],
        "title": "CategoryItem"
      },
      "ChainExecutionItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "title": "Start"
          },
          "end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End"
          },
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "id",
          "start",
          "end",
          "status"
        ],
        "title": "ChainExecutionItem"
      },
      "ChiftError": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "default": "error"
          },
          "detail": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Detail",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "ChiftError"
      },
      "ChiftId": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id in Chift"
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref"
        ],
        "title": "ChiftId"
      },
      "ChiftPage_AccountBalance_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/AccountBalance"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[AccountBalance]"
      },
      "ChiftPage_AccountItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/AccountItem"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[AccountItem]"
      },
      "ChiftPage_AccountingCategoryItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/AccountingCategoryItem"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[AccountingCategoryItem]"
      },
      "ChiftPage_AccountingVatCode_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/AccountingVatCode"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[AccountingVatCode]"
      },
      "ChiftPage_AnalyticAccountItemOutMultiAnalyticPlans_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/AnalyticAccountItemOutMultiAnalyticPlans"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[AnalyticAccountItemOutMultiAnalyticPlans]"
      },
      "ChiftPage_AnalyticAccountItemOut_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/AnalyticAccountItemOut"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[AnalyticAccountItemOut]"
      },
      "ChiftPage_AnalyticPlanItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/AnalyticPlanItem"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[AnalyticPlanItem]"
      },
      "ChiftPage_AttachmentItemOut_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/AttachmentItemOut"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[AttachmentItemOut]"
      },
      "ChiftPage_BalanceItemOut_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/BalanceItemOut"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[BalanceItemOut]"
      },
      "ChiftPage_BankingAccountItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/BankingAccountItem"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[BankingAccountItem]"
      },
      "ChiftPage_BankingCounterPartItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/BankingCounterPartItem"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[BankingCounterPartItem]"
      },
      "ChiftPage_BankingFinancialInstitutionItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/BankingFinancialInstitutionItem"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[BankingFinancialInstitutionItem]"
      },
      "ChiftPage_BankingTransactionItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/BankingTransactionItem"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[BankingTransactionItem]"
      },
      "ChiftPage_BookYear_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/BookYear"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[BookYear]"
      },
      "ChiftPage_CategoryItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/CategoryItem"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[CategoryItem]"
      },
      "ChiftPage_ClientItemOut_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ClientItemOut"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[ClientItemOut]"
      },
      "ChiftPage_CommerceCustomerItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/CommerceCustomerItem"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[CommerceCustomerItem]"
      },
      "ChiftPage_CommerceLocationItemOut_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/CommerceLocationItemOut"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[CommerceLocationItemOut]"
      },
      "ChiftPage_ContactItemOut_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ContactItemOut"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[ContactItemOut]"
      },
      "ChiftPage_CountryItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/CountryItem"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[CountryItem]"
      },
      "ChiftPage_EmployeeItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/EmployeeItem"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[EmployeeItem]"
      },
      "ChiftPage_InvoiceItemOutMonoAnalyticPlan_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InvoiceItemOutMonoAnalyticPlan"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[InvoiceItemOutMonoAnalyticPlan]"
      },
      "ChiftPage_InvoiceItemOutMultiAnalyticPlans_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InvoiceItemOutMultiAnalyticPlans"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[InvoiceItemOutMultiAnalyticPlans]"
      },
      "ChiftPage_InvoiceItemOut_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InvoiceItemOut"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[InvoiceItemOut]"
      },
      "ChiftPage_InvoicingPaymentItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InvoicingPaymentItem"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[InvoicingPaymentItem]"
      },
      "ChiftPage_InvoicingPaymentMethodItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InvoicingPaymentMethodItem"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[InvoicingPaymentMethodItem]"
      },
      "ChiftPage_InvoicingVatCode_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InvoicingVatCode"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[InvoicingVatCode]"
      },
      "ChiftPage_JournalEntryMonoAnalyticPlan_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/JournalEntryMonoAnalyticPlan"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[JournalEntryMonoAnalyticPlan]"
      },
      "ChiftPage_JournalEntryMultiAnalyticPlan_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/JournalEntryMultiAnalyticPlan"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[JournalEntryMultiAnalyticPlan]"
      },
      "ChiftPage_Journal_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/Journal"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[Journal]"
      },
      "ChiftPage_MiscellaneousOperationOut_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/MiscellaneousOperationOut"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[MiscellaneousOperationOut]"
      },
      "ChiftPage_OpportunityItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/OpportunityItem"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[OpportunityItem]"
      },
      "ChiftPage_OrderItemOut_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/OrderItemOut"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[OrderItemOut]"
      },
      "ChiftPage_OutstandingItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/OutstandingItem"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[OutstandingItem]"
      },
      "ChiftPage_PMSAccountingCategoryItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/PMSAccountingCategoryItem"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[PMSAccountingCategoryItem]"
      },
      "ChiftPage_PMSCustomerItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/PMSCustomerItem"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[PMSCustomerItem]"
      },
      "ChiftPage_PMSInvoiceFullItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/PMSInvoiceFullItem"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[PMSInvoiceFullItem]"
      },
      "ChiftPage_PMSLocationItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/PMSLocationItem"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[PMSLocationItem]"
      },
      "ChiftPage_PMSOrderItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/PMSOrderItem"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[PMSOrderItem]"
      },
      "ChiftPage_PMSPaymentItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/PMSPaymentItem"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[PMSPaymentItem]"
      },
      "ChiftPage_PMSPaymentMethods_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/PMSPaymentMethods"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[PMSPaymentMethods]"
      },
      "ChiftPage_PMSTaxRateItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/PMSTaxRateItem"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[PMSTaxRateItem]"
      },
      "ChiftPage_POSCustomerItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/POSCustomerItem"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[POSCustomerItem]"
      },
      "ChiftPage_POSLocationItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/POSLocationItem"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[POSLocationItem]"
      },
      "ChiftPage_POSOrderItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/POSOrderItem"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[POSOrderItem]"
      },
      "ChiftPage_POSPaymentItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/POSPaymentItem"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[POSPaymentItem]"
      },
      "ChiftPage_POSProductItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/POSProductItem"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[POSProductItem]"
      },
      "ChiftPage_PaymentItemOut_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/PaymentItemOut"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[PaymentItemOut]"
      },
      "ChiftPage_PaymentMethodItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/PaymentMethodItem"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[PaymentMethodItem]"
      },
      "ChiftPage_PaymentMethods_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/PaymentMethods"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[PaymentMethods]"
      },
      "ChiftPage_Payment_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/Payment"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[Payment]"
      },
      "ChiftPage_ProductCategoryItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/backbone_common__models__pos__common__ProductCategoryItem"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[ProductCategoryItem]"
      },
      "ChiftPage_ProductItemOut_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ProductItemOut"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[ProductItemOut]"
      },
      "ChiftPage_ProductItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ProductItem-Output"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[ProductItem]"
      },
      "ChiftPage_RefundItemOut_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/RefundItemOut"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[RefundItemOut]"
      },
      "ChiftPage_SupplierItemOut_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/SupplierItemOut"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[SupplierItemOut]"
      },
      "ChiftPage_TaxRateItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/TaxRateItem"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[TaxRateItem]"
      },
      "ChiftPage_TransactionItemOut_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/TransactionItemOut"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "ChiftPage[TransactionItemOut]"
      },
      "ClientItemIn": {
        "properties": {
          "external_reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "External Reference"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name",
            "description": "Only used when the client is an individual (is_company=false). Indicates the first name of the client."
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name",
            "description": "Only used when the client is an individual (is_company=false). Indicates the last name of the client."
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Name"
          },
          "function": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Function",
            "description": "Only used when the client is an individual (is_company=false). Indicates the function of the client."
          },
          "is_company": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Company",
            "description": "Indicates if the client is an individual or a company.",
            "default": true
          },
          "company_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Id",
            "description": "Only used when the client is an individual (is_company=false). Indicates the id of the company linked to the client."
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "mobile": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mobile"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "Format: ISO 639-1 codes."
          },
          "internal_notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Internal Notes"
          },
          "website": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Website"
          },
          "vat": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vat"
          },
          "iban": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Iban",
            "description": "IBAN Account number of the client."
          },
          "bank_account": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bank Account",
            "description": "Bank account number of the client."
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "Indicates the currency of the client (e.g. EUR)."
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active",
            "default": true
          },
          "addresses": {
            "items": {
              "$ref": "#/components/schemas/backbone_common__models__common__AddressItemIn"
            },
            "type": "array",
            "title": "Addresses"
          },
          "account_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Account Number"
          }
        },
        "type": "object",
        "required": [
          "name",
          "addresses"
        ],
        "title": "ClientItemIn"
      },
      "ClientItemOut": {
        "properties": {
          "external_reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "External Reference"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name",
            "description": "Only used when the client is an individual (is_company=false). Indicates the first name of the client."
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name",
            "description": "Only used when the client is an individual (is_company=false). Indicates the last name of the client."
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "function": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Function",
            "description": "Only used when the client is an individual (is_company=false). Indicates the function of the client."
          },
          "is_company": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Company",
            "description": "Indicates if the client is an individual or a company.",
            "default": true
          },
          "company_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Id",
            "description": "Only used when the client is an individual (is_company=false). Indicates the id of the company linked to the client."
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "mobile": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mobile"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "Format: ISO 639-1 codes."
          },
          "internal_notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Internal Notes"
          },
          "website": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Website"
          },
          "vat": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vat"
          },
          "iban": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Iban",
            "description": "IBAN Account number of the client."
          },
          "bank_account": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bank Account",
            "description": "Bank account number of the client."
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "Indicates the currency of the client (e.g. EUR)."
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active",
            "default": true
          },
          "addresses": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/backbone_common__models__common__AddressItemOut"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Addresses",
            "default": []
          },
          "account_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Account Number"
          },
          "company_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Number"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "last_updated_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Updated On",
            "description": "The last time the client has been updated."
          }
        },
        "type": "object",
        "title": "ClientItemOut"
      },
      "ClientItemUpdate": {
        "properties": {
          "external_reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "External Reference"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name",
            "description": "Only used when the client is an individual (is_company=false). Indicates the first name of the client."
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name",
            "description": "Only used when the client is an individual (is_company=false). Indicates the last name of the client."
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "function": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Function",
            "description": "Only used when the client is an individual (is_company=false). Indicates the function of the client."
          },
          "is_company": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Company",
            "description": "Indicates if the client is an individual or a company.",
            "default": true
          },
          "company_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Id",
            "description": "Only used when the client is an individual (is_company=false). Indicates the id of the company linked to the client."
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "mobile": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mobile"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "Format: ISO 639-1 codes."
          },
          "internal_notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Internal Notes"
          },
          "website": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Website"
          },
          "vat": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vat"
          },
          "iban": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Iban",
            "description": "IBAN Account number of the client."
          },
          "bank_account": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bank Account",
            "description": "Bank account number of the client."
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "Indicates the currency of the client (e.g. EUR)."
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active",
            "default": true
          },
          "addresses": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AddressItemOut-Input"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Addresses",
            "default": []
          }
        },
        "type": "object",
        "title": "ClientItemUpdate"
      },
      "ClosureItem": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date",
            "description": "Date of the closure",
            "examples": [
              "2025-01-01"
            ]
          },
          "status": {
            "$ref": "#/components/schemas/ClosureStates",
            "description": "Status of the closure",
            "examples": [
              "closed"
            ]
          },
          "closures": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/POSClosureInformationItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Closures",
            "description": "Info about closures related to specific day",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "date",
          "status"
        ],
        "title": "ClosureItem"
      },
      "ClosurePaymentItem": {
        "properties": {
          "payment_method_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Method Id",
            "description": "Unique identifier of the payment method used for the payment",
            "examples": [
              "payment_method-1"
            ]
          },
          "payment_method_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Method Name",
            "description": "Chift's name of the payment method used for the payment",
            "examples": [
              "Cash"
            ]
          },
          "total": {
            "type": "string",
            "title": "Total",
            "description": "Total amount including tax",
            "examples": [
              11
            ]
          }
        },
        "type": "object",
        "required": [
          "total"
        ],
        "title": "ClosurePaymentItem"
      },
      "ClosureStates": {
        "type": "string",
        "enum": [
          "open",
          "closed"
        ],
        "title": "ClosureStates"
      },
      "CommerceCustomerItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id in Chift"
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "Format: ISO 639-1 codes."
          },
          "internal_notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Internal Notes"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "Indicates the currency of the client (e.g. EUR)."
          },
          "addresses": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/backbone_common__models__commerce__common__AddressItemOut"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Addresses",
            "default": []
          },
          "created_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created On"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref"
        ],
        "title": "CommerceCustomerItem"
      },
      "CommerceLocationItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id of the location in Chift"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "CommerceLocationItem"
      },
      "CommerceLocationItemOut": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id of the location in Chift"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "source_ref": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Ref"
              },
              {
                "type": "null"
              }
            ],
            "description": "Technical id of the location in the target software"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "CommerceLocationItemOut"
      },
      "CommonAttributeItem": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "values": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Values"
          }
        },
        "type": "object",
        "required": [
          "name",
          "values"
        ],
        "title": "CommonAttributeItem"
      },
      "ConnectionItem-Input": {
        "properties": {
          "one_api": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "One Api"
          },
          "connection_type": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connection Type"
          },
          "display_order": {
            "type": "integer",
            "title": "Display Order",
            "default": 0
          },
          "display_hidden": {
            "type": "boolean",
            "title": "Display Hidden",
            "default": false
          }
        },
        "type": "object",
        "title": "ConnectionItem"
      },
      "ConsumerItem": {
        "properties": {
          "consumerid": {
            "type": "string",
            "format": "uuid",
            "title": "Consumerid"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "internal_reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Internal Reference"
          },
          "redirect_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Redirect Url"
          }
        },
        "type": "object",
        "required": [
          "consumerid",
          "name"
        ],
        "title": "ConsumerItem"
      },
      "ContactGender": {
        "type": "string",
        "enum": [
          "H",
          "F",
          "N/A"
        ],
        "title": "ContactGender"
      },
      "ContactItemIn": {
        "properties": {
          "is_prospect": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Prospect",
            "description": "Is a prospect?"
          },
          "is_customer": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Customer",
            "description": "Is a customer?"
          },
          "is_supplier": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Supplier",
            "description": "Is a supplier?"
          },
          "is_company": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Company",
            "description": "Is a company?"
          },
          "company_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Name",
            "description": "Name of the company"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name",
            "description": "Firstname"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name",
            "description": "Lastname"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "description": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone",
            "description": "Phone"
          },
          "mobile": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mobile",
            "description": "Mobile"
          },
          "company_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Id",
            "description": "Technical id of the contact' company in Chift"
          },
          "vat": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vat",
            "description": "VAT number"
          },
          "company_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Number",
            "description": "Company number (identification number different than the VAT (e.g. siret))"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "Currency matching target sofware name"
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "Language matching target sofware name"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment",
            "description": "Comment"
          },
          "customer_account_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Account Number",
            "description": "Number of the accounting account used for sales (e.g. 701000)"
          },
          "supplier_account_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Supplier Account Number",
            "description": "Number of the accounting account used for purchases (e.g. 601000)"
          },
          "birthdate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birthdate",
            "description": "Birthdate"
          },
          "gender": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ContactGender"
              },
              {
                "type": "null"
              }
            ],
            "description": "Gender"
          },
          "addresses": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AddressItemInInvoicing"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Addresses",
            "description": "Addresses",
            "default": []
          }
        },
        "type": "object",
        "title": "ContactItemIn"
      },
      "ContactItemOut": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id in Chift"
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "is_prospect": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Prospect",
            "description": "Is a prospect?"
          },
          "is_customer": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Customer",
            "description": "Is a customer?"
          },
          "is_supplier": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Supplier",
            "description": "Is a supplier?"
          },
          "is_company": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Company",
            "description": "Is a company?"
          },
          "company_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Name",
            "description": "Name of the company"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name",
            "description": "Firstname"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name",
            "description": "Lastname"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "description": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone",
            "description": "Phone"
          },
          "mobile": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mobile",
            "description": "Mobile"
          },
          "company_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Id",
            "description": "Technical id of the contact' company in Chift"
          },
          "vat": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vat",
            "description": "VAT number"
          },
          "company_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Number",
            "description": "Company number (identification number different than the VAT (e.g. siret))"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "Currency matching target sofware name"
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "Language matching target sofware name"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment",
            "description": "Comment"
          },
          "customer_account_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Account Number",
            "description": "Number of the accounting account used for sales (e.g. 701000)"
          },
          "supplier_account_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Supplier Account Number",
            "description": "Number of the accounting account used for purchases (e.g. 601000)"
          },
          "birthdate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birthdate",
            "description": "Birthdate"
          },
          "gender": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ContactGender"
              },
              {
                "type": "null"
              }
            ],
            "description": "Gender"
          },
          "addresses": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AddressItemOutInvoicing"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Addresses",
            "description": "Addresses",
            "default": []
          },
          "external_reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "External Reference",
            "description": "External reference of the contact in the invoicing system"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref"
        ],
        "title": "ContactItemOut"
      },
      "ContactType": {
        "type": "string",
        "enum": [
          "prospect",
          "customer",
          "supplier",
          "all"
        ],
        "title": "ContactType"
      },
      "CountryItem": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code",
            "description": "Country ISO Code"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "code",
          "name"
        ],
        "title": "CountryItem"
      },
      "CreateConsumerSyncItem": {
        "properties": {
          "syncid": {
            "type": "string",
            "format": "uuid",
            "title": "Syncid"
          },
          "integrationids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Integrationids",
            "description": "[OPTIONAL] Can be used to specify maximum one integrationid for each One API that you want to highlight. If specified, only this connector will be displayed to your clients.",
            "default": []
          },
          "link_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link Metadata"
          }
        },
        "type": "object",
        "required": [
          "syncid"
        ],
        "title": "CreateConsumerSyncItem"
      },
      "CreateFlowItem": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "execution": {
            "$ref": "#/components/schemas/FlowExecution"
          },
          "config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FlowConfig-Input"
              },
              {
                "type": "null"
              }
            ],
            "default": {
              "datastores": []
            }
          },
          "triggers": {
            "items": {
              "$ref": "#/components/schemas/FlowTrigger"
            },
            "type": "array",
            "title": "Triggers"
          }
        },
        "type": "object",
        "required": [
          "name",
          "execution",
          "triggers"
        ],
        "title": "CreateFlowItem"
      },
      "CreateSyncItem": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Name"
          },
          "connections": {
            "items": {
              "$ref": "#/components/schemas/ConnectionItem-Input"
            },
            "type": "array",
            "title": "Connections"
          },
          "mappings": {
            "items": {
              "$ref": "#/components/schemas/CreateSyncMappingItem-Input"
            },
            "type": "array",
            "title": "Mappings",
            "default": []
          },
          "flows": {
            "items": {
              "$ref": "#/components/schemas/CreateFlowItem"
            },
            "type": "array",
            "title": "Flows",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "name",
          "connections"
        ],
        "title": "CreateSyncItem"
      },
      "CreateSyncMappingItem-Input": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "display_order": {
            "type": "integer",
            "title": "Display Order",
            "default": 0
          },
          "challenge_question": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Challenge Question"
          },
          "sub_mappings": {
            "items": {
              "$ref": "#/components/schemas/CreateSyncMappingToFieldItem-Input"
            },
            "type": "array",
            "title": "Sub Mappings",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "CreateSyncMappingItem"
      },
      "CreateSyncMappingItem-Output": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "display_order": {
            "type": "integer",
            "title": "Display Order",
            "default": 0
          },
          "challenge_question": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Challenge Question"
          },
          "sub_mappings": {
            "items": {
              "$ref": "#/components/schemas/CreateSyncMappingToFieldItem-Output"
            },
            "type": "array",
            "title": "Sub Mappings",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "CreateSyncMappingItem"
      },
      "CreateSyncMappingToFieldItem-Input": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "display_order": {
            "type": "integer",
            "title": "Display Order",
            "default": 0
          },
          "challenge_question": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Challenge Question"
          },
          "source_field": {
            "$ref": "#/components/schemas/FieldItem"
          },
          "target_field": {
            "$ref": "#/components/schemas/FieldItem"
          },
          "display_delete": {
            "type": "boolean",
            "title": "Display Delete",
            "default": false
          },
          "logic": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logic"
          }
        },
        "type": "object",
        "required": [
          "name",
          "source_field",
          "target_field"
        ],
        "title": "CreateSyncMappingToFieldItem"
      },
      "CreateSyncMappingToFieldItem-Output": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "display_order": {
            "type": "integer",
            "title": "Display Order",
            "default": 0
          },
          "challenge_question": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Challenge Question"
          },
          "source_field": {
            "$ref": "#/components/schemas/FieldItem"
          },
          "target_field": {
            "$ref": "#/components/schemas/FieldItem"
          },
          "display_delete": {
            "type": "boolean",
            "title": "Display Delete",
            "default": false
          },
          "logic": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logic"
          }
        },
        "type": "object",
        "required": [
          "name",
          "source_field",
          "target_field"
        ],
        "title": "CreateSyncMappingToFieldItem"
      },
      "CredentialItem-Input": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          },
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "title": "CredentialItem"
      },
      "CredentialItem-Output": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "optional": {
            "type": "boolean",
            "title": "Optional",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "CredentialItem"
      },
      "DataItem": {
        "properties": {
          "data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "DataItem"
      },
      "DataItemOut": {
        "properties": {
          "data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Data"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "created_on": {
            "type": "string",
            "format": "date-time",
            "title": "Created On"
          }
        },
        "type": "object",
        "required": [
          "data",
          "id",
          "created_on"
        ],
        "title": "DataItemOut"
      },
      "DataStoreItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Status"
              },
              {
                "type": "null"
              }
            ],
            "default": "active"
          },
          "definition": {
            "$ref": "#/components/schemas/DatastoreDef"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "definition"
        ],
        "title": "DataStoreItem"
      },
      "DatastoreColumn": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "optional": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Optional",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "title",
          "type"
        ],
        "title": "DatastoreColumn"
      },
      "DatastoreDef": {
        "properties": {
          "columns": {
            "items": {
              "$ref": "#/components/schemas/DatastoreColumn"
            },
            "type": "array",
            "title": "Columns"
          },
          "search_column": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Search Column",
            "description": "Column name that will be indexed and used in search if any."
          }
        },
        "type": "object",
        "required": [
          "columns"
        ],
        "title": "DatastoreDef"
      },
      "DiscountType": {
        "type": "string",
        "enum": [
          "OFFERED",
          "UNKNOWN",
          "LOSS"
        ],
        "title": "DiscountType"
      },
      "DocumentType": {
        "type": "string",
        "enum": [
          "invoice",
          "entry"
        ],
        "title": "DocumentType"
      },
      "EmployeeItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "function": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Function"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "mobile": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mobile"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active",
            "default": true
          },
          "reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference"
          },
          "account_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Account Number"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "EmployeeItem"
      },
      "EnableFlowConsumer": {
        "properties": {
          "integrationids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Integrationids",
            "description": "List of integrationids of the connections that will be used to enable the flow",
            "default": []
          },
          "triggerid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Triggerid",
            "default": "trigger-1"
          },
          "cronschedule": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cronschedule"
          },
          "data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data",
            "description": "Object containing the configuration of the flow for the consumer",
            "default": {}
          }
        },
        "type": "object",
        "title": "EnableFlowConsumer"
      },
      "EntryLineType": {
        "type": "string",
        "enum": [
          "customer_account",
          "supplier_account",
          "employee_account",
          "general_account"
        ],
        "title": "EntryLineType"
      },
      "ErrorInfo": {
        "properties": {
          "error_code": {
            "type": "string",
            "title": "Error Code"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "type": "string",
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "error_code",
          "status",
          "title"
        ],
        "title": "ErrorInfo"
      },
      "ExecutionType": {
        "type": "string",
        "enum": [
          "code",
          "module"
        ],
        "title": "ExecutionType"
      },
      "FeesItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id in Chift"
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "created_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created On"
          },
          "type": {
            "$ref": "#/components/schemas/FeesType"
          },
          "removed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Removed",
            "description": "Indicates if the fee has been removed from the order",
            "default": false
          },
          "tax_rate": {
            "type": "number",
            "title": "Tax Rate"
          },
          "tax_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tax Id",
            "description": "Technical id of the tax rate in Chift"
          },
          "discounts": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/backbone_common__models__commerce__common__DiscountItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Discounts",
            "default": []
          },
          "untaxed_amount": {
            "type": "number",
            "title": "Untaxed Amount"
          },
          "tax_amount": {
            "type": "number",
            "title": "Tax Amount"
          },
          "total": {
            "type": "number",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref",
          "type",
          "tax_rate",
          "untaxed_amount",
          "tax_amount",
          "total"
        ],
        "title": "FeesItem"
      },
      "FeesType": {
        "type": "string",
        "enum": [
          "shipping",
          "other"
        ],
        "title": "FeesType"
      },
      "FieldItem": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "$ref": "#/components/schemas/FieldItemType"
          },
          "display_condition": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Condition"
          },
          "values": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FieldItemValue"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Values",
            "default": []
          },
          "api_route": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Route"
          },
          "connection_type": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connection Type"
          }
        },
        "type": "object",
        "required": [
          "name",
          "type"
        ],
        "title": "FieldItem"
      },
      "FieldItemType": {
        "type": "string",
        "enum": [
          "fixed",
          "api"
        ],
        "title": "FieldItemType"
      },
      "FieldItemValue": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "label": {
            "type": "string",
            "title": "Label"
          }
        },
        "type": "object",
        "required": [
          "id",
          "label"
        ],
        "title": "FieldItemValue"
      },
      "FieldRef": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id",
            "description": "Technical id in the target software"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model",
            "description": "Name of the model/entity in the target software"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Value the field in the target software"
          }
        },
        "type": "object",
        "title": "FieldRef"
      },
      "FinancialEntryItemIn": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date"
          },
          "journal_id": {
            "type": "string",
            "title": "Journal Id",
            "description": "Indicates the journal used in for the operation."
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Indicates the currency of the operation (e.g. EUR)."
          },
          "currency_exchange_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency Exchange Rate",
            "description": "Indicates the exchange rate at the date of the operation. Must be filled in when creating the operation in another currency from the default currency of the accounting system.",
            "default": 1
          },
          "reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference"
          },
          "number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/FinancialEntryLineItem"
            },
            "type": "array",
            "title": "Items"
          },
          "pdf": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pdf",
            "description": "Base 64 string representing the PDF attached to the sale/purchase entry."
          }
        },
        "type": "object",
        "required": [
          "date",
          "journal_id",
          "currency",
          "items"
        ],
        "title": "FinancialEntryItemIn"
      },
      "FinancialEntryItemInOld": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date"
          },
          "journal_id": {
            "type": "string",
            "title": "Journal Id",
            "description": "Indicates the journal used in for the operation."
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Indicates the currency of the operation (e.g. EUR)."
          },
          "currency_exchange_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency Exchange Rate",
            "description": "Indicates the exchange rate at the date of the operation. Must be filled in when creating the operation in another currency from the default currency of the accounting system.",
            "default": 1
          },
          "reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference"
          },
          "number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/FinancialEntryLineItemOld"
            },
            "type": "array",
            "title": "Items"
          },
          "pdf": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pdf",
            "description": "Base 64 string representing the PDF attached to the sale/purchase entry."
          }
        },
        "type": "object",
        "required": [
          "date",
          "journal_id",
          "currency",
          "items"
        ],
        "title": "FinancialEntryItemInOld"
      },
      "FinancialEntryItemOut": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date"
          },
          "journal_id": {
            "type": "string",
            "title": "Journal Id",
            "description": "Indicates the journal used in for the operation."
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Indicates the currency of the operation (e.g. EUR)."
          },
          "currency_exchange_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency Exchange Rate",
            "description": "Indicates the exchange rate at the date of the operation. Must be filled in when creating the operation in another currency from the default currency of the accounting system.",
            "default": 1
          },
          "reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "number": {
            "type": "string",
            "title": "Number"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/FinancialEntryLineItemOut"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "date",
          "journal_id",
          "currency",
          "id",
          "number",
          "items"
        ],
        "title": "FinancialEntryItemOut"
      },
      "FinancialEntryItemOutOld": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date"
          },
          "journal_id": {
            "type": "string",
            "title": "Journal Id",
            "description": "Indicates the journal used in for the operation."
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Indicates the currency of the operation (e.g. EUR)."
          },
          "currency_exchange_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency Exchange Rate",
            "description": "Indicates the exchange rate at the date of the operation. Must be filled in when creating the operation in another currency from the default currency of the accounting system.",
            "default": 1
          },
          "reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "number": {
            "type": "string",
            "title": "Number"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/FinancialEntryLineItemOutOld"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "date",
          "journal_id",
          "currency",
          "id",
          "number",
          "items"
        ],
        "title": "FinancialEntryItemOutOld"
      },
      "FinancialEntryLineItem": {
        "properties": {
          "account_type": {
            "$ref": "#/components/schemas/EntryLineType"
          },
          "account": {
            "type": "string",
            "minLength": 1,
            "title": "Account"
          },
          "amount": {
            "type": "number",
            "title": "Amount",
            "description": "A positive amount represents funds transfered to the bank/cash account. In that case the bank/cash account is debited and the given account_number is credited."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "account_type",
          "account",
          "amount"
        ],
        "title": "FinancialEntryLineItem"
      },
      "FinancialEntryLineItemOld": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EntryLineType"
          },
          "account_number": {
            "type": "string",
            "title": "Account Number"
          },
          "partner_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Partner Id",
            "description": "Must be filled in it is a 'customer_account', 'supplier_account' or 'employee_account' line type."
          },
          "amount": {
            "type": "number",
            "title": "Amount",
            "description": "A positive amount represents funds transfered to the bank/cash account. In that case the bank/cash account is debited and the given account_number is credited."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "type",
          "account_number",
          "amount"
        ],
        "title": "FinancialEntryLineItemOld"
      },
      "FinancialEntryLineItemOut": {
        "properties": {
          "account_type": {
            "$ref": "#/components/schemas/EntryLineType"
          },
          "account": {
            "type": "string",
            "minLength": 1,
            "title": "Account"
          },
          "amount": {
            "type": "number",
            "title": "Amount",
            "description": "A positive amount represents funds transfered to the bank/cash account. In that case the bank/cash account is debited and the given account_number is credited."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "counterpart_account": {
            "type": "string",
            "title": "Counterpart Account"
          }
        },
        "type": "object",
        "required": [
          "account_type",
          "account",
          "amount",
          "counterpart_account"
        ],
        "title": "FinancialEntryLineItemOut"
      },
      "FinancialEntryLineItemOutOld": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EntryLineType"
          },
          "account_number": {
            "type": "string",
            "title": "Account Number"
          },
          "partner_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Partner Id",
            "description": "Must be filled in it is a 'customer_account', 'supplier_account' or 'employee_account' line type."
          },
          "amount": {
            "type": "number",
            "title": "Amount",
            "description": "A positive amount represents funds transfered to the bank/cash account. In that case the bank/cash account is debited and the given account_number is credited."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "counterpart_account": {
            "type": "string",
            "title": "Counterpart Account"
          }
        },
        "type": "object",
        "required": [
          "type",
          "account_number",
          "amount",
          "counterpart_account"
        ],
        "title": "FinancialEntryLineItemOutOld"
      },
      "FlowConfig-Input": {
        "properties": {
          "definitionFields": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Definitionfields"
          },
          "doorkeyFields": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doorkeyfields"
          },
          "customFields": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customfields"
          },
          "datastores": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FlowDataStoreItem-Input"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datastores",
            "default": []
          }
        },
        "type": "object",
        "title": "FlowConfig"
      },
      "FlowConfig-Output": {
        "properties": {
          "definitionFields": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Definitionfields"
          },
          "doorkeyFields": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doorkeyfields"
          },
          "customFields": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customfields"
          },
          "datastores": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FlowDataStoreItem-Output"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datastores",
            "default": []
          }
        },
        "type": "object",
        "title": "FlowConfig"
      },
      "FlowDataStoreItem-Input": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Status"
              },
              {
                "type": "null"
              }
            ],
            "default": "active"
          },
          "definition": {
            "$ref": "#/components/schemas/DatastoreDef"
          }
        },
        "type": "object",
        "required": [
          "name",
          "definition"
        ],
        "title": "FlowDataStoreItem"
      },
      "FlowDataStoreItem-Output": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Status"
              },
              {
                "type": "null"
              }
            ],
            "default": "active"
          },
          "definition": {
            "$ref": "#/components/schemas/DatastoreDef"
          }
        },
        "type": "object",
        "required": [
          "name",
          "definition"
        ],
        "title": "FlowDataStoreItem"
      },
      "FlowExecution": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ExecutionType"
          },
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FlowExecutionChain"
              },
              {
                "$ref": "#/components/schemas/FlowExecutionCode"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "title": "FlowExecution"
      },
      "FlowExecutionChain": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "FlowExecutionChain"
      },
      "FlowExecutionCode": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          }
        },
        "type": "object",
        "required": [
          "code"
        ],
        "title": "FlowExecutionCode"
      },
      "FlowTrigger": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "type": {
            "$ref": "#/components/schemas/TriggerType"
          },
          "cronschedules": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cronschedules"
          },
          "visible": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visible",
            "default": true
          },
          "definitionFields": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Definitionfields"
          },
          "options": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Options"
          }
        },
        "type": "object",
        "required": [
          "id",
          "type"
        ],
        "title": "FlowTrigger"
      },
      "FolderItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "selected": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Selected",
            "default": true
          },
          "vat": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vat"
          },
          "company_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Number"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "FolderItem"
      },
      "GenericJournalEntry": {
        "properties": {
          "reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date"
          },
          "journal_id": {
            "type": "string",
            "title": "Journal Id"
          },
          "number": {
            "type": "string",
            "minLength": 1,
            "title": "Number"
          },
          "currency": {
            "type": "string",
            "minLength": 1,
            "title": "Currency"
          },
          "currency_exchange_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency Exchange Rate",
            "default": 1
          },
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/GenericJournalItem"
            },
            "type": "array",
            "title": "Items"
          },
          "pdf": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pdf",
            "description": "Base 64 string representing the PDF attached to the item."
          },
          "posted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Posted",
            "default": true
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          }
        },
        "type": "object",
        "required": [
          "journal_id",
          "number",
          "currency",
          "date",
          "items"
        ],
        "title": "GenericJournalEntry"
      },
      "GenericJournalItem": {
        "properties": {
          "account_type": {
            "$ref": "#/components/schemas/EntryLineType"
          },
          "account": {
            "type": "string",
            "minLength": 1,
            "title": "Account"
          },
          "force_general_account": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Force General Account",
            "description": "For ustomer/supplier/employee accounts we determine the general account based on the configurations in the accounting system. The general account can also be forced by specifying the value in this field."
          },
          "prioritise_thirdparty_account": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prioritise Thirdparty Account",
            "description": "Indicate if we need to prioritise the information from thirdparty accounts when forcing the general account in a software where only 1 account is accepted.",
            "default": false
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "debit": {
            "type": "number",
            "title": "Debit"
          },
          "credit": {
            "type": "number",
            "title": "Credit"
          },
          "analytic_distribution": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AnalyticDistribution"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Analytic Distribution",
            "default": []
          },
          "tax_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tax Code",
            "description": "Indicates the tax code used for the entry item. This is the ID of the Tax Code in the accounting software."
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country"
          },
          "account_info": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AccountToCreate"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "account_type",
          "account",
          "debit",
          "credit"
        ],
        "title": "GenericJournalItem"
      },
      "HTTPValidationError": {
        "title": "Validation Error",
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "title": "Message",
            "type": "string",
            "default": "Validation error"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "default": "error"
          },
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "ImageItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id of the image in the target software"
          },
          "main_image": {
            "type": "boolean",
            "title": "Main Image"
          },
          "url": {
            "type": "string",
            "title": "Url"
          }
        },
        "type": "object",
        "required": [
          "id",
          "main_image",
          "url"
        ],
        "title": "ImageItem"
      },
      "ImageType": {
        "type": "string",
        "enum": [
          "icon",
          "logo"
        ],
        "title": "ImageType"
      },
      "IntegrationItem": {
        "properties": {
          "integrationid": {
            "type": "integer",
            "title": "Integrationid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "api": {
            "$ref": "#/components/schemas/Api"
          },
          "logo_url": {
            "type": "string",
            "title": "Logo Url"
          },
          "icon_url": {
            "type": "string",
            "title": "Icon Url"
          },
          "post_connections": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PostConnectionItem-Output"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Post Connections",
            "description": "List of post-connections that can be activated for this integration.",
            "default": []
          },
          "credentials": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/CredentialItem-Output"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credentials",
            "description": "List of credentials that must be specified to create a connection. Can be used if you want to pass credentials on connection creation. Not compatible with oAuth2 routes.",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "integrationid",
          "name",
          "status",
          "api",
          "logo_url",
          "icon_url"
        ],
        "title": "IntegrationItem"
      },
      "InventoryDetailsItem": {
        "properties": {
          "location": {
            "$ref": "#/components/schemas/CommerceLocationItem"
          },
          "available_quantity": {
            "type": "number",
            "title": "Available Quantity"
          }
        },
        "type": "object",
        "required": [
          "location",
          "available_quantity"
        ],
        "title": "InventoryDetailsItem"
      },
      "InventoryDetailsUpdate": {
        "properties": {
          "location_id": {
            "type": "string",
            "title": "Location Id",
            "description": "Technical id of the location in Chift"
          },
          "available_quantity": {
            "type": "number",
            "minimum": 0.0,
            "title": "Available Quantity"
          }
        },
        "type": "object",
        "required": [
          "location_id",
          "available_quantity"
        ],
        "title": "InventoryDetailsUpdate"
      },
      "InvoiceCorrection": {
        "properties": {
          "sale_invoice_correction_tax_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sale Invoice Correction Tax Code"
          },
          "purchase_invoice_correction_tax_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Purchase Invoice Correction Tax Code"
          },
          "invoice_correction_credit_account_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Correction Credit Account Number"
          },
          "invoice_correction_debit_account_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Correction Debit Account Number"
          }
        },
        "type": "object",
        "title": "InvoiceCorrection"
      },
      "InvoiceItem-Input": {
        "properties": {
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Currency matching target sofware name"
          },
          "invoice_type": {
            "$ref": "#/components/schemas/backbone_common__models__invoicing__common__InvoiceType",
            "description": "Invoice type"
          },
          "status": {
            "$ref": "#/components/schemas/InvoiceStatus",
            "description": "Status"
          },
          "invoice_date": {
            "type": "string",
            "format": "date",
            "title": "Invoice Date",
            "description": "Invoicing date"
          },
          "tax_amount": {
            "type": "number",
            "title": "Tax Amount",
            "description": "Taxes amount"
          },
          "untaxed_amount": {
            "type": "number",
            "title": "Untaxed Amount",
            "description": "Untaxed amount"
          },
          "total": {
            "type": "number",
            "title": "Total",
            "description": "Total amount incl. taxes"
          },
          "lines": {
            "items": {
              "$ref": "#/components/schemas/InvoiceLineItem"
            },
            "type": "array",
            "title": "Lines",
            "description": "Invoice lines",
            "default": []
          },
          "partner_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Partner Id",
            "description": "Technical id of the vendor/customer in Chift"
          },
          "invoice_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Number",
            "description": "Number/sequence"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date",
            "description": "Due date"
          },
          "reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference",
            "description": "Reference"
          },
          "payment_communication": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Communication",
            "description": "Payment communication"
          },
          "customer_memo": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Memo",
            "description": "Customer note/memo"
          },
          "journal_ref": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FieldRef"
              },
              {
                "type": "null"
              }
            ],
            "description": "Journal"
          },
          "italian_specificities": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ItalianSpecificities-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "Specificities for Italy"
          }
        },
        "type": "object",
        "required": [
          "currency",
          "invoice_type",
          "status",
          "invoice_date",
          "tax_amount",
          "untaxed_amount",
          "total"
        ],
        "title": "InvoiceItem"
      },
      "InvoiceItem-Output": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id in Chift"
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "invoice_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Number",
            "description": "Number/sequence",
            "example": "INV-12345"
          },
          "creation_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Creation Date",
            "description": "Creation date of the invoice",
            "example": "2023-10-01T12:00:00"
          },
          "closing_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Closing Date",
            "description": "Closing date of the invoice",
            "example": "2023-10-10T12:00:00"
          },
          "partners": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/InvoicePartnerItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Partners",
            "description": "List of partners related to the invoice"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref",
          "invoice_number"
        ],
        "title": "InvoiceItem"
      },
      "InvoiceItemInMonoAnalyticPlan": {
        "properties": {
          "invoice_type": {
            "$ref": "#/components/schemas/backbone_common__models__accounting__common__InvoiceType"
          },
          "invoice_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Number",
            "description": "Number of the invoice. If left empty, will be automatically generated by the accounting system at creation."
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Indicates the currency of the invoice (e.g. EUR)."
          },
          "untaxed_amount": {
            "type": "number",
            "title": "Untaxed Amount"
          },
          "tax_amount": {
            "type": "number",
            "title": "Tax Amount"
          },
          "total": {
            "type": "number",
            "title": "Total"
          },
          "reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference"
          },
          "payment_communication": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Communication"
          },
          "customer_memo": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Memo"
          },
          "invoice_date": {
            "type": "string",
            "format": "date",
            "title": "Invoice Date"
          },
          "due_date": {
            "type": "string",
            "format": "date",
            "title": "Due Date"
          },
          "partner_id": {
            "type": "string",
            "minLength": 1,
            "title": "Partner Id"
          },
          "journal_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Journal Id",
            "description": "Indicates the journal used in for the invoice. If the journal is not given, the journal will be automatically set if only one journal exists otherwise an error will be thrown."
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InvoiceStatusIn"
              },
              {
                "type": "null"
              }
            ],
            "default": "posted"
          },
          "pdf": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pdf",
            "description": "Base 64 string representing the PDF attached to the sale/purchase entry."
          },
          "currency_exchange_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency Exchange Rate",
            "description": "Indicates the exchange rate at the date of the invoice. Must be filled in when creating the invoice in another currency from the default currency of the accounting system.",
            "default": 1
          },
          "invoice_correction": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InvoiceCorrection"
              },
              {
                "type": "null"
              }
            ],
            "description": "Information used to add a correction line when roundings have an impact on the total amount of the invoice."
          },
          "nl_payment_terms_split": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/NlPaymentTermsSplit"
              },
              {
                "type": "null"
              }
            ]
          },
          "shipping_country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipping Country"
          },
          "partner_info": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AccountToCreate"
              },
              {
                "type": "null"
              }
            ]
          },
          "lines": {
            "items": {
              "$ref": "#/components/schemas/InvoiceLineItemInMonoAnalyticPlan"
            },
            "type": "array",
            "title": "Lines"
          }
        },
        "type": "object",
        "required": [
          "invoice_type",
          "currency",
          "untaxed_amount",
          "tax_amount",
          "total",
          "invoice_date",
          "due_date",
          "partner_id",
          "lines"
        ],
        "title": "InvoiceItemInMonoAnalyticPlan"
      },
      "InvoiceItemInMultiAnalyticPlans": {
        "properties": {
          "invoice_type": {
            "$ref": "#/components/schemas/backbone_common__models__accounting__common__InvoiceType"
          },
          "invoice_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Number",
            "description": "Number of the invoice. If left empty, will be automatically generated by the accounting system at creation."
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Indicates the currency of the invoice (e.g. EUR)."
          },
          "untaxed_amount": {
            "type": "number",
            "title": "Untaxed Amount"
          },
          "tax_amount": {
            "type": "number",
            "title": "Tax Amount"
          },
          "total": {
            "type": "number",
            "title": "Total"
          },
          "reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference"
          },
          "payment_communication": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Communication"
          },
          "customer_memo": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Memo"
          },
          "invoice_date": {
            "type": "string",
            "format": "date",
            "title": "Invoice Date"
          },
          "due_date": {
            "type": "string",
            "format": "date",
            "title": "Due Date"
          },
          "partner_id": {
            "type": "string",
            "minLength": 1,
            "title": "Partner Id"
          },
          "journal_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Journal Id",
            "description": "Indicates the journal used in for the invoice. If the journal is not given, the journal will be automatically set if only one journal exists otherwise an error will be thrown."
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InvoiceStatusIn"
              },
              {
                "type": "null"
              }
            ],
            "default": "posted"
          },
          "pdf": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pdf",
            "description": "Base 64 string representing the PDF attached to the sale/purchase entry."
          },
          "currency_exchange_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency Exchange Rate",
            "description": "Indicates the exchange rate at the date of the invoice. Must be filled in when creating the invoice in another currency from the default currency of the accounting system.",
            "default": 1
          },
          "invoice_correction": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InvoiceCorrection"
              },
              {
                "type": "null"
              }
            ],
            "description": "Information used to add a correction line when roundings have an impact on the total amount of the invoice."
          },
          "nl_payment_terms_split": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/NlPaymentTermsSplit"
              },
              {
                "type": "null"
              }
            ]
          },
          "shipping_country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipping Country"
          },
          "partner_info": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AccountToCreate"
              },
              {
                "type": "null"
              }
            ]
          },
          "lines": {
            "items": {
              "$ref": "#/components/schemas/InvoiceLineItemInMultiAnalyticPlans"
            },
            "type": "array",
            "title": "Lines"
          }
        },
        "type": "object",
        "required": [
          "invoice_type",
          "currency",
          "untaxed_amount",
          "tax_amount",
          "total",
          "invoice_date",
          "due_date",
          "partner_id",
          "lines"
        ],
        "title": "InvoiceItemInMultiAnalyticPlans"
      },
      "InvoiceItemOut": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id in Chift"
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Currency matching target sofware name"
          },
          "invoice_type": {
            "$ref": "#/components/schemas/backbone_common__models__invoicing__common__InvoiceType",
            "description": "Invoice type"
          },
          "status": {
            "$ref": "#/components/schemas/InvoiceStatus",
            "description": "Status"
          },
          "invoice_date": {
            "type": "string",
            "format": "date",
            "title": "Invoice Date",
            "description": "Invoicing date"
          },
          "tax_amount": {
            "type": "number",
            "title": "Tax Amount",
            "description": "Taxes amount"
          },
          "untaxed_amount": {
            "type": "number",
            "title": "Untaxed Amount",
            "description": "Untaxed amount"
          },
          "total": {
            "type": "number",
            "title": "Total",
            "description": "Total amount incl. taxes"
          },
          "lines": {
            "items": {
              "$ref": "#/components/schemas/InvoiceLineItem"
            },
            "type": "array",
            "title": "Lines",
            "description": "Invoice lines",
            "default": []
          },
          "partner_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Partner Id",
            "description": "Technical id of the vendor/customer in Chift"
          },
          "invoice_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Number",
            "description": "Number/sequence"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date",
            "description": "Due date"
          },
          "reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference",
            "description": "Reference"
          },
          "payment_communication": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Communication",
            "description": "Payment communication"
          },
          "customer_memo": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Memo",
            "description": "Customer note/memo"
          },
          "journal_ref": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FieldRef"
              },
              {
                "type": "null"
              }
            ],
            "description": "Journal"
          },
          "italian_specificities": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ItalianSpecificities-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "Specificities for Italy"
          },
          "last_updated_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Updated On"
          },
          "outstanding_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outstanding Amount",
            "description": "Amount left to be paid"
          },
          "accounting_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accounting Date",
            "description": "Accounting date"
          },
          "payment_method_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Method Id",
            "description": "Technical id of the payment method in Chift"
          },
          "currency_exchange_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency Exchange Rate",
            "description": "Indicates the exchange rate at the date of the invoice.",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref",
          "currency",
          "invoice_type",
          "status",
          "invoice_date",
          "tax_amount",
          "untaxed_amount",
          "total"
        ],
        "title": "InvoiceItemOut"
      },
      "InvoiceItemOutMonoAnalyticPlan": {
        "properties": {
          "invoice_type": {
            "$ref": "#/components/schemas/backbone_common__models__accounting__common__InvoiceType"
          },
          "invoice_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Number",
            "description": "Number of the invoice. If left empty, will be automatically generated by the accounting system at creation."
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Indicates the currency of the invoice (e.g. EUR)."
          },
          "untaxed_amount": {
            "type": "number",
            "title": "Untaxed Amount"
          },
          "tax_amount": {
            "type": "number",
            "title": "Tax Amount"
          },
          "total": {
            "type": "number",
            "title": "Total"
          },
          "reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference"
          },
          "payment_communication": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Communication"
          },
          "customer_memo": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Memo"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "invoice_date": {
            "type": "string",
            "format": "date",
            "title": "Invoice Date",
            "description": "Accounting invoice date. It is automatically set to '1970-01-01' if the value is empty in the accounting system."
          },
          "due_date": {
            "type": "string",
            "format": "date",
            "title": "Due Date",
            "description": "Due date of the invoice. We use the value of the invoice date if the value is not available/empty in the accounting system."
          },
          "partner_id": {
            "type": "string",
            "title": "Partner Id"
          },
          "journal_id": {
            "type": "string",
            "title": "Journal Id",
            "description": "Indicates the journal used in for the invoice. If the journal is not given, the journal will be automatically set if only one journal exists otherwise an error will be thrown."
          },
          "payments": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Payment"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payments"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InvoiceStatusOut"
              },
              {
                "type": "null"
              }
            ],
            "default": "posted"
          },
          "last_updated_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Updated On",
            "description": "The last time the invoice has been updated."
          },
          "lines": {
            "items": {
              "$ref": "#/components/schemas/InvoiceLineItemOutMonoAnalyticPlan"
            },
            "type": "array",
            "title": "Lines"
          }
        },
        "type": "object",
        "required": [
          "invoice_type",
          "currency",
          "untaxed_amount",
          "tax_amount",
          "total",
          "invoice_date",
          "due_date",
          "partner_id",
          "journal_id",
          "lines"
        ],
        "title": "InvoiceItemOutMonoAnalyticPlan"
      },
      "InvoiceItemOutMultiAnalyticPlans": {
        "properties": {
          "invoice_type": {
            "$ref": "#/components/schemas/backbone_common__models__accounting__common__InvoiceType"
          },
          "invoice_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Number",
            "description": "Number of the invoice. If left empty, will be automatically generated by the accounting system at creation."
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Indicates the currency of the invoice (e.g. EUR)."
          },
          "untaxed_amount": {
            "type": "number",
            "title": "Untaxed Amount"
          },
          "tax_amount": {
            "type": "number",
            "title": "Tax Amount"
          },
          "total": {
            "type": "number",
            "title": "Total"
          },
          "reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference"
          },
          "payment_communication": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Communication"
          },
          "customer_memo": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Memo"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "invoice_date": {
            "type": "string",
            "format": "date",
            "title": "Invoice Date",
            "description": "Accounting invoice date. It is automatically set to '1970-01-01' if the value is empty in the accounting system."
          },
          "due_date": {
            "type": "string",
            "format": "date",
            "title": "Due Date",
            "description": "Due date of the invoice. We use the value of the invoice date if the value is not available/empty in the accounting system."
          },
          "partner_id": {
            "type": "string",
            "title": "Partner Id"
          },
          "journal_id": {
            "type": "string",
            "title": "Journal Id",
            "description": "Indicates the journal used in for the invoice. If the journal is not given, the journal will be automatically set if only one journal exists otherwise an error will be thrown."
          },
          "payments": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Payment"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payments"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InvoiceStatusOut"
              },
              {
                "type": "null"
              }
            ],
            "default": "posted"
          },
          "last_updated_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Updated On",
            "description": "The last time the invoice has been updated."
          },
          "lines": {
            "items": {
              "$ref": "#/components/schemas/InvoiceLineItemOutMultiAnalyticPlans"
            },
            "type": "array",
            "title": "Lines"
          }
        },
        "type": "object",
        "required": [
          "invoice_type",
          "currency",
          "untaxed_amount",
          "tax_amount",
          "total",
          "invoice_date",
          "due_date",
          "partner_id",
          "journal_id",
          "lines"
        ],
        "title": "InvoiceItemOutMultiAnalyticPlans"
      },
      "InvoiceItemOutSingle": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id in Chift"
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Currency matching target sofware name"
          },
          "invoice_type": {
            "$ref": "#/components/schemas/backbone_common__models__invoicing__common__InvoiceType",
            "description": "Invoice type"
          },
          "status": {
            "$ref": "#/components/schemas/InvoiceStatus",
            "description": "Status"
          },
          "invoice_date": {
            "type": "string",
            "format": "date",
            "title": "Invoice Date",
            "description": "Invoicing date"
          },
          "tax_amount": {
            "type": "number",
            "title": "Tax Amount",
            "description": "Taxes amount"
          },
          "untaxed_amount": {
            "type": "number",
            "title": "Untaxed Amount",
            "description": "Untaxed amount"
          },
          "total": {
            "type": "number",
            "title": "Total",
            "description": "Total amount incl. taxes"
          },
          "lines": {
            "items": {
              "$ref": "#/components/schemas/InvoiceLineItem"
            },
            "type": "array",
            "title": "Lines",
            "description": "Invoice lines",
            "default": []
          },
          "partner_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Partner Id",
            "description": "Technical id of the vendor/customer in Chift"
          },
          "invoice_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Number",
            "description": "Number/sequence"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date",
            "description": "Due date"
          },
          "reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference",
            "description": "Reference"
          },
          "payment_communication": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Communication",
            "description": "Payment communication"
          },
          "customer_memo": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Memo",
            "description": "Customer note/memo"
          },
          "journal_ref": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FieldRef"
              },
              {
                "type": "null"
              }
            ],
            "description": "Journal"
          },
          "italian_specificities": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ItalianSpecificities-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "Specificities for Italy"
          },
          "last_updated_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Updated On"
          },
          "outstanding_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outstanding Amount",
            "description": "Amount left to be paid"
          },
          "accounting_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accounting Date",
            "description": "Accounting date"
          },
          "payment_method_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Method Id",
            "description": "Technical id of the payment method in Chift"
          },
          "currency_exchange_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency Exchange Rate",
            "description": "Indicates the exchange rate at the date of the invoice.",
            "default": 1
          },
          "pdf": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pdf",
            "description": "PDF document in base64"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref",
          "currency",
          "invoice_type",
          "status",
          "invoice_date",
          "tax_amount",
          "untaxed_amount",
          "total"
        ],
        "title": "InvoiceItemOutSingle",
        "description": "Invoice item returned in get 1 invoice"
      },
      "InvoiceLineItem": {
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Line description"
          },
          "unit_price": {
            "type": "number",
            "title": "Unit Price",
            "description": "Unit price excl. taxes"
          },
          "quantity": {
            "type": "number",
            "title": "Quantity",
            "description": "Quantity"
          },
          "discount_amount": {
            "type": "number",
            "title": "Discount Amount",
            "description": "Line discount amount excl. taxes, (unit_price * quantity) - discount_amount = untaxed_amount",
            "default": 0.0
          },
          "tax_amount": {
            "type": "number",
            "title": "Tax Amount",
            "description": "Line total taxes amount"
          },
          "untaxed_amount": {
            "type": "number",
            "title": "Untaxed Amount",
            "description": "Line total untaxed amount"
          },
          "total": {
            "type": "number",
            "title": "Total",
            "description": "Line total amount incl. taxes, total = tax_amount + untaxed_amount"
          },
          "tax_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tax Rate",
            "description": "Tax rate (e.g. 21.0)"
          },
          "account_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Account Number",
            "description": "Number of the accounting account used (e.g. 701000)"
          },
          "tax_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tax Id",
            "description": "Technical id of the tax in Chift"
          },
          "tax_exemption_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tax Exemption Reason",
            "description": "Tax exemption reason"
          },
          "unit_of_measure": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit Of Measure",
            "description": "Unit of measure matching target sofware name"
          },
          "product_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product Id",
            "description": "Technical id of the product in Chift"
          },
          "product_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product Code",
            "description": "Product reference"
          },
          "product_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product Name",
            "description": "Product name"
          }
        },
        "type": "object",
        "required": [
          "unit_price",
          "quantity",
          "tax_amount",
          "untaxed_amount",
          "total"
        ],
        "title": "InvoiceLineItem"
      },
      "InvoiceLineItemInMonoAnalyticPlan": {
        "properties": {
          "line_number": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line Number",
            "default": 1
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "unit_price": {
            "type": "number",
            "title": "Unit Price"
          },
          "unit_of_measure": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit Of Measure",
            "description": "A list of default units can be used for which an advanced mapping has been done (units: 'hour', 'day', 'cm', 'm2', 'm3', 'm', 'km', 'mile', 'g', 'kg', 'ton', 'box', 'pallet', 'roll', 'liter', 'unit'). Custom units of measure must have an identical name in the target software."
          },
          "quantity": {
            "type": "number",
            "title": "Quantity"
          },
          "untaxed_amount": {
            "type": "number",
            "title": "Untaxed Amount"
          },
          "tax_rate": {
            "type": "number",
            "title": "Tax Rate",
            "description": "Indicates the tax rate used for the line (e.g. 21.0)."
          },
          "tax_amount": {
            "type": "number",
            "title": "Tax Amount"
          },
          "total": {
            "type": "number",
            "title": "Total"
          },
          "account_number": {
            "type": "string",
            "minLength": 1,
            "title": "Account Number",
            "description": "Indicates the number of the account used for the line (e.g. 701000)."
          },
          "tax_code": {
            "type": "string",
            "minLength": 1,
            "title": "Tax Code",
            "description": "Indicates the tax code used for the line. This is the ID of the Tax Code in the accounting software."
          },
          "analytic_account": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Analytic Account"
          }
        },
        "type": "object",
        "required": [
          "description",
          "unit_price",
          "quantity",
          "untaxed_amount",
          "tax_rate",
          "tax_amount",
          "total",
          "account_number",
          "tax_code"
        ],
        "title": "InvoiceLineItemInMonoAnalyticPlan"
      },
      "InvoiceLineItemInMultiAnalyticPlans": {
        "properties": {
          "line_number": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line Number",
            "default": 1
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "unit_price": {
            "type": "number",
            "title": "Unit Price"
          },
          "unit_of_measure": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit Of Measure",
            "description": "A list of default units can be used for which an advanced mapping has been done (units: 'hour', 'day', 'cm', 'm2', 'm3', 'm', 'km', 'mile', 'g', 'kg', 'ton', 'box', 'pallet', 'roll', 'liter', 'unit'). Custom units of measure must have an identical name in the target software."
          },
          "quantity": {
            "type": "number",
            "title": "Quantity"
          },
          "untaxed_amount": {
            "type": "number",
            "title": "Untaxed Amount"
          },
          "tax_rate": {
            "type": "number",
            "title": "Tax Rate",
            "description": "Indicates the tax rate used for the line (e.g. 21.0)."
          },
          "tax_amount": {
            "type": "number",
            "title": "Tax Amount"
          },
          "total": {
            "type": "number",
            "title": "Total"
          },
          "account_number": {
            "type": "string",
            "minLength": 1,
            "title": "Account Number",
            "description": "Indicates the number of the account used for the line (e.g. 701000)."
          },
          "tax_code": {
            "type": "string",
            "minLength": 1,
            "title": "Tax Code",
            "description": "Indicates the tax code used for the line. This is the ID of the Tax Code in the accounting software."
          },
          "analytic_distribution": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AnalyticDistribution"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Analytic Distribution",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "description",
          "unit_price",
          "quantity",
          "untaxed_amount",
          "tax_rate",
          "tax_amount",
          "total",
          "account_number",
          "tax_code"
        ],
        "title": "InvoiceLineItemInMultiAnalyticPlans"
      },
      "InvoiceLineItemOutMonoAnalyticPlan": {
        "properties": {
          "line_number": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line Number",
            "default": 1
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "unit_price": {
            "type": "number",
            "title": "Unit Price"
          },
          "unit_of_measure": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit Of Measure",
            "description": "A list of default units can be used for which an advanced mapping has been done (units: 'hour', 'day', 'cm', 'm2', 'm3', 'm', 'km', 'mile', 'g', 'kg', 'ton', 'box', 'pallet', 'roll', 'liter', 'unit'). Custom units of measure must have an identical name in the target software."
          },
          "quantity": {
            "type": "number",
            "title": "Quantity"
          },
          "untaxed_amount": {
            "type": "number",
            "title": "Untaxed Amount"
          },
          "tax_rate": {
            "type": "number",
            "title": "Tax Rate",
            "description": "Indicates the tax rate used for the line (e.g. 21.0)."
          },
          "tax_amount": {
            "type": "number",
            "title": "Tax Amount"
          },
          "total": {
            "type": "number",
            "title": "Total"
          },
          "account_number": {
            "type": "string",
            "title": "Account Number",
            "description": "Indicates the number of the account used for the line (e.g. 701000)."
          },
          "tax_code": {
            "type": "string",
            "title": "Tax Code",
            "description": "Indicates the tax code used for the line. This is the ID of the Tax Code in the accounting software."
          },
          "analytic_account": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Analytic Account"
          }
        },
        "type": "object",
        "required": [
          "description",
          "unit_price",
          "quantity",
          "untaxed_amount",
          "tax_rate",
          "tax_amount",
          "total",
          "account_number"
        ],
        "title": "InvoiceLineItemOutMonoAnalyticPlan"
      },
      "InvoiceLineItemOutMultiAnalyticPlans": {
        "properties": {
          "line_number": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line Number",
            "default": 1
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "unit_price": {
            "type": "number",
            "title": "Unit Price"
          },
          "unit_of_measure": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit Of Measure",
            "description": "A list of default units can be used for which an advanced mapping has been done (units: 'hour', 'day', 'cm', 'm2', 'm3', 'm', 'km', 'mile', 'g', 'kg', 'ton', 'box', 'pallet', 'roll', 'liter', 'unit'). Custom units of measure must have an identical name in the target software."
          },
          "quantity": {
            "type": "number",
            "title": "Quantity"
          },
          "untaxed_amount": {
            "type": "number",
            "title": "Untaxed Amount"
          },
          "tax_rate": {
            "type": "number",
            "title": "Tax Rate",
            "description": "Indicates the tax rate used for the line (e.g. 21.0)."
          },
          "tax_amount": {
            "type": "number",
            "title": "Tax Amount"
          },
          "total": {
            "type": "number",
            "title": "Total"
          },
          "account_number": {
            "type": "string",
            "title": "Account Number",
            "description": "Indicates the number of the account used for the line (e.g. 701000)."
          },
          "tax_code": {
            "type": "string",
            "title": "Tax Code",
            "description": "Indicates the tax code used for the line. This is the ID of the Tax Code in the accounting software."
          },
          "analytic_distribution": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AnalyticDistribution"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Analytic Distribution",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "description",
          "unit_price",
          "quantity",
          "untaxed_amount",
          "tax_rate",
          "tax_amount",
          "total",
          "account_number"
        ],
        "title": "InvoiceLineItemOutMultiAnalyticPlans"
      },
      "InvoicePartnerItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id in Chift"
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "type": {
            "$ref": "#/components/schemas/PartnerType",
            "description": "Type of the partner",
            "example": "account"
          },
          "address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AddressItem"
              },
              {
                "type": "null"
              }
            ],
            "description": "Address of the partner"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name",
            "description": "First name of the partner. In case the partner is an individual.",
            "example": "John"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name",
            "description": "Last name of the partner. In case the partner is an individual.",
            "example": "Doe"
          },
          "company_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Name",
            "description": "Company name of the partner. In case the partner is a company.",
            "example": "Acme Corp"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref",
          "type"
        ],
        "title": "InvoicePartnerItem"
      },
      "InvoiceStatus": {
        "type": "string",
        "enum": [
          "cancelled",
          "draft",
          "posted",
          "paid"
        ],
        "title": "InvoiceStatus"
      },
      "InvoiceStatusIn": {
        "type": "string",
        "enum": [
          "draft",
          "posted"
        ],
        "title": "InvoiceStatusIn"
      },
      "InvoiceStatusOut": {
        "type": "string",
        "enum": [
          "cancelled",
          "draft",
          "posted",
          "paid"
        ],
        "title": "InvoiceStatusOut"
      },
      "InvoicingPaymentItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id in Chift"
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "status": {
            "$ref": "#/components/schemas/backbone_common__models__payment__common__PaymentStatus",
            "description": "Payment status"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Description"
          },
          "amount": {
            "type": "number",
            "title": "Amount",
            "description": "Amount"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Currency"
          },
          "payment_date": {
            "type": "string",
            "format": "date-time",
            "title": "Payment Date",
            "description": "Date of creation"
          },
          "partner_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Partner Id",
            "description": "Partner ID"
          },
          "payment_method_id": {
            "type": "string",
            "title": "Payment Method Id",
            "description": "Technical id of the payment method in Chift"
          },
          "payment_method_name": {
            "type": "string",
            "title": "Payment Method Name",
            "description": "Payment method name"
          },
          "invoice_id": {
            "type": "string",
            "title": "Invoice Id",
            "description": "Technical id of the invoice in Chift"
          },
          "invoice_number": {
            "type": "string",
            "title": "Invoice Number",
            "description": "Invoice number"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref",
          "status",
          "description",
          "amount",
          "currency",
          "payment_date",
          "partner_id",
          "payment_method_id",
          "payment_method_name",
          "invoice_id",
          "invoice_number"
        ],
        "title": "InvoicingPaymentItem"
      },
      "InvoicingPaymentMethodItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id in Chift"
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Payment method name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref",
          "name"
        ],
        "title": "InvoicingPaymentMethodItem"
      },
      "InvoicingVatCode": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id in Chift"
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "label": {
            "type": "string",
            "title": "Label",
            "description": "Label"
          },
          "rate": {
            "type": "number",
            "title": "Rate",
            "description": "Tax rate (e.g. 21.0)"
          },
          "type": {
            "$ref": "#/components/schemas/VatCodeType",
            "description": "Type"
          },
          "code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code",
            "description": "Code"
          },
          "scope": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VatCodeScope"
              },
              {
                "type": "null"
              }
            ],
            "description": "Scope",
            "default": "unknown"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref",
          "label",
          "rate",
          "type"
        ],
        "title": "InvoicingVatCode"
      },
      "IssueItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "consumer_id": {
            "type": "string",
            "title": "Consumer Id"
          },
          "connection_id": {
            "type": "string",
            "title": "Connection Id"
          },
          "integration_id": {
            "type": "integer",
            "title": "Integration Id"
          },
          "integration_name": {
            "type": "string",
            "title": "Integration Name"
          },
          "created_on": {
            "type": "string",
            "format": "date-time",
            "title": "Created On"
          },
          "updated_on": {
            "type": "string",
            "format": "date-time",
            "title": "Updated On"
          },
          "last_seen": {
            "type": "string",
            "format": "date-time",
            "title": "Last Seen"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "occurrences": {
            "type": "integer",
            "title": "Occurrences"
          }
        },
        "type": "object",
        "required": [
          "id",
          "consumer_id",
          "connection_id",
          "integration_id",
          "integration_name",
          "created_on",
          "updated_on",
          "last_seen",
          "error",
          "occurrences"
        ],
        "title": "IssueItem"
      },
      "IssueStatus": {
        "type": "string",
        "enum": [
          "open",
          "closed",
          "all"
        ],
        "title": "IssueStatus"
      },
      "ItalianSpecificities-Input": {
        "properties": {
          "stamp_duty_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stamp Duty Amount",
            "description": "Documentary stamp tax (specific to Italy)"
          },
          "withholding_tax": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WithholdingTax"
              },
              {
                "type": "null"
              }
            ],
            "description": "Withholding tax (specific to Italy)"
          },
          "welfare_fund": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WelfareFund"
              },
              {
                "type": "null"
              }
            ],
            "description": "Welfare fund (specific to Italy)"
          },
          "payment_reporting": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaymentReporting"
              },
              {
                "type": "null"
              }
            ],
            "description": "Payment reporting (specific to Italy)"
          }
        },
        "type": "object",
        "title": "ItalianSpecificities"
      },
      "ItalianSpecificities-Output": {
        "properties": {
          "stamp_duty_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stamp Duty Amount",
            "description": "Documentary stamp tax (specific to Italy)"
          },
          "withholding_tax": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WithholdingTax"
              },
              {
                "type": "null"
              }
            ],
            "description": "Withholding tax (specific to Italy)"
          },
          "welfare_fund": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WelfareFund"
              },
              {
                "type": "null"
              }
            ],
            "description": "Welfare fund (specific to Italy)"
          },
          "payment_reporting": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaymentReporting"
              },
              {
                "type": "null"
              }
            ],
            "description": "Payment reporting (specific to Italy)"
          }
        },
        "type": "object",
        "title": "ItalianSpecificities"
      },
      "Journal": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "journal_type": {
            "$ref": "#/components/schemas/JournalType"
          },
          "counterpart_account": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Counterpart Account"
          },
          "next_document_numbers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/NextDocumentNumber"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Document Numbers",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "journal_type"
        ],
        "title": "Journal"
      },
      "JournalEntryIn": {
        "properties": {
          "reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date"
          },
          "journal_id": {
            "type": "string",
            "title": "Journal Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/JournalItemIn"
            },
            "type": "array",
            "title": "Items"
          },
          "pdf": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pdf",
            "description": "Base 64 string representing the PDF attached to the item."
          }
        },
        "type": "object",
        "required": [
          "journal_id",
          "name",
          "date",
          "items"
        ],
        "title": "JournalEntryIn"
      },
      "JournalEntryMonoAnalyticPlan": {
        "properties": {
          "reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date"
          },
          "journal_id": {
            "type": "string",
            "title": "Journal Id"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "journal_name": {
            "type": "string",
            "title": "Journal Name"
          },
          "date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date",
            "description": "Accounting date of the journal entry. It is automatically set to '1970-01-01' if the value is not available/empty in the accounting system.",
            "default": "1970-01-01"
          },
          "posted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Posted",
            "default": false
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "items": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/JournalItemMonoAnalyticPlan"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Items",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "journal_id",
          "journal_name",
          "id"
        ],
        "title": "JournalEntryMonoAnalyticPlan"
      },
      "JournalEntryMultiAnalyticPlan": {
        "properties": {
          "reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date"
          },
          "journal_id": {
            "type": "string",
            "title": "Journal Id"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "journal_name": {
            "type": "string",
            "title": "Journal Name"
          },
          "date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date",
            "description": "Accounting date of the journal entry. It is automatically set to '1970-01-01' if the value is not available/empty in the accounting system.",
            "default": "1970-01-01"
          },
          "posted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Posted",
            "default": false
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "items": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/JournalItemMultiAnalyticPlan"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Items",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "journal_id",
          "journal_name",
          "id"
        ],
        "title": "JournalEntryMultiAnalyticPlan"
      },
      "JournalIn": {
        "properties": {
          "code": {
            "type": "string",
            "minLength": 2,
            "title": "Code"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Name"
          },
          "journal_type": {
            "$ref": "#/components/schemas/JournalInType"
          },
          "counterpart_account": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Counterpart Account"
          }
        },
        "type": "object",
        "required": [
          "code",
          "name",
          "journal_type"
        ],
        "title": "JournalIn"
      },
      "JournalInType": {
        "type": "string",
        "enum": [
          "customer_invoice",
          "customer_refund",
          "supplier_invoice",
          "supplier_refund",
          "bank",
          "cash",
          "miscellaneous_operation"
        ],
        "title": "JournalInType"
      },
      "JournalItemIn": {
        "properties": {
          "account_number": {
            "type": "string",
            "minLength": 1,
            "title": "Account Number"
          },
          "partner_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Partner Id"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "debit": {
            "type": "number",
            "title": "Debit"
          },
          "credit": {
            "type": "number",
            "title": "Credit"
          },
          "currency": {
            "type": "string",
            "minLength": 1,
            "title": "Currency"
          },
          "currency_exchange_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency Exchange Rate",
            "default": 1
          },
          "analytic_distribution": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AnalyticDistribution"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Analytic Distribution",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "account_number",
          "debit",
          "credit",
          "currency"
        ],
        "title": "JournalItemIn"
      },
      "JournalItemMonoAnalyticPlan": {
        "properties": {
          "account_number": {
            "type": "string",
            "minLength": 1,
            "title": "Account Number"
          },
          "partner_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Partner Id"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "debit": {
            "type": "number",
            "title": "Debit"
          },
          "credit": {
            "type": "number",
            "title": "Credit"
          },
          "currency": {
            "type": "string",
            "minLength": 1,
            "title": "Currency"
          },
          "currency_exchange_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency Exchange Rate",
            "default": 1
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "partner_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Partner Name"
          },
          "account_name": {
            "type": "string",
            "title": "Account Name"
          },
          "matching_numbers": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Matching Numbers",
            "default": []
          },
          "analytic_account": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Analytic Account"
          },
          "analytic_account_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Analytic Account Name"
          }
        },
        "type": "object",
        "required": [
          "account_number",
          "debit",
          "credit",
          "currency",
          "id",
          "account_name"
        ],
        "title": "JournalItemMonoAnalyticPlan"
      },
      "JournalItemMultiAnalyticPlan": {
        "properties": {
          "account_number": {
            "type": "string",
            "minLength": 1,
            "title": "Account Number"
          },
          "partner_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Partner Id"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "debit": {
            "type": "number",
            "title": "Debit"
          },
          "credit": {
            "type": "number",
            "title": "Credit"
          },
          "currency": {
            "type": "string",
            "minLength": 1,
            "title": "Currency"
          },
          "currency_exchange_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency Exchange Rate",
            "default": 1
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "partner_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Partner Name"
          },
          "account_name": {
            "type": "string",
            "title": "Account Name"
          },
          "matching_numbers": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Matching Numbers",
            "default": []
          },
          "analytic_distribution": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AnalyticDistribution"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Analytic Distribution",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "account_number",
          "debit",
          "credit",
          "currency",
          "id",
          "account_name"
        ],
        "title": "JournalItemMultiAnalyticPlan"
      },
      "JournalType": {
        "type": "string",
        "enum": [
          "customer_invoice",
          "customer_refund",
          "supplier_invoice",
          "supplier_refund",
          "financial_operation",
          "miscellaneous_operation",
          "unknown"
        ],
        "title": "JournalType"
      },
      "LedgerAccountItemIn": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Name"
          },
          "number": {
            "type": "string",
            "minLength": 3,
            "title": "Number"
          }
        },
        "type": "object",
        "required": [
          "name",
          "number"
        ],
        "title": "LedgerAccountItemIn"
      },
      "LinkItem": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "LinkItem"
      },
      "LinkSyncItem": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "LinkSyncItem"
      },
      "LocalAgentInfo": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/LocalAgentStatus"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "LocalAgentInfo"
      },
      "LocalAgentStatus": {
        "type": "string",
        "enum": [
          "up",
          "down"
        ],
        "title": "LocalAgentStatus"
      },
      "LogoImage": {
        "properties": {
          "integrationid": {
            "type": "string",
            "title": "Integrationid"
          },
          "data": {
            "type": "string",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "integrationid",
          "data"
        ],
        "title": "LogoImage"
      },
      "MatchingIn": {
        "properties": {
          "entries": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Entries"
          },
          "partner_id": {
            "type": "string",
            "title": "Partner Id"
          }
        },
        "type": "object",
        "required": [
          "entries",
          "partner_id"
        ],
        "title": "MatchingIn"
      },
      "MatchingOut": {
        "properties": {
          "matching_number": {
            "type": "string",
            "title": "Matching Number"
          },
          "balance": {
            "type": "number",
            "title": "Balance"
          }
        },
        "type": "object",
        "required": [
          "matching_number",
          "balance"
        ],
        "title": "MatchingOut"
      },
      "MiscellaneousOperationIn": {
        "properties": {
          "operation_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Operation Number"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Indicates the currency of the operation (e.g. EUR)."
          },
          "currency_exchange_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency Exchange Rate",
            "description": "Indicates the exchange rate at the date of the operation. Must be filled in when creating the operation in another currency from the default currency of the accounting system.",
            "default": 1
          },
          "lines": {
            "items": {
              "$ref": "#/components/schemas/MiscellaneousOperationLine"
            },
            "type": "array",
            "title": "Lines"
          },
          "operation_date": {
            "type": "string",
            "format": "date",
            "title": "Operation Date"
          },
          "journal_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Journal Id",
            "description": "Indicates the journal used in for the operation. If the journal is not given, the journal will be automatically set if only one journal exists otherwise an error will be thrown."
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MiscellaneousOperationStatusIn"
              },
              {
                "type": "null"
              }
            ],
            "default": "posted"
          }
        },
        "type": "object",
        "required": [
          "currency",
          "lines",
          "operation_date"
        ],
        "title": "MiscellaneousOperationIn"
      },
      "MiscellaneousOperationLine": {
        "properties": {
          "line_number": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line Number",
            "default": 1
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "amount": {
            "type": "number",
            "title": "Amount",
            "description": "Positive for Credit and negative for Debit."
          },
          "type": {
            "$ref": "#/components/schemas/MiscellaneousOperationLineType"
          },
          "account_number": {
            "type": "string",
            "title": "Account Number"
          },
          "partner_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Partner Id",
            "description": "Must be filled in it is a 'customer_account' or 'supplier_account' line type."
          },
          "analytic_account": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Analytic Account"
          }
        },
        "type": "object",
        "required": [
          "amount",
          "type",
          "account_number"
        ],
        "title": "MiscellaneousOperationLine"
      },
      "MiscellaneousOperationLineType": {
        "type": "string",
        "enum": [
          "customer_account",
          "supplier_account",
          "general_account"
        ],
        "title": "MiscellaneousOperationLineType"
      },
      "MiscellaneousOperationOut": {
        "properties": {
          "operation_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Operation Number"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Indicates the currency of the operation (e.g. EUR)."
          },
          "currency_exchange_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency Exchange Rate",
            "description": "Indicates the exchange rate at the date of the operation. Must be filled in when creating the operation in another currency from the default currency of the accounting system.",
            "default": 1
          },
          "lines": {
            "items": {
              "$ref": "#/components/schemas/MiscellaneousOperationLine"
            },
            "type": "array",
            "title": "Lines"
          },
          "operation_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Operation Date",
            "description": "Accounting date of the miscellaneous operation. It is automatically set to '1970-01-01' if the value is not available/empty in the accounting system.",
            "default": "1970-01-01"
          },
          "journal_id": {
            "type": "string",
            "title": "Journal Id",
            "description": "Indicates the journal used in for the operation."
          },
          "status": {
            "$ref": "#/components/schemas/MiscellaneousOperationStatusOut"
          },
          "id": {
            "type": "string",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "currency",
          "lines",
          "journal_id",
          "status",
          "id"
        ],
        "title": "MiscellaneousOperationOut"
      },
      "MiscellaneousOperationStatusIn": {
        "type": "string",
        "enum": [
          "draft",
          "posted"
        ],
        "title": "MiscellaneousOperationStatusIn"
      },
      "MiscellaneousOperationStatusOut": {
        "type": "string",
        "enum": [
          "cancelled",
          "draft",
          "posted",
          "matched"
        ],
        "title": "MiscellaneousOperationStatusOut"
      },
      "MultipleMatchingIn": {
        "properties": {
          "matchings": {
            "items": {
              "$ref": "#/components/schemas/MatchingIn"
            },
            "type": "array",
            "title": "Matchings"
          }
        },
        "type": "object",
        "required": [
          "matchings"
        ],
        "title": "MultipleMatchingIn"
      },
      "MultipleMatchingOut": {
        "properties": {
          "matching_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Matching Number"
          },
          "processed": {
            "type": "boolean",
            "title": "Processed"
          },
          "error_msg": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Msg"
          }
        },
        "type": "object",
        "required": [
          "processed"
        ],
        "title": "MultipleMatchingOut"
      },
      "NextDocumentNumber": {
        "properties": {
          "bookyear_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bookyear Name"
          },
          "next_document_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Document Number"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          }
        },
        "type": "object",
        "title": "NextDocumentNumber"
      },
      "NlPaymentTermsSplit": {
        "properties": {
          "g_account": {
            "$ref": "#/components/schemas/PaymentTermAccountInfo"
          },
          "n_account": {
            "$ref": "#/components/schemas/PaymentTermAccountInfo"
          }
        },
        "type": "object",
        "required": [
          "g_account",
          "n_account"
        ],
        "title": "NlPaymentTermsSplit"
      },
      "ObjectivesItem": {
        "properties": {
          "total": {
            "type": "string",
            "title": "Total",
            "description": "Total amount including tax of the sales",
            "examples": [
              10
            ]
          },
          "tax_amount": {
            "type": "string",
            "title": "Tax Amount",
            "description": "Total amount of the taxes",
            "examples": [
              1
            ]
          }
        },
        "type": "object",
        "required": [
          "total",
          "tax_amount"
        ],
        "title": "ObjectivesItem"
      },
      "OpportunityItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id in Chift"
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Name"
          },
          "total": {
            "type": "number",
            "title": "Total",
            "description": "Total"
          },
          "probability": {
            "type": "number",
            "title": "Probability",
            "description": "Probability of success"
          },
          "status": {
            "$ref": "#/components/schemas/OpportunityStatus",
            "description": "Status"
          },
          "partner_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Partner Id",
            "description": "Technical id of the customer in Chift"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment",
            "description": "Comment"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "Currency matching target sofware name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description"
          },
          "pipe_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pipe Status",
            "description": "Current stage in pipeline"
          },
          "pipe_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pipe Name",
            "description": "Pipeline name"
          },
          "created_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created Date",
            "description": "Date creation"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date",
            "description": "Due Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date",
            "description": "End Date"
          },
          "is_won": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Won",
            "description": "Is won?"
          },
          "owner_ref": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FieldRef"
              },
              {
                "type": "null"
              }
            ],
            "description": "Employee/User"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref",
          "name",
          "total",
          "probability",
          "status"
        ],
        "title": "OpportunityItem"
      },
      "OpportunityStatus": {
        "type": "string",
        "enum": [
          "open",
          "won",
          "lost",
          "cancelled",
          "closed"
        ],
        "title": "OpportunityStatus"
      },
      "OrderCustomerItem": {
        "properties": {
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "internal_notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Internal Notes"
          },
          "email": {
            "type": "string",
            "title": "Email"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "OrderCustomerItem"
      },
      "OrderCustomerItemOut": {
        "properties": {
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "internal_notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Internal Notes"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id of the customer in Chift"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "OrderCustomerItemOut"
      },
      "OrderItemIn": {
        "properties": {
          "customer": {
            "$ref": "#/components/schemas/OrderCustomerItem"
          },
          "billing_address": {
            "$ref": "#/components/schemas/backbone_common__models__commerce__common__AddressItemIn"
          },
          "shipping_address": {
            "$ref": "#/components/schemas/backbone_common__models__commerce__common__AddressItemIn"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Indicates the currency of the order (e.g. EUR)."
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note"
          },
          "lines": {
            "items": {
              "$ref": "#/components/schemas/OrderLineItemIn"
            },
            "type": "array",
            "title": "Lines"
          },
          "payment_method": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Method",
            "description": "If filled in the order will be marked as paid and processed by this payment method."
          }
        },
        "type": "object",
        "required": [
          "customer",
          "billing_address",
          "shipping_address",
          "currency",
          "lines"
        ],
        "title": "OrderItemIn"
      },
      "OrderItemOut": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id in Chift"
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "order_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Order Number"
          },
          "customer": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrderCustomerItemOut"
              },
              {
                "type": "null"
              }
            ]
          },
          "billing_address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/backbone_common__models__commerce__common__AddressItemOut"
              },
              {
                "type": "null"
              }
            ]
          },
          "shipping_address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/backbone_common__models__commerce__common__AddressItemOut"
              },
              {
                "type": "null"
              }
            ]
          },
          "created_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created On"
          },
          "last_updated_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Updated On"
          },
          "confirmed_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confirmed On"
          },
          "delivery_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delivery Date"
          },
          "cancelled_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cancelled On"
          },
          "status": {
            "$ref": "#/components/schemas/OrderStatus"
          },
          "discount_amount": {
            "type": "number",
            "title": "Discount Amount"
          },
          "untaxed_amount_without_fees": {
            "type": "number",
            "title": "Untaxed Amount Without Fees",
            "description": "Untaxed amount without fees (e.g. shipping) but with discout. Refunds and returns are not included."
          },
          "tax_amount_without_fees": {
            "type": "number",
            "title": "Tax Amount Without Fees",
            "description": "Total taxes applied to the order without taxes linked to fees (e.g. shipping)."
          },
          "total_without_fees": {
            "type": "number",
            "title": "Total Without Fees",
            "description": "Total of the order without fees (e.g. shipping) but with discount. Refunds and returns are not included."
          },
          "current_untaxed_amount": {
            "type": "number",
            "title": "Current Untaxed Amount",
            "description": "Untaxed amount with discout and any kind of fee (e.g. shipping). After returns, removes and returns."
          },
          "current_tax_amount": {
            "type": "number",
            "title": "Current Tax Amount",
            "description": "Total taxes applied to the order. After returns, removes and returns."
          },
          "current_total": {
            "type": "number",
            "title": "Current Total",
            "description": "Current total of the order with discount. After returns, removes and returns."
          },
          "untaxed_amount": {
            "type": "number",
            "title": "Untaxed Amount",
            "description": "Untaxed amount with discout and any kind of fee (e.g. shipping). Refunds and returns are not included."
          },
          "tax_amount": {
            "type": "number",
            "title": "Tax Amount",
            "description": "Total taxes applied to the order. Refunds and returns are not included."
          },
          "total": {
            "type": "number",
            "title": "Total",
            "description": "Total of the order with discount. Refunds and returns are not included."
          },
          "refunded_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refunded Amount",
            "default": 0
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Indicates the currency of the order (e.g. EUR)."
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "default": []
          },
          "lines": {
            "items": {
              "$ref": "#/components/schemas/OrderLineItemOut"
            },
            "type": "array",
            "title": "Lines"
          },
          "other_fees": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FeesItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Other Fees",
            "default": []
          },
          "payment_method_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Method Id",
            "description": "Technical id of the payment method in the eCommerce"
          },
          "transactions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/OrderTransactions"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transactions",
            "default": []
          },
          "payment_methods": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/OrderPaymentMethods"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Methods",
            "default": []
          },
          "detailed_refunds": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/OrderRefundItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Detailed Refunds"
          },
          "returns": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/OrderReturnItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Returns",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref",
          "status",
          "discount_amount",
          "untaxed_amount_without_fees",
          "tax_amount_without_fees",
          "total_without_fees",
          "current_untaxed_amount",
          "current_tax_amount",
          "current_total",
          "untaxed_amount",
          "tax_amount",
          "total",
          "currency",
          "lines"
        ],
        "title": "OrderItemOut"
      },
      "OrderLineItemIn": {
        "properties": {
          "variant_id": {
            "type": "string",
            "title": "Variant Id",
            "description": "Technical id of the product variant in Chift"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "tax_rate": {
            "type": "number",
            "title": "Tax Rate",
            "description": "Indicates the tax rate used for the line (e.g. 21.0)."
          },
          "unit_price": {
            "type": "number",
            "title": "Unit Price",
            "description": "Unit price of the product without taxes."
          }
        },
        "type": "object",
        "required": [
          "variant_id",
          "quantity",
          "tax_rate",
          "unit_price"
        ],
        "title": "OrderLineItemIn"
      },
      "OrderLineItemOut": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id in Chift"
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "created_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created On"
          },
          "variant": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrderLineProductVariantItem"
              },
              {
                "type": "null"
              }
            ],
            "description": "Product variant"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "current_quantity": {
            "type": "integer",
            "title": "Current Quantity",
            "description": "Quantity without refunds and returns."
          },
          "unit_price": {
            "type": "number",
            "title": "Unit Price",
            "description": "Unit price of the product without taxes."
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "tax_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tax Id",
            "description": "Technical id of the tax rate in Chift"
          },
          "tax_rate": {
            "type": "number",
            "title": "Tax Rate",
            "description": "Indicates the tax rate used for the line (e.g. 21.0)."
          },
          "untaxed_amount": {
            "type": "number",
            "title": "Untaxed Amount",
            "description": "Untaxed amount of the order line with discount."
          },
          "tax_amount": {
            "type": "number",
            "title": "Tax Amount",
            "description": "Total taxes applied to the order line."
          },
          "total": {
            "type": "number",
            "title": "Total",
            "description": "Total of the order line with discount."
          },
          "discounts": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/backbone_common__models__commerce__common__DiscountItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Discounts",
            "default": []
          },
          "gift_card": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gift Card",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref",
          "quantity",
          "current_quantity",
          "unit_price",
          "description",
          "tax_rate",
          "untaxed_amount",
          "tax_amount",
          "total"
        ],
        "title": "OrderLineItemOut"
      },
      "OrderLineProductVariantItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id of the product variant in Chift"
          },
          "sku": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sku"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "categories": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/backbone_common__models__commerce__common__ProductCategoryItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Categories",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "OrderLineProductVariantItem"
      },
      "OrderPaymentMethods": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id of the payment method in the eCommerce"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Name of the payment method"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "OrderPaymentMethods"
      },
      "OrderRefundItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id in Chift"
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "created_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created On"
          },
          "total": {
            "type": "number",
            "title": "Total"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "order_lines": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RefundOrderLineItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Order Lines",
            "default": []
          },
          "other": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Other",
            "default": 0
          },
          "shipping_refunds": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ShippingRefund"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shipping Refunds",
            "default": []
          },
          "other_fees": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RefundFeesItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Other Fees",
            "default": []
          },
          "transactions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/OrderTransactions"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transactions",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref",
          "total"
        ],
        "title": "OrderRefundItem"
      },
      "OrderReturnItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id of the return in Chift"
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "created_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created On"
          },
          "order_lines": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ReturnOrderLineItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Order Lines",
            "default": []
          },
          "new_lines": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ReturnOrderLineItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Lines",
            "default": []
          },
          "linked_fees": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ReturnFeesItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Linked Fees",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref"
        ],
        "title": "OrderReturnItem"
      },
      "OrderStatus": {
        "type": "string",
        "enum": [
          "cancelled_unpaid",
          "cancelled",
          "draft",
          "confirmed",
          "shipped",
          "refunded"
        ],
        "title": "OrderStatus"
      },
      "OrderTransactions": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id of the transaction in the eCommerce"
          },
          "created_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created On"
          },
          "payment_method_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Method Id",
            "description": "Technical id of the payment method in the eCommerce"
          },
          "payment_method_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Method Name",
            "description": "Name of the payment method"
          },
          "amount": {
            "type": "number",
            "title": "Amount"
          },
          "status": {
            "$ref": "#/components/schemas/TransactionStatus"
          }
        },
        "type": "object",
        "required": [
          "id",
          "amount",
          "status"
        ],
        "title": "OrderTransactions"
      },
      "OriginalOutstandingItem": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number"
          },
          "journal_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Journal Id"
          },
          "journal_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/JournalType"
              },
              {
                "type": "null"
              }
            ]
          },
          "date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date"
          },
          "reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference"
          }
        },
        "type": "object",
        "title": "OriginalOutstandingItem"
      },
      "OutstandingItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number"
          },
          "journal_id": {
            "type": "string",
            "title": "Journal Id"
          },
          "journal_type": {
            "$ref": "#/components/schemas/JournalType"
          },
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date"
          },
          "currency": {
            "type": "string",
            "title": "Currency"
          },
          "currency_exchange_rate": {
            "type": "number",
            "title": "Currency Exchange Rate"
          },
          "amount": {
            "type": "number",
            "title": "Amount"
          },
          "open_amount": {
            "type": "number",
            "title": "Open Amount"
          },
          "partner_id": {
            "type": "string",
            "title": "Partner Id"
          },
          "account_number": {
            "type": "string",
            "title": "Account Number"
          },
          "reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference"
          },
          "matching_numbers": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Matching Numbers",
            "default": []
          },
          "payment_communication": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Communication"
          },
          "posted": {
            "type": "boolean",
            "title": "Posted"
          },
          "original_document": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OriginalOutstandingItem"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "journal_id",
          "journal_type",
          "date",
          "currency",
          "currency_exchange_rate",
          "amount",
          "open_amount",
          "partner_id",
          "account_number",
          "posted"
        ],
        "title": "OutstandingItem"
      },
      "OutstandingType": {
        "type": "string",
        "enum": [
          "client",
          "supplier"
        ],
        "title": "OutstandingType"
      },
      "PMSAccountingCategoryItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Unique identifier of the accounting category",
            "examples": [
              "371ca583-d218-4900-b236-397532cf0e2"
            ]
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Name given to the accounting category",
            "examples": [
              "Beverages"
            ]
          },
          "code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code",
            "description": "Code assigned to the category",
            "examples": [
              "123456"
            ]
          },
          "ledger_account_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ledger Account Code",
            "description": "Ledger account code assigned to the category",
            "examples": [
              "123456"
            ]
          },
          "posting_account_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Posting Account Code",
            "description": "Posting account code assigned to the category",
            "examples": [
              "123456"
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref",
          "name"
        ],
        "title": "PMSAccountingCategoryItem"
      },
      "PMSClosureItem": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date",
            "description": "Date of the closure",
            "examples": [
              "2025-01-01"
            ]
          },
          "status": {
            "$ref": "#/components/schemas/ClosureStates",
            "description": "Status of the closure",
            "examples": [
              "closed"
            ]
          },
          "closures": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/POSClosureInformationItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Closures",
            "description": "Info about closures related to specific day",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "date",
          "status"
        ],
        "title": "PMSClosureItem"
      },
      "PMSCustomerItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id in Chift"
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name",
            "description": "First name of the customer. In case the customer is an individual.",
            "example": "John"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name",
            "description": "Last name of the customer. In case the customer is an individual.",
            "example": "Doe"
          },
          "company_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Name",
            "description": "Company name of the customer. In case the customer is a company.",
            "example": "Acme Corp"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone",
            "description": "Phone number of the customer",
            "example": "+1234567890"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "description": "Email address of the customer",
            "example": "john.doe@example.com"
          },
          "account_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Account Number",
            "description": "Number of the accounting account used (e.g. 701000)",
            "example": "701000"
          },
          "created_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created On",
            "description": "Creation date of the customer",
            "example": "2023-09-25T12:00:00"
          },
          "addresses": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AddressItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Addresses",
            "description": "List of addresses related to the customer"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref",
          "account_number"
        ],
        "title": "PMSCustomerItem"
      },
      "PMSInvoiceFullItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id in Chift"
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "invoice_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Number",
            "description": "Number/sequence",
            "example": "INV-12345"
          },
          "creation_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Creation Date",
            "description": "Creation date of the invoice",
            "example": "2023-10-01T12:00:00"
          },
          "closing_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Closing Date",
            "description": "Closing date of the invoice",
            "example": "2023-10-10T12:00:00"
          },
          "partners": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/InvoicePartnerItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Partners",
            "description": "List of partners related to the invoice"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/PMSOrderLineItem"
            },
            "type": "array",
            "title": "Items",
            "description": "List of items related to the invoice"
          },
          "payments": {
            "items": {
              "$ref": "#/components/schemas/PMSPaymentItem"
            },
            "type": "array",
            "title": "Payments",
            "description": "List of payments related to the invoice"
          },
          "service_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Id",
            "description": "Reference to the service related to this order"
          },
          "reservation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReservationItem"
              },
              {
                "type": "null"
              }
            ],
            "description": "Reference to the reservation related to this order"
          },
          "tax_amount": {
            "type": "number",
            "title": "Tax Amount",
            "description": "Taxes amount",
            "example": 21.0
          },
          "untaxed_amount": {
            "type": "number",
            "title": "Untaxed Amount",
            "description": "Untaxed amount",
            "example": 100.0
          },
          "total": {
            "type": "number",
            "title": "Total",
            "description": "Total amount incl. taxes",
            "example": 121.0
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref",
          "invoice_number",
          "items",
          "payments",
          "tax_amount",
          "untaxed_amount",
          "total"
        ],
        "title": "PMSInvoiceFullItem"
      },
      "PMSLocationItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Unique identifier of the location",
            "examples": [
              "371ca583-d218-4900-b236-397532cf0e52"
            ]
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Name given to the location",
            "examples": [
              "Restaurant de la Paix"
            ]
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone",
            "description": "Indicates the timezone of the location. TZ notation, e.g. Europe/Brussels .",
            "examples": [
              "Europe/Paris"
            ]
          },
          "address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AddressItem"
              },
              {
                "type": "null"
              }
            ],
            "description": "Address of the location"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "PMSLocationItem"
      },
      "PMSOrderItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Unique identifier of the order",
            "examples": [
              "123"
            ]
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "order_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Order Number",
            "description": "Order number (often unique reference during the day)",
            "examples": [
              "1"
            ]
          },
          "creation_date": {
            "type": "string",
            "format": "date-time",
            "title": "Creation Date",
            "description": "Creation date of the order",
            "examples": [
              "2025-01-01T00:00:00Z"
            ]
          },
          "closing_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Closing Date",
            "description": "Closing date of the order",
            "examples": [
              "2025-01-01T00:00:00Z"
            ]
          },
          "service_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Date",
            "description": "Indicates the date of the service to which the order belongs (can be used to group orders by closure date)",
            "examples": [
              "2025-01-01T00:00:00Z"
            ]
          },
          "device_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Id",
            "description": "ID of device that created the order",
            "examples": [
              "device-123"
            ]
          },
          "total": {
            "type": "string",
            "title": "Total",
            "description": "Total amount including tax of the order",
            "examples": [
              11
            ]
          },
          "tax_amount": {
            "type": "string",
            "title": "Tax Amount",
            "description": "Total amount of the taxes of the order",
            "examples": [
              1
            ]
          },
          "total_discount": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Discount",
            "description": "Total amount of the discounts of the order",
            "default": 0,
            "examples": [
              10
            ]
          },
          "total_refund": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Refund",
            "description": "Total amount of the refunds of the order",
            "default": 0,
            "examples": [
              5
            ]
          },
          "total_tip": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Tip",
            "description": "Total amount of the tips of the order. Tips are not part of the total of the order",
            "default": 0,
            "examples": [
              1
            ]
          },
          "delivery_fee": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delivery Fee",
            "description": "Total amount of the delivery fees of the order",
            "default": 0,
            "examples": [
              1
            ]
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "Currency of the order",
            "examples": [
              "EUR"
            ]
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country",
            "description": "Country of the order, format: ISO 3166-1 codes.",
            "examples": [
              "FR"
            ]
          },
          "loyalty": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Loyalty",
            "description": "Loyalty points of the order",
            "examples": [
              100
            ]
          },
          "customer_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Id",
            "description": "Unique identifier of the customer",
            "examples": [
              "customer-123"
            ]
          },
          "location_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Id",
            "description": "Unique identifier of the location",
            "examples": [
              "location-123"
            ]
          },
          "taxes": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TotalTaxItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Taxes",
            "description": "List of taxes of the order",
            "default": []
          },
          "guests": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Guests",
            "description": "Number of guests linked to the order",
            "examples": [
              1
            ]
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/PMSOrderLineItem"
            },
            "type": "array",
            "title": "Items",
            "description": "List of items related to the order"
          },
          "service_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Id",
            "description": "Reference to the service related to this order"
          },
          "reservation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReservationItem"
              },
              {
                "type": "null"
              }
            ],
            "description": "Reference to the reservation related to this order"
          },
          "bills": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/InvoiceItem-Output"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bills",
            "description": "Reference to the bills related to this order"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref",
          "creation_date",
          "total",
          "tax_amount",
          "items"
        ],
        "title": "PMSOrderItem"
      },
      "PMSOrderLineItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Unique identifier of the order line item",
            "examples": [
              "123"
            ]
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/POSLineItemType"
              },
              {
                "type": "null"
              }
            ],
            "description": "Type of the order line item",
            "examples": [
              "product"
            ]
          },
          "menu_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Menu Id",
            "description": "Unique identifier of the menu",
            "examples": [
              "456"
            ]
          },
          "quantity": {
            "type": "string",
            "title": "Quantity",
            "description": "Quantity of the order line item",
            "examples": [
              1
            ]
          },
          "unit_price": {
            "type": "string",
            "title": "Unit Price",
            "description": "Unit price (without tax) of the order line item",
            "examples": [
              10
            ]
          },
          "total": {
            "type": "string",
            "title": "Total",
            "description": "Total amount including tax of the order line item",
            "examples": [
              11
            ]
          },
          "tax_amount": {
            "type": "string",
            "title": "Tax Amount",
            "description": "Total amount of the taxes of the order line item",
            "examples": [
              1
            ]
          },
          "tax_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tax Rate",
            "description": "Tax rate of the order line item",
            "examples": [
              10
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description of the order line item",
            "examples": [
              "Pizza"
            ]
          },
          "discounts": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/backbone_common__models__pos_pms__DiscountItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Discounts",
            "description": "List of discounts of the order line item. Discounts of items are always part of the total discount of the order",
            "default": [],
            "examples": [
              []
            ]
          },
          "product_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product Id",
            "description": "Reference to the product related to this item",
            "examples": [
              "789"
            ]
          },
          "accounting_category_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accounting Category Id",
            "description": "Sometimes used by a POS to give a specific accounting category to an order item",
            "examples": [
              "123"
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref",
          "quantity",
          "unit_price",
          "total",
          "tax_amount"
        ],
        "title": "PMSOrderLineItem"
      },
      "PMSPaymentItem": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id",
            "description": "Unique identifier of the payment",
            "examples": [
              "payment-123"
            ]
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "payment_method_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Method Id",
            "description": "Unique identifier of the payment method used for the payment",
            "examples": [
              "payment-method-123"
            ]
          },
          "payment_method_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Method Name",
            "description": "Chift's name of the payment method used for the payment",
            "examples": [
              "Cash"
            ]
          },
          "total": {
            "type": "string",
            "title": "Total",
            "description": "Total amount of the payment",
            "examples": [
              11
            ]
          },
          "tip": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tip",
            "description": "Total amount of the tips of the payment. Tips are not part of the total of the payment",
            "default": 0,
            "examples": [
              1
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/backbone_common__models__pos_pms__PaymentStatus"
              },
              {
                "type": "null"
              }
            ],
            "description": "Status of the payment",
            "default": "Unknown",
            "examples": [
              "Completed"
            ]
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "Currency of the payment",
            "examples": [
              "EUR"
            ]
          },
          "date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date",
            "description": "Date of the payment",
            "examples": [
              "2025-01-01T00:00:00Z"
            ]
          },
          "partner_id": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ChiftId"
              },
              {
                "type": "null"
              }
            ],
            "description": "Reference to the customer related to this payment"
          }
        },
        "type": "object",
        "required": [
          "source_ref",
          "total"
        ],
        "title": "PMSPaymentItem"
      },
      "PMSPaymentMethods": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Unique identifier of the payment method",
            "examples": [
              "371ca583-d218-4900-b236-397532cf0e52"
            ]
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Chift's name of the payment method (e.g. 'Cash', 'Card', 'Transfer', ...)",
            "examples": [
              "Cash"
            ]
          },
          "extra": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra",
            "description": "Original name of the payment method",
            "examples": [
              "Espèces"
            ]
          },
          "ledger_account_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ledger Account Code",
            "description": "Ledger account code assigned to the category",
            "example": "4000"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref",
          "name"
        ],
        "title": "PMSPaymentMethods"
      },
      "PMSStates": {
        "type": "string",
        "enum": [
          "consumed",
          "closed"
        ],
        "title": "PMSStates"
      },
      "PMSTaxRateItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id in Chift"
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label",
            "description": "Label of the tax rate",
            "example": "VAT 21%"
          },
          "rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rate",
            "description": "Percentage of the tax rate",
            "example": 21.0
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref"
        ],
        "title": "PMSTaxRateItem"
      },
      "POSClosureInformationItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "total": {
            "type": "string",
            "title": "Total",
            "description": "Total amount of the payments in current closure"
          },
          "tax_amount": {
            "type": "string",
            "title": "Tax Amount",
            "description": "Total tax amount the in current closure"
          },
          "payments": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ClosurePaymentItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payments",
            "description": "List of payments related to current closure",
            "default": []
          },
          "taxes": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TotalTaxItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Taxes",
            "description": "List of taxes related to current closure",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "id",
          "total",
          "tax_amount"
        ],
        "title": "POSClosureInformationItem"
      },
      "POSCreateCustomerItem": {
        "properties": {
          "first_name": {
            "type": "string",
            "minLength": 1,
            "title": "First Name",
            "description": "First name of the customer",
            "examples": [
              "John"
            ]
          },
          "last_name": {
            "type": "string",
            "minLength": 1,
            "title": "Last Name",
            "description": "Last name of the customer",
            "examples": [
              "Doe"
            ]
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone",
            "description": "Phone number (mobile, home, work, ...) of the customer",
            "examples": [
              "+32475123456"
            ]
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "description": "Email address of the customer",
            "examples": [
              "john.doe@gmail.com"
            ]
          },
          "address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PostAddressItem"
              },
              {
                "type": "null"
              }
            ],
            "description": "Address of the customer"
          }
        },
        "type": "object",
        "required": [
          "first_name",
          "last_name"
        ],
        "title": "POSCreateCustomerItem"
      },
      "POSCustomerItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Unique identifier of the customer",
            "examples": [
              "371ca583-d218-8000-b236-397532cf0e52"
            ]
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name",
            "description": "First name of the customer",
            "examples": [
              "John"
            ]
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name",
            "description": "Last name of the customer",
            "examples": [
              "Doe"
            ]
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Name (first name + last name) of the customer",
            "examples": [
              "John Doe"
            ]
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone",
            "description": "Phone number (mobile, home, work, ...) of the customer",
            "examples": [
              "+32475123456"
            ]
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "description": "Email address of the customer",
            "examples": [
              "john.doe@gmail.com"
            ]
          },
          "created_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created On",
            "description": "Date and time when the customer was created",
            "examples": [
              "2025-01-01T00:00:00Z"
            ]
          },
          "addresses": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AddressItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Addresses",
            "description": "List of addresses of the customer",
            "default": []
          },
          "loyalty": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Loyalty",
            "description": "Loyalty points of the customer",
            "examples": [
              100
            ]
          },
          "birthdate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birthdate",
            "description": "Birthdate of the customer",
            "examples": [
              "1990-01-01"
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "POSCustomerItem"
      },
      "POSItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Unique identifier of the order line item",
            "examples": [
              "123"
            ]
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/POSLineItemType"
              },
              {
                "type": "null"
              }
            ],
            "description": "Type of the order line item",
            "examples": [
              "product"
            ]
          },
          "menu_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Menu Id",
            "description": "Unique identifier of the menu",
            "examples": [
              "456"
            ]
          },
          "quantity": {
            "type": "string",
            "title": "Quantity",
            "description": "Quantity of the order line item",
            "examples": [
              1
            ]
          },
          "unit_price": {
            "type": "string",
            "title": "Unit Price",
            "description": "Unit price (without tax) of the order line item",
            "examples": [
              10
            ]
          },
          "total": {
            "type": "string",
            "title": "Total",
            "description": "Total amount including tax of the order line item",
            "examples": [
              11
            ]
          },
          "tax_amount": {
            "type": "string",
            "title": "Tax Amount",
            "description": "Total amount of the taxes of the order line item",
            "examples": [
              1
            ]
          },
          "tax_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tax Rate",
            "description": "Tax rate of the order line item",
            "examples": [
              10
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description of the order line item",
            "examples": [
              "Pizza"
            ]
          },
          "discounts": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/backbone_common__models__pos_pms__DiscountItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Discounts",
            "description": "List of discounts of the order line item. Discounts of items are always part of the total discount of the order",
            "default": [],
            "examples": [
              []
            ]
          },
          "product_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product Id",
            "description": "Reference to the product related to this item",
            "examples": [
              "789"
            ]
          },
          "accounting_category_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accounting Category Id",
            "description": "Sometimes used by a POS to give a specific accounting category to an order item",
            "examples": [
              "123"
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "quantity",
          "unit_price",
          "total",
          "tax_amount"
        ],
        "title": "POSItem"
      },
      "POSLineItemType": {
        "type": "string",
        "enum": [
          "menu",
          "product"
        ],
        "title": "POSLineItemType"
      },
      "POSLocationItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Unique identifier of the location",
            "examples": [
              "371ca583-d218-4900-b236-397532cf0e52"
            ]
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Name given to the location",
            "examples": [
              "Restaurant de la Paix"
            ]
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone",
            "description": "Indicates the timezone of the location. TZ notation, e.g. Europe/Brussels .",
            "examples": [
              "Europe/Paris"
            ]
          },
          "address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AddressItem"
              },
              {
                "type": "null"
              }
            ],
            "description": "Address of the location"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "POSLocationItem"
      },
      "POSOrderItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Unique identifier of the order",
            "examples": [
              "371ca583-d218-4900-b236-397532cf0e52"
            ]
          },
          "order_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Order Number",
            "description": "Order number (often unique reference during the day)",
            "examples": [
              "1"
            ]
          },
          "creation_date": {
            "type": "string",
            "format": "date-time",
            "title": "Creation Date",
            "description": "Creation date of the order",
            "examples": [
              "2025-01-01T00:00:00Z"
            ]
          },
          "closing_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Closing Date",
            "description": "Closing date of the order",
            "examples": [
              "2025-01-01T00:00:00Z"
            ]
          },
          "service_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Date",
            "description": "Indicates the date of the service to which the order belongs (can be used to group orders by closure date)",
            "examples": [
              "2025-01-01T00:00:00Z"
            ]
          },
          "device_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Id",
            "description": "ID of device that created the order",
            "examples": [
              "device-123"
            ]
          },
          "total": {
            "type": "string",
            "title": "Total",
            "description": "Total amount including tax of the order",
            "examples": [
              11
            ]
          },
          "tax_amount": {
            "type": "string",
            "title": "Tax Amount",
            "description": "Total amount of the taxes of the order",
            "examples": [
              1
            ]
          },
          "total_discount": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Discount",
            "description": "Total amount of the discounts of the order",
            "default": 0,
            "examples": [
              10
            ]
          },
          "total_refund": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Refund",
            "description": "Total amount of the refunds of the order",
            "default": 0,
            "examples": [
              5
            ]
          },
          "total_tip": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Tip",
            "description": "Total amount of the tips of the order. Tips are not part of the total of the order",
            "default": 0,
            "examples": [
              1
            ]
          },
          "delivery_fee": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delivery Fee",
            "description": "Total amount of the delivery fees of the order",
            "default": 0,
            "examples": [
              1
            ]
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "Currency of the order",
            "examples": [
              "EUR"
            ]
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country",
            "description": "Country of the order, format: ISO 3166-1 codes.",
            "examples": [
              "FR"
            ]
          },
          "loyalty": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Loyalty",
            "description": "Loyalty points of the order",
            "examples": [
              100
            ]
          },
          "customer_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Id",
            "description": "Unique identifier of the customer",
            "examples": [
              "customer-123"
            ]
          },
          "location_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Id",
            "description": "Unique identifier of the location",
            "examples": [
              "location-123"
            ]
          },
          "taxes": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TotalTaxItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Taxes",
            "description": "List of taxes of the order",
            "default": []
          },
          "guests": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Guests",
            "description": "Number of guests linked to the order",
            "examples": [
              1
            ]
          },
          "payments": {
            "items": {
              "$ref": "#/components/schemas/POSPaymentItem"
            },
            "type": "array",
            "title": "Payments",
            "description": "List of payments made for the order"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/POSItem"
            },
            "type": "array",
            "title": "Items",
            "description": "List of item lines in the order"
          }
        },
        "type": "object",
        "required": [
          "id",
          "creation_date",
          "total",
          "tax_amount",
          "payments",
          "items"
        ],
        "title": "POSOrderItem"
      },
      "POSPaymentItem": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id",
            "description": "Unique identifier of the payment",
            "examples": [
              "payment-123"
            ]
          },
          "payment_method_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Method Id",
            "description": "Unique identifier of the payment method used for the payment",
            "examples": [
              "payment-method-123"
            ]
          },
          "payment_method_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Method Name",
            "description": "Chift's name of the payment method used for the payment",
            "examples": [
              "Cash"
            ]
          },
          "total": {
            "type": "string",
            "title": "Total",
            "description": "Total amount of the payment",
            "examples": [
              11
            ]
          },
          "tip": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tip",
            "description": "Total amount of the tips of the payment. Tips are not part of the total of the payment",
            "default": 0,
            "examples": [
              1
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/backbone_common__models__pos_pms__PaymentStatus"
              },
              {
                "type": "null"
              }
            ],
            "description": "Status of the payment",
            "default": "Unknown",
            "examples": [
              "Completed"
            ]
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "Currency of the payment",
            "examples": [
              "EUR"
            ]
          },
          "date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date",
            "description": "Date of the payment",
            "examples": [
              "2025-01-01T00:00:00Z"
            ]
          }
        },
        "type": "object",
        "required": [
          "total"
        ],
        "title": "POSPaymentItem"
      },
      "POSProductItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Unique identifier of the product",
            "examples": [
              "371ca583-d218-4900-b236-397532cf0e39"
            ]
          },
          "categories": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Categories",
            "description": "List of categories the product belongs to",
            "default": [],
            "examples": [
              "371ca583-d218-4900-b236-397532cf0e52"
            ]
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Name ofthe product",
            "examples": [
              "Pizza margheritta"
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description of the product",
            "examples": [
              "Pizza margheritta"
            ]
          },
          "prices": {
            "items": {
              "$ref": "#/components/schemas/backbone_common__models__pos__common__ProductPriceItem"
            },
            "type": "array",
            "title": "Prices",
            "description": "List of prices for the product"
          },
          "accounting_category_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accounting Category Ids",
            "description": "Used by a POS to give one or more specific accounting categories to a product item. If not available it will use the category ids",
            "examples": [
              "371ca583-d218-4900-b236-397532cf0e2"
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "prices"
        ],
        "title": "POSProductItem"
      },
      "PartnerType": {
        "type": "string",
        "enum": [
          "owner",
          "account"
        ],
        "title": "PartnerType"
      },
      "PatchConnectionItem": {
        "properties": {
          "redirect": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Redirect",
            "description": "Indicates whether you want to return to the consumer's redirectUrl after update (true) or whether you want to return on the connection page (false)",
            "default": false
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Can be used to update the name of an existing connection"
          },
          "credentials": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/CredentialItem-Input"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credentials",
            "description": "Can be used to update the credentials of an existing connection. Please use the getIntegrations route to see the available credentials for each integration"
          }
        },
        "type": "object",
        "title": "PatchConnectionItem"
      },
      "Payment": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "currency": {
            "type": "string",
            "title": "Currency"
          },
          "amount": {
            "type": "number",
            "title": "Amount",
            "description": "Total amount of the payment. A part of this amount could be reconciled with another invoice."
          },
          "dedicated_amount": {
            "type": "number",
            "title": "Dedicated Amount",
            "description": "Amount of the payment dedicated to the invoice. Zero the accounting software doesn't provide the information.",
            "default": 0
          },
          "payment_date": {
            "type": "string",
            "format": "date",
            "title": "Payment Date"
          },
          "journal_type": {
            "$ref": "#/components/schemas/JournalType"
          },
          "journal_id": {
            "type": "string",
            "title": "Journal Id"
          },
          "journal_name": {
            "type": "string",
            "title": "Journal Name"
          },
          "reconciled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reconciled",
            "default": false
          },
          "communication": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Communication"
          },
          "matching_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Matching Number"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "currency",
          "amount",
          "payment_date",
          "journal_type",
          "journal_id",
          "journal_name"
        ],
        "title": "Payment"
      },
      "PaymentItemOut": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id in Chift"
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "status": {
            "$ref": "#/components/schemas/backbone_common__models__payment__common__PaymentStatus",
            "description": "Payment status"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Description"
          },
          "amount": {
            "type": "number",
            "title": "Amount",
            "description": "Amount"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Currency"
          },
          "payment_date": {
            "type": "string",
            "format": "date-time",
            "title": "Payment Date",
            "description": "Date of creation"
          },
          "partner_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Partner Id",
            "description": "Partner ID"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref",
          "status",
          "description",
          "amount",
          "currency",
          "payment_date",
          "partner_id"
        ],
        "title": "PaymentItemOut"
      },
      "PaymentMethodItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id in Chift"
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "active": {
            "type": "boolean",
            "title": "Active"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref",
          "name",
          "active"
        ],
        "title": "PaymentMethodItem"
      },
      "PaymentMethods": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Unique identifier of the payment method",
            "examples": [
              "371ca583-d218-4900-b236-397532cf0e52"
            ]
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Chift's name of the payment method (e.g. 'Cash', 'Card', 'Transfer', ...)",
            "examples": [
              "Cash"
            ]
          },
          "extra": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra",
            "description": "Original name of the payment method",
            "examples": [
              "Espèces"
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "PaymentMethods"
      },
      "PaymentReporting": {
        "properties": {
          "method": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaymentReportingMethod"
              },
              {
                "type": "null"
              }
            ],
            "description": "Payment method"
          },
          "conditions": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaymentReportingConditions"
              },
              {
                "type": "null"
              }
            ],
            "description": "Payment conditions"
          }
        },
        "type": "object",
        "title": "PaymentReporting"
      },
      "PaymentReportingConditions": {
        "type": "string",
        "enum": [
          "TP01",
          "TP02",
          "TP03"
        ],
        "title": "PaymentReportingConditions"
      },
      "PaymentReportingMethod": {
        "type": "string",
        "enum": [
          "MP01",
          "MP02",
          "MP03",
          "MP04",
          "MP05",
          "MP06",
          "MP07",
          "MP08",
          "MP09",
          "MP10",
          "MP11",
          "MP12",
          "MP13",
          "MP14",
          "MP15",
          "MP16",
          "MP17",
          "MP18",
          "MP19",
          "MP20",
          "MP21",
          "MP22",
          "MP23"
        ],
        "title": "PaymentReportingMethod"
      },
      "PaymentStatus-Input": {
        "type": "string",
        "enum": [
          "all",
          "unpaid",
          "paid"
        ],
        "title": "PaymentStatus"
      },
      "PaymentTermAccountInfo": {
        "properties": {
          "amount": {
            "type": "number",
            "title": "Amount"
          },
          "iban": {
            "type": "string",
            "title": "Iban"
          }
        },
        "type": "object",
        "required": [
          "amount",
          "iban"
        ],
        "title": "PaymentTermAccountInfo"
      },
      "PostAddressItem": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Name",
            "description": "Name given to the address (e.g. 'home')",
            "examples": [
              "home"
            ]
          },
          "street": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Street",
            "description": "Street name",
            "examples": [
              "Avenue de la République"
            ]
          },
          "number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number",
            "description": "Number of the address",
            "examples": [
              "123"
            ]
          },
          "box": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Box",
            "description": "Box of the address",
            "examples": [
              "A"
            ]
          },
          "city": {
            "type": "string",
            "minLength": 1,
            "title": "City",
            "description": "City name",
            "examples": [
              "Paris"
            ]
          },
          "postal_code": {
            "type": "string",
            "minLength": 1,
            "title": "Postal Code",
            "description": "Postal code of the address",
            "examples": [
              "75000"
            ]
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country",
            "description": "Country, format: ISO 3166-1 codes.",
            "examples": [
              "FR"
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "city",
          "postal_code"
        ],
        "title": "PostAddressItem"
      },
      "PostConnectionItem-Input": {
        "properties": {
          "integrationid": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Integrationid",
            "description": "Can be used to specify the integration code of a specific connector. If specified, the url will will point directly to the connection page of the connector and will redirect on save to the redirect url of the consumer if specified."
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Can be used to specify the name of the connection. Must be used in combination with an integrationid."
          },
          "credentials": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/CredentialItem-Input"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credentials",
            "description": "Can be used to specify the credentials of your connection. Must be used in combination with an integrationid and a name. Please use the getIntegrations route to see the available credentials for each integration"
          }
        },
        "type": "object",
        "title": "PostConnectionItem"
      },
      "PostConnectionItem-Output": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "optional": {
            "type": "boolean",
            "title": "Optional"
          },
          "resource": {
            "type": "string",
            "title": "Resource"
          }
        },
        "type": "object",
        "required": [
          "title",
          "optional",
          "resource"
        ],
        "title": "PostConnectionItem"
      },
      "PostConsumerItem": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 80
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "internal_reference": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Internal Reference"
          },
          "redirect_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Redirect Url"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "PostConsumerItem"
      },
      "PostSyncFlowEvent": {
        "properties": {
          "consumers": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Consumers",
            "default": []
          },
          "data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data",
            "default": {}
          }
        },
        "type": "object",
        "title": "PostSyncFlowEvent"
      },
      "ProductCostItem": {
        "properties": {
          "amount": {
            "type": "number",
            "title": "Amount"
          },
          "currency": {
            "type": "string",
            "title": "Currency"
          }
        },
        "type": "object",
        "required": [
          "amount",
          "currency"
        ],
        "title": "ProductCostItem"
      },
      "ProductItem-Input": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Name"
          },
          "unit_price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit Price",
            "description": "Unit price"
          },
          "tax_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tax Id",
            "description": "Technical id of the tax in Chift"
          },
          "code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code",
            "description": "Reference/code"
          },
          "unit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit",
            "description": "Unit of measure matching target sofware name"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category",
            "description": "Category matching target sofware name"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "Currency matching target sofware name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "ProductItem"
      },
      "ProductItem-Output": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id in Chift"
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "description_html": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Html"
          },
          "categories": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/backbone_common__models__commerce__common__ProductCategoryItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Categories",
            "default": []
          },
          "created_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created On"
          },
          "variants": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ProductVariantItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Variants",
            "default": []
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProductStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "common_attributes": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/CommonAttributeItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Common Attributes",
            "description": "List of attributes that are shared by all variants of the product.",
            "default": []
          },
          "variant_attributes_options": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/VariantAttributeOptionItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Variant Attributes Options",
            "default": []
          },
          "common_images": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ImageItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Common Images",
            "description": "List of images that are shared by all variants of the product.",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref",
          "name"
        ],
        "title": "ProductItem"
      },
      "ProductItemOut": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id in Chift"
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Name"
          },
          "unit_price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit Price",
            "description": "Unit price"
          },
          "tax_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tax Id",
            "description": "Technical id of the tax in Chift"
          },
          "code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code",
            "description": "Reference/code"
          },
          "unit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit",
            "description": "Unit of measure matching target sofware name"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category",
            "description": "Category matching target sofware name"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "Currency matching target sofware name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description"
          },
          "available_quantity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Available Quantity",
            "description": "Available quanity of the product in stock. Will only be used for products that have an inventory (services will always be 0)",
            "default": 0
          },
          "cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost",
            "description": "Cost of the product",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref",
          "name"
        ],
        "title": "ProductItemOut"
      },
      "ProductStatus": {
        "type": "string",
        "enum": [
          "unknown",
          "archived",
          "unpublished",
          "published"
        ],
        "title": "ProductStatus"
      },
      "ProductVariantItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id in Chift"
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "parent_id": {
            "type": "string",
            "title": "Parent Id",
            "description": "Technical id of the parent product in Chift"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "description_html": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Html"
          },
          "categories": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/backbone_common__models__commerce__common__ProductCategoryItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Categories",
            "default": []
          },
          "created_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created On"
          },
          "sku": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sku"
          },
          "barcode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Barcode"
          },
          "available_quantity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Available Quantity",
            "default": 0
          },
          "prices": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/backbone_common__models__commerce__common__ProductPriceItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prices",
            "default": []
          },
          "unit_cost": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProductCostItem"
              },
              {
                "type": "null"
              }
            ]
          },
          "unit_of_measure": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit Of Measure"
          },
          "weight": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Weight",
            "default": 0
          },
          "weight_unit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Weight Unit"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProductStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "variant_attributes": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/VariantAttributeItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Variant Attributes",
            "description": "List of attributes that are specific to the variant of the product.",
            "default": []
          },
          "variant_images": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ImageItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Variant Images",
            "description": "List of images that are specific to the variant of the product.",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref",
          "parent_id",
          "name"
        ],
        "title": "ProductVariantItem"
      },
      "ReadFlowConsumerItem": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FlowConfig-Output"
              },
              {
                "type": "null"
              }
            ]
          },
          "values": {
            "additionalProperties": true,
            "type": "object",
            "title": "Values"
          },
          "enabled_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enabled On",
            "description": "Date on which the flow was enabled for this consumer"
          },
          "trigger": {
            "$ref": "#/components/schemas/ReadFlowTrigger"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "values",
          "trigger"
        ],
        "title": "ReadFlowConsumerItem"
      },
      "ReadFlowItem": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "execution": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FlowExecution"
              },
              {
                "type": "null"
              }
            ]
          },
          "config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FlowConfig-Output"
              },
              {
                "type": "null"
              }
            ],
            "default": {
              "datastores": []
            }
          },
          "triggers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FlowTrigger"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Triggers"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id"
        ],
        "title": "ReadFlowItem"
      },
      "ReadFlowTrigger": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "type": {
            "$ref": "#/components/schemas/TriggerType"
          },
          "cronschedule": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cronschedule"
          }
        },
        "type": "object",
        "required": [
          "id",
          "type"
        ],
        "title": "ReadFlowTrigger"
      },
      "ReadMappingItem": {
        "properties": {
          "source_id": {
            "type": "string",
            "title": "Source Id"
          },
          "target_id": {
            "type": "string",
            "title": "Target Id"
          }
        },
        "type": "object",
        "required": [
          "source_id",
          "target_id"
        ],
        "title": "ReadMappingItem"
      },
      "ReadSyncItem": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Name"
          },
          "connections": {
            "items": {
              "$ref": "#/components/schemas/backbone_api__app__routers__syncs__ConnectionItem"
            },
            "type": "array",
            "title": "Connections"
          },
          "mappings": {
            "items": {
              "$ref": "#/components/schemas/CreateSyncMappingItem-Output"
            },
            "type": "array",
            "title": "Mappings",
            "default": []
          },
          "syncid": {
            "type": "string",
            "format": "uuid",
            "title": "Syncid"
          },
          "consumers": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Consumers"
          },
          "flows": {
            "items": {
              "$ref": "#/components/schemas/ReadFlowItem"
            },
            "type": "array",
            "title": "Flows"
          }
        },
        "type": "object",
        "required": [
          "name",
          "connections",
          "syncid",
          "consumers",
          "flows"
        ],
        "title": "ReadSyncItem"
      },
      "ReadSyncMappingItem": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "display_order": {
            "type": "integer",
            "title": "Display Order",
            "default": 0
          },
          "challenge_question": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Challenge Question"
          },
          "values": {
            "items": {
              "$ref": "#/components/schemas/ReadMappingItem"
            },
            "type": "array",
            "title": "Values"
          },
          "sub_mapping_name": {
            "type": "string",
            "title": "Sub Mapping Name"
          },
          "sub_mapping_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sub Mapping Description"
          }
        },
        "type": "object",
        "required": [
          "name",
          "values",
          "sub_mapping_name"
        ],
        "title": "ReadSyncMappingItem"
      },
      "Ref": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id",
            "description": "Technical id in the target software"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model",
            "description": "Name of the model/entity in the target software"
          }
        },
        "type": "object",
        "title": "Ref"
      },
      "RefundFeesItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id of the fee in Chift"
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "type": {
            "$ref": "#/components/schemas/FeesType"
          },
          "untaxed_amount": {
            "type": "number",
            "title": "Untaxed Amount"
          },
          "tax_amount": {
            "type": "number",
            "title": "Tax Amount"
          },
          "total": {
            "type": "number",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref",
          "type",
          "untaxed_amount",
          "tax_amount",
          "total"
        ],
        "title": "RefundFeesItem"
      },
      "RefundItemOut": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id in Chift"
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "status": {
            "$ref": "#/components/schemas/backbone_common__models__payment__common__PaymentStatus",
            "description": "Payment status"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Description"
          },
          "amount": {
            "type": "number",
            "title": "Amount",
            "description": "Amount"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Currency"
          },
          "refund_date": {
            "type": "string",
            "format": "date-time",
            "title": "Refund Date",
            "description": "Date of creation"
          },
          "payment_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Id",
            "description": "ID of the payment being refunded"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref",
          "status",
          "description",
          "amount",
          "currency",
          "refund_date"
        ],
        "title": "RefundItemOut"
      },
      "RefundOrderLineItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id of the order line in Chift"
          },
          "variant": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrderLineProductVariantItem"
              },
              {
                "type": "null"
              }
            ],
            "description": "Product variant"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "untaxed_amount": {
            "type": "number",
            "title": "Untaxed Amount",
            "description": "Untaxed amount refunded (after discount)."
          },
          "tax_amount": {
            "type": "number",
            "title": "Tax Amount",
            "description": "Total taxes refunded (after discount)."
          },
          "total": {
            "type": "number",
            "title": "Total",
            "description": "Total refunded (after discount)."
          }
        },
        "type": "object",
        "required": [
          "id",
          "quantity",
          "untaxed_amount",
          "tax_amount",
          "total"
        ],
        "title": "RefundOrderLineItem"
      },
      "ReservationItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id in Chift"
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date",
            "description": "Start date of the reservation",
            "example": "2024-10-01T12:00:00"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date",
            "description": "End date of the reservation",
            "example": "2024-10-10T12:00:00"
          },
          "creation_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Creation Date",
            "description": "Creation date of the reservation",
            "example": "2024-09-25T12:00:00"
          },
          "resource_id": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ChiftId"
              },
              {
                "type": "null"
              }
            ],
            "description": "Unique reference to the resource related to the reservation"
          },
          "resource_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resource Name",
            "description": "Name of the resource related to the reservation",
            "example": "Room 101"
          },
          "resource_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resource Identifier",
            "description": "Identifier of the resource related to the reservation",
            "example": "R101"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref"
        ],
        "title": "ReservationItem"
      },
      "ReturnFeesItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id of the fee in Chift"
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "type": {
            "$ref": "#/components/schemas/FeesType"
          },
          "untaxed_amount": {
            "type": "number",
            "title": "Untaxed Amount"
          },
          "tax_amount": {
            "type": "number",
            "title": "Tax Amount"
          },
          "total": {
            "type": "number",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref",
          "type",
          "untaxed_amount",
          "tax_amount",
          "total"
        ],
        "title": "ReturnFeesItem"
      },
      "ReturnOrderLineItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id of the order line in Chift"
          },
          "variant": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrderLineProductVariantItem"
              },
              {
                "type": "null"
              }
            ],
            "description": "Product variant"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "untaxed_amount": {
            "type": "number",
            "title": "Untaxed Amount",
            "description": "Untaxed amount refunded (after discount)."
          },
          "tax_amount": {
            "type": "number",
            "title": "Tax Amount",
            "description": "Total taxes refunded (after discount)."
          },
          "total": {
            "type": "number",
            "title": "Total",
            "description": "Total refunded (after discount)."
          }
        },
        "type": "object",
        "required": [
          "id",
          "quantity",
          "untaxed_amount",
          "tax_amount",
          "total"
        ],
        "title": "ReturnOrderLineItem"
      },
      "SalesItem": {
        "properties": {
          "total": {
            "type": "string",
            "title": "Total",
            "description": "Total amount including tax of the sales",
            "examples": [
              10
            ]
          },
          "tax_amount": {
            "type": "string",
            "title": "Tax Amount",
            "description": "Total amount of the taxes",
            "examples": [
              1
            ]
          },
          "taxes": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TotalTaxItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Taxes",
            "description": "List of taxes grouped by tax rateapplied to the sales",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "total",
          "tax_amount"
        ],
        "title": "SalesItem"
      },
      "ShippingRefund": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id in Chift"
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "untaxed_amount": {
            "type": "number",
            "title": "Untaxed Amount",
            "description": "Untaxed amount refunded (after discount)."
          },
          "tax_amount": {
            "type": "number",
            "title": "Tax Amount",
            "description": "Total taxes refunded (after discount)."
          },
          "total": {
            "type": "number",
            "title": "Total",
            "description": "Total refunded (after discount)."
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref",
          "untaxed_amount",
          "tax_amount",
          "total"
        ],
        "title": "ShippingRefund"
      },
      "States": {
        "type": "string",
        "enum": [
          "open",
          "closed",
          "all"
        ],
        "title": "States"
      },
      "Status": {
        "type": "string",
        "enum": [
          "active",
          "inactive"
        ],
        "title": "Status"
      },
      "SupplierItemIn": {
        "properties": {
          "external_reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "External Reference"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name",
            "description": "Only used when the supplier is an individual (is_company=false). Indicates the first name of the supplier."
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name",
            "description": "Only used when the supplier is an individual (is_company=false). Indicates the last name of the supplier."
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Name"
          },
          "function": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Function",
            "description": "Only used when the supplier is an individual (is_company=false). Indicates the function of the supplier."
          },
          "is_company": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Company",
            "description": "Indicates if the supplier is an individual or a company.",
            "default": true
          },
          "company_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Id",
            "description": "Only used when the supplier is an individual (is_company=false). Indicates the id of the company linked to the supplier."
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "mobile": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mobile"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "Format: ISO 639-1 codes."
          },
          "internal_notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Internal Notes"
          },
          "website": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Website"
          },
          "vat": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vat"
          },
          "iban": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Iban",
            "description": "IBAN Account number of the supplier."
          },
          "bank_account": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bank Account",
            "description": "Bank account number of the supplier."
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "Indicates the currency of the supplier (e.g. EUR)."
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active",
            "default": true
          },
          "addresses": {
            "items": {
              "$ref": "#/components/schemas/backbone_common__models__common__AddressItemIn"
            },
            "type": "array",
            "title": "Addresses"
          },
          "account_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Account Number"
          }
        },
        "type": "object",
        "required": [
          "name",
          "addresses"
        ],
        "title": "SupplierItemIn"
      },
      "SupplierItemOut": {
        "properties": {
          "external_reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "External Reference"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name",
            "description": "Only used when the supplier is an individual (is_company=false). Indicates the first name of the supplier."
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name",
            "description": "Only used when the supplier is an individual (is_company=false). Indicates the last name of the supplier."
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "function": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Function",
            "description": "Only used when the supplier is an individual (is_company=false). Indicates the function of the supplier."
          },
          "is_company": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Company",
            "description": "Indicates if the supplier is an individual or a company.",
            "default": true
          },
          "company_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Id",
            "description": "Only used when the supplier is an individual (is_company=false). Indicates the id of the company linked to the supplier."
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "mobile": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mobile"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "Format: ISO 639-1 codes."
          },
          "internal_notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Internal Notes"
          },
          "website": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Website"
          },
          "vat": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vat"
          },
          "iban": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Iban",
            "description": "IBAN Account number of the supplier."
          },
          "bank_account": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bank Account",
            "description": "Bank account number of the supplier."
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "Indicates the currency of the supplier (e.g. EUR)."
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active",
            "default": true
          },
          "addresses": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/backbone_common__models__common__AddressItemOut"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Addresses",
            "default": []
          },
          "account_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Account Number"
          },
          "company_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Number"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "last_updated_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Updated On",
            "description": "The last time the supplier has been updated."
          }
        },
        "type": "object",
        "title": "SupplierItemOut"
      },
      "SupplierItemUpdate": {
        "properties": {
          "external_reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "External Reference"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name",
            "description": "Only used when the supplier is an individual (is_company=false). Indicates the first name of the supplier."
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name",
            "description": "Only used when the supplier is an individual (is_company=false). Indicates the last name of the supplier."
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "function": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Function",
            "description": "Only used when the supplier is an individual (is_company=false). Indicates the function of the supplier."
          },
          "is_company": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Company",
            "description": "Indicates if the supplier is an individual or a company.",
            "default": true
          },
          "company_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Id",
            "description": "Only used when the supplier is an individual (is_company=false). Indicates the id of the company linked to the supplier."
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "mobile": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mobile"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "Format: ISO 639-1 codes."
          },
          "internal_notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Internal Notes"
          },
          "website": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Website"
          },
          "vat": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vat"
          },
          "iban": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Iban",
            "description": "IBAN Account number of the supplier."
          },
          "bank_account": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bank Account",
            "description": "Bank account number of the supplier."
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "Indicates the currency of the supplier (e.g. EUR)."
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active",
            "default": true
          },
          "addresses": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AddressItemOut-Input"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Addresses",
            "default": []
          }
        },
        "type": "object",
        "title": "SupplierItemUpdate"
      },
      "SyncConsumerItem": {
        "properties": {
          "syncid": {
            "type": "string",
            "format": "uuid",
            "title": "Syncid"
          },
          "sync_name": {
            "type": "string",
            "title": "Sync Name",
            "description": "Name of the sync"
          },
          "status": {
            "$ref": "#/components/schemas/SyncConsumerStatus",
            "description": "Indicates whether the consumer has setup the sync. If the setup is complete, it will return 'active'. Otherwise 'inactive'.",
            "default": "inactive"
          },
          "status_details": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Details",
            "description": "Gives additional information if the status is inactive"
          },
          "link_createdon": {
            "type": "string",
            "format": "date-time",
            "title": "Link Createdon",
            "description": "Date on which the consumer first navigated to the link to setup the sync"
          },
          "link_mappings": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ReadSyncMappingItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link Mappings",
            "description": "Values of the mappings requested for the sync for the specific consumer"
          },
          "link_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link Metadata",
            "description": "Metadata passed during creation"
          },
          "enabled_flows": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ReadFlowConsumerItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enabled Flows",
            "description": "List of flows that the consumer has enabled"
          }
        },
        "type": "object",
        "required": [
          "syncid",
          "sync_name",
          "link_createdon"
        ],
        "title": "SyncConsumerItem"
      },
      "SyncConsumerStatus": {
        "type": "string",
        "enum": [
          "active",
          "inactive"
        ],
        "title": "SyncConsumerStatus"
      },
      "TaxRateItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id in Chift"
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "label": {
            "type": "string",
            "title": "Label"
          },
          "rate": {
            "type": "number",
            "title": "Rate"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref",
          "label",
          "rate"
        ],
        "title": "TaxRateItem"
      },
      "Token": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type"
          },
          "expires_in": {
            "type": "integer",
            "title": "Expires In"
          },
          "expires_on": {
            "type": "integer",
            "title": "Expires On"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "token_type",
          "expires_in",
          "expires_on"
        ],
        "title": "Token"
      },
      "TotalTaxItem": {
        "properties": {
          "tax_rate": {
            "type": "string",
            "title": "Tax Rate",
            "description": "Tax rate",
            "examples": [
              "10"
            ]
          },
          "tax_amount": {
            "type": "string",
            "title": "Tax Amount",
            "description": "Tax amount",
            "examples": [
              "1"
            ]
          },
          "total": {
            "type": "string",
            "title": "Total",
            "description": "Total amount including tax",
            "examples": [
              "11"
            ]
          }
        },
        "type": "object",
        "required": [
          "tax_rate",
          "tax_amount",
          "total"
        ],
        "title": "TotalTaxItem"
      },
      "TransactionAccountingCategory": {
        "type": "string",
        "enum": [
          "all",
          "unknown",
          "payout",
          "payout_cancel",
          "payment",
          "payment_cancel",
          "fee",
          "fee_cancel",
          "invoice"
        ],
        "title": "TransactionAccountingCategory"
      },
      "TransactionFilterDateType": {
        "type": "string",
        "enum": [
          "value_date",
          "execution_date"
        ],
        "title": "TransactionFilterDateType"
      },
      "TransactionItemOut": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id in Chift"
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "total": {
            "type": "number",
            "title": "Total",
            "description": "Total amount incl. fee"
          },
          "fee": {
            "type": "number",
            "title": "Fee",
            "description": "Total fee"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Currency"
          },
          "exchange_rate": {
            "type": "number",
            "title": "Exchange Rate",
            "description": "Exchange rate"
          },
          "create_date": {
            "type": "string",
            "format": "date-time",
            "title": "Create Date",
            "description": "Create Date"
          },
          "application_type": {
            "type": "string",
            "title": "Application Type",
            "description": "Type of the transaction as recorded in the target software"
          },
          "accounting_category": {
            "$ref": "#/components/schemas/TransactionAccountingCategory",
            "description": "Accounting category"
          },
          "refund_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refund Id"
          },
          "payment_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref",
          "total",
          "fee",
          "currency",
          "exchange_rate",
          "create_date",
          "application_type",
          "accounting_category"
        ],
        "title": "TransactionItemOut"
      },
      "TransactionStatus": {
        "type": "string",
        "enum": [
          "failed",
          "pending",
          "success"
        ],
        "title": "TransactionStatus"
      },
      "TriggerResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "status",
          "message"
        ],
        "title": "TriggerResponse"
      },
      "TriggerType": {
        "type": "string",
        "enum": [
          "timer",
          "event"
        ],
        "title": "TriggerType"
      },
      "UpdateConsumerItem": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 80
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "internal_reference": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Internal Reference"
          },
          "redirect_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Redirect Url"
          }
        },
        "type": "object",
        "title": "UpdateConsumerItem"
      },
      "UpdateFlowConsumer": {
        "properties": {
          "triggerid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Triggerid",
            "default": "trigger-1"
          },
          "data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data",
            "description": "Object containing the configuration of the flow for the consumer",
            "default": {}
          }
        },
        "type": "object",
        "title": "UpdateFlowConsumer"
      },
      "UpdateOrderItem": {
        "properties": {
          "customer_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Id",
            "description": "Unique identifier of the customer",
            "examples": [
              "371ca583-d218-4900-b236-397532cf0e52"
            ]
          }
        },
        "type": "object",
        "title": "UpdateOrderItem"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VariantAttributeItem": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "name",
          "value"
        ],
        "title": "VariantAttributeItem"
      },
      "VariantAttributeOptionItem": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "values": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Values"
          }
        },
        "type": "object",
        "required": [
          "name",
          "values"
        ],
        "title": "VariantAttributeOptionItem"
      },
      "VariantItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id in Chift"
          },
          "source_ref": {
            "$ref": "#/components/schemas/Ref",
            "description": "Technical id in the target software"
          },
          "parent_id": {
            "type": "string",
            "title": "Parent Id",
            "description": "Technical id of the parent product in Chift"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "description_html": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Html"
          },
          "categories": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/backbone_common__models__commerce__common__ProductCategoryItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Categories",
            "default": []
          },
          "created_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created On"
          },
          "sku": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sku"
          },
          "barcode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Barcode"
          },
          "available_quantity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Available Quantity",
            "default": 0
          },
          "prices": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/backbone_common__models__commerce__common__ProductPriceItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prices",
            "default": []
          },
          "unit_cost": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProductCostItem"
              },
              {
                "type": "null"
              }
            ],
            "default": {}
          },
          "unit_of_measure": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit Of Measure"
          },
          "weight": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Weight",
            "default": 0
          },
          "weight_unit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Weight Unit"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProductStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "inventory_details": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/InventoryDetailsItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inventory Details",
            "default": []
          },
          "common_attributes": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/CommonAttributeItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Common Attributes",
            "description": "List of attributes that are shared by all variants of the product.",
            "default": []
          },
          "variant_attributes": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/VariantAttributeItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Variant Attributes",
            "description": "List of attributes that are specific to the variant of the product.",
            "default": []
          },
          "common_images": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ImageItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Common Images",
            "description": "List of images that are shared by all variants of the product.",
            "default": []
          },
          "variant_images": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ImageItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Variant Images",
            "description": "List of images that are specific to the variant of the product.",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_ref",
          "parent_id",
          "name"
        ],
        "title": "VariantItem"
      },
      "VatCodeScope": {
        "type": "string",
        "enum": [
          "nat",
          "eu",
          "int",
          "unknown"
        ],
        "title": "VatCodeScope"
      },
      "VatCodeType": {
        "type": "string",
        "enum": [
          "sale",
          "purchase",
          "both",
          "unknown"
        ],
        "title": "VatCodeType"
      },
      "WebhookInstanceGetItem": {
        "properties": {
          "webhookid": {
            "type": "string",
            "format": "uuid",
            "title": "Webhookid"
          },
          "accountid": {
            "type": "string",
            "format": "uuid",
            "title": "Accountid"
          },
          "createdby": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Createdby"
          },
          "createdon": {
            "type": "string",
            "format": "date-time",
            "title": "Createdon"
          },
          "event": {
            "type": "string",
            "title": "Event"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "integrationid": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Integrationid"
          }
        },
        "type": "object",
        "required": [
          "webhookid",
          "accountid",
          "createdon",
          "event",
          "url",
          "status"
        ],
        "title": "WebhookInstanceGetItem"
      },
      "WebhookInstancePatchItem": {
        "properties": {
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Status"
              },
              {
                "type": "null"
              }
            ]
          },
          "url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "signingsecret": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Signingsecret"
          }
        },
        "type": "object",
        "title": "WebhookInstancePatchItem"
      },
      "WebhookInstancePostItem": {
        "properties": {
          "event": {
            "type": "string",
            "maxLength": 80,
            "title": "Event"
          },
          "url": {
            "type": "string",
            "maxLength": 500,
            "title": "Url"
          },
          "signingsecret": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Signingsecret"
          },
          "integrationid": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Integrationid",
            "description": "Can be used to specify the integration code of a specific connector. This is mandatory in case you create a webhook related to a specific One API."
          }
        },
        "type": "object",
        "required": [
          "event",
          "url"
        ],
        "title": "WebhookInstancePostItem"
      },
      "WebhookItem": {
        "properties": {
          "event": {
            "type": "string",
            "title": "Event"
          },
          "api": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Api"
          }
        },
        "type": "object",
        "required": [
          "event"
        ],
        "title": "WebhookItem"
      },
      "WebhookLogItem": {
        "properties": {
          "webhooklogid": {
            "type": "string",
            "format": "uuid",
            "title": "Webhooklogid"
          },
          "webhookid": {
            "type": "string",
            "format": "uuid",
            "title": "Webhookid"
          },
          "event": {
            "type": "string",
            "title": "Event"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "accountid": {
            "type": "string",
            "title": "Accountid"
          },
          "createdon": {
            "type": "string",
            "format": "date-time",
            "title": "Createdon"
          },
          "httpstatus": {
            "type": "integer",
            "title": "Httpstatus"
          },
          "integrationid": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Integrationid"
          }
        },
        "type": "object",
        "required": [
          "webhooklogid",
          "webhookid",
          "event",
          "url",
          "accountid",
          "createdon",
          "httpstatus"
        ],
        "title": "WebhookLogItem"
      },
      "WelfareFund": {
        "properties": {
          "rate": {
            "type": "number",
            "title": "Rate",
            "description": "Rate"
          },
          "amount": {
            "type": "number",
            "title": "Amount",
            "description": "Amount"
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WelfareFundType"
              },
              {
                "type": "null"
              }
            ],
            "description": "Type"
          }
        },
        "type": "object",
        "required": [
          "rate",
          "amount"
        ],
        "title": "WelfareFund"
      },
      "WelfareFundType": {
        "type": "string",
        "enum": [
          "TC01",
          "TC02",
          "TC03",
          "TC04",
          "TC05",
          "TC06",
          "TC07",
          "TC08",
          "TC09",
          "TC10",
          "TC11",
          "TC12",
          "TC13",
          "TC14",
          "TC15",
          "TC16",
          "TC17",
          "TC18",
          "TC19",
          "TC20",
          "TC21",
          "TC22"
        ],
        "title": "WelfareFundType"
      },
      "WithholdingTax": {
        "properties": {
          "rate": {
            "type": "number",
            "title": "Rate",
            "description": "Rate"
          },
          "amount": {
            "type": "number",
            "title": "Amount",
            "description": "Amount"
          },
          "reason": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WithholdingTaxReason"
              },
              {
                "type": "null"
              }
            ],
            "description": "Reason"
          },
          "payment_reason": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WithholdingTaxPaymentReason"
              },
              {
                "type": "null"
              }
            ],
            "description": "Payment reason"
          }
        },
        "type": "object",
        "required": [
          "rate",
          "amount"
        ],
        "title": "WithholdingTax"
      },
      "WithholdingTaxPaymentReason": {
        "type": "string",
        "enum": [
          "A",
          "U",
          "R",
          "Q",
          "H",
          "V",
          "V2",
          "I",
          "J",
          "K",
          "P",
          "S",
          "T",
          "W",
          "X",
          "Y",
          "B",
          "C",
          "D",
          "E",
          "F",
          "G",
          "L",
          "L1",
          "M",
          "M1",
          "M2",
          "IN",
          "O",
          "O1",
          "V1"
        ],
        "title": "WithholdingTaxPaymentReason"
      },
      "WithholdingTaxReason": {
        "type": "string",
        "enum": [
          "RT01",
          "RT02",
          "RT03",
          "RT04",
          "RT05",
          "RT06"
        ],
        "title": "WithholdingTaxReason"
      },
      "backbone_api__app__routers__connections__ConnectionItem": {
        "properties": {
          "connectionid": {
            "type": "string",
            "format": "uuid",
            "title": "Connectionid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "integration": {
            "type": "string",
            "title": "Integration"
          },
          "integrationid": {
            "type": "integer",
            "title": "Integrationid"
          },
          "api": {
            "type": "string",
            "title": "Api"
          },
          "data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "agent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LocalAgentInfo"
              },
              {
                "type": "null"
              }
            ],
            "description": "For local agent only. Indicates whether the local agent is up and running"
          }
        },
        "type": "object",
        "required": [
          "connectionid",
          "name",
          "integration",
          "integrationid",
          "api",
          "status"
        ],
        "title": "ConnectionItem"
      },
      "backbone_api__app__routers__syncs__ConnectionItem": {
        "properties": {
          "one_api": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "One Api"
          },
          "connection_type": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connection Type"
          },
          "display_order": {
            "type": "integer",
            "title": "Display Order",
            "default": 0
          },
          "display_hidden": {
            "type": "boolean",
            "title": "Display Hidden",
            "default": false
          }
        },
        "type": "object",
        "title": "ConnectionItem"
      },
      "backbone_common__models__accounting__common__InvoiceType": {
        "type": "string",
        "enum": [
          "customer_invoice",
          "customer_refund",
          "supplier_invoice",
          "supplier_refund"
        ],
        "title": "InvoiceType"
      },
      "backbone_common__models__commerce__common__AddressItemIn": {
        "properties": {
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          },
          "street": {
            "type": "string",
            "title": "Street"
          },
          "number": {
            "type": "string",
            "title": "Number"
          },
          "box": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Box"
          },
          "city": {
            "type": "string",
            "title": "City"
          },
          "postal_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postal Code"
          },
          "country": {
            "type": "string",
            "title": "Country",
            "description": "Format: ISO 3166-1 codes."
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          }
        },
        "type": "object",
        "required": [
          "first_name",
          "last_name",
          "street",
          "number",
          "city",
          "country"
        ],
        "title": "AddressItemIn"
      },
      "backbone_common__models__commerce__common__AddressItemOut": {
        "properties": {
          "address_type": {
            "$ref": "#/components/schemas/AddressType"
          },
          "company_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Name"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "street": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Street"
          },
          "number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number"
          },
          "box": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Box"
          },
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City"
          },
          "postal_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postal Code"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country",
            "description": "Format: ISO 3166-1 codes."
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          }
        },
        "type": "object",
        "required": [
          "address_type"
        ],
        "title": "AddressItemOut"
      },
      "backbone_common__models__commerce__common__DiscountItem": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "amount": {
            "type": "number",
            "title": "Amount"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "amount"
        ],
        "title": "DiscountItem"
      },
      "backbone_common__models__commerce__common__ProductCategoryItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Technical id of the category in Chift"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "ProductCategoryItem"
      },
      "backbone_common__models__commerce__common__ProductPriceItem": {
        "properties": {
          "currency": {
            "type": "string",
            "title": "Currency"
          },
          "price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "currency"
        ],
        "title": "ProductPriceItem"
      },
      "backbone_common__models__common__AddressItemIn": {
        "properties": {
          "address_type": {
            "$ref": "#/components/schemas/AddressType"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number"
          },
          "box": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Box"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "mobile": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mobile"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "street": {
            "type": "string",
            "title": "Street"
          },
          "city": {
            "type": "string",
            "title": "City"
          },
          "postal_code": {
            "type": "string",
            "title": "Postal Code"
          },
          "country": {
            "type": "string",
            "title": "Country",
            "description": "Format: ISO 3166-1 codes."
          }
        },
        "type": "object",
        "required": [
          "address_type",
          "street",
          "city",
          "postal_code",
          "country"
        ],
        "title": "AddressItemIn"
      },
      "backbone_common__models__common__AddressItemOut": {
        "properties": {
          "address_type": {
            "$ref": "#/components/schemas/AddressType"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number"
          },
          "box": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Box"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "mobile": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mobile"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "street": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Street"
          },
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City"
          },
          "postal_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postal Code"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country",
            "description": "Format: ISO 3166-1 codes."
          }
        },
        "type": "object",
        "required": [
          "address_type"
        ],
        "title": "AddressItemOut"
      },
      "backbone_common__models__invoicing__common__InvoiceType": {
        "type": "string",
        "enum": [
          "customer_invoice",
          "customer_refund",
          "supplier_invoice",
          "supplier_refund",
          "all"
        ],
        "title": "InvoiceType"
      },
      "backbone_common__models__payment__common__PaymentStatus": {
        "type": "string",
        "enum": [
          "pending",
          "completed",
          "canceled",
          "failed",
          "unknown",
          "authorized"
        ],
        "title": "PaymentStatus"
      },
      "backbone_common__models__pos__common__ProductCategoryItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Unique identifier of the category",
            "examples": [
              "371ca583-d218-4900-b236-397532cf0e52"
            ]
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Name given to the category",
            "examples": [
              "Pizza"
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description of the category",
            "examples": [
              "Delicious pizza"
            ]
          },
          "id_parent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id Parent",
            "description": "Indicates if the category belongs to a parent category",
            "examples": [
              "371ca583-d218-4900-b236-397532cf0e55"
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "ProductCategoryItem"
      },
      "backbone_common__models__pos__common__ProductPriceItem": {
        "properties": {
          "unit_price": {
            "type": "string",
            "title": "Unit Price",
            "description": "Unit price (without tax) of the product",
            "examples": [
              10
            ]
          },
          "tax_rate": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tax Rate",
            "description": "Tax rate applied to the product",
            "examples": [
              10
            ]
          }
        },
        "type": "object",
        "required": [
          "unit_price"
        ],
        "title": "ProductPriceItem"
      },
      "backbone_common__models__pos_pms__DiscountItem": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Name of the discount",
            "examples": [
              "Percentage discount"
            ]
          },
          "total": {
            "type": "string",
            "title": "Total",
            "description": "Total amount of the discount",
            "examples": [
              10
            ]
          },
          "type": {
            "$ref": "#/components/schemas/DiscountType",
            "description": "Type of the discount",
            "default": "UNKNOWN",
            "examples": [
              "offered"
            ]
          }
        },
        "type": "object",
        "required": [
          "total"
        ],
        "title": "DiscountItem"
      },
      "backbone_common__models__pos_pms__PaymentStatus": {
        "type": "string",
        "enum": [
          "Pending",
          "Completed",
          "Canceled",
          "Failed",
          "Unknown",
          "Authorised"
        ],
        "title": "PaymentStatus"
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "This access token needs to be included in each of your request to the Chift API."
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}