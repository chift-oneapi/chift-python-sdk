name: CI

on:
  workflow_dispatch: {}
  push:
    branches:
      - main
      - feature/**
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*
  pull_request:
    branches:
      - main
      - feature/**

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: lint
        run: make fmtcheck

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Test with pytest
        run: make test
        env:
          CHIFT_BACKBONE_API: ${{ secrets.CHIFT_BACKBONE_API }}
          CHIFT_TESTING_ACCOUNTID: ${{ secrets.CHIFT_TESTING_ACCOUNTID }}
          CHIFT_TESTING_CLIENTID: ${{ secrets.CHIFT_TESTING_CLIENTID }}
          CHIFT_TESTING_CLIENTSECRET: ${{ secrets.CHIFT_TESTING_CLIENTSECRET }}

      - name: Calculate and publish coverage
        run: make coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}

  publish:
    name: Publish
    if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/v')
    needs: [test, lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Build and publish with twine
        run: make publish
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}